cscope 15 $HOME/Desktop/theMessenger/themessenger               0000378497
	@BuddyList.h

1 #i‚de‡
_BUDDYLYST_H


2 
	#_BUDDYLYST_H


	)

4 
	~"buddy.h
"

8 
	eS‹tBy


10 
	mByName
 = 0,

11 
	mByTÆkedRe˚¡ly
,

12 
	mBySètus
,

13 
	mByJoöedRe˚¡ly


16 ˛as†
	cc_BuddyLi°


18 
	mpublic
:

19 
	$c_BuddyLi°
()

20 :
	`m_sBuddõs
(
NULL
),

21 
	`m_iNumbî
(0)

24 ~
	$c_BuddyLi°
()

26 
dñëe
 [] 
m_sBuddõs
;

27 
	}
};

29 
GëBuddõs
(c⁄° 
c_YPackë
& 
ªcv∑ck
);

31 
	$S‹t
(
S‹tBy
 
s‹tmëhod
)const;

33 
c_Buddy
& 
›î©‹
[](
numbî
)const;

36 
¥iv©e
:

37 
c_Buddy
* 
m_sBuddõs
;

38 
m_iNumbî
;

40 
	}
};

	@action.h

1 #i‚de‡
_ACTION_H


2 
	#_ACTION_H


	)

4 
«me•a˚
 
	gA˘i⁄


6 
	eA˘i⁄Sètus


8 
	gCREATED
 = 0,

9 
	gDONE
,

10 
	gPENDING
,

11 
	gSTARTED


13 
	eA˘i⁄Ty≥


15 
	gLOGIN
 = 0,

16 
	gLOGOUT
,

17 
	gGETBUDDYLIST
,

18 
	gSETSTATUS
,

19 
	gGETSTATUS


22 
	ePri‹ôy


24 
	gLOW
 = 0,

25 
	gNORMAL
,

26 
	gHIGH


29 ˛as†
	cc_A˘i⁄


31 
	gpublic
:

33 
c_A˘i⁄
(
¥i‹ôy
 = 
NORMAL
 , 
°©us
 = 
CREATED
) :

34 
m_iPri‹ôy
(
¥i‹ôy
),

35 
m_iSètus
(
°©us
)

38 
	gvútuÆ
 ~
c_A˘i⁄
() {};

40 
GëSètus
()const

41 {  
	gm_iSètus
; };

43 
SëSètus
(c⁄° 
°©us
)

44 { 
	gm_iSètus
 = 
°©us
; };

46 
vútuÆ
 
Execuã
() = 0;

48 
SëPri‹ôy
(c⁄° 
¥i‹ôy
)

49 { 
	gm_iPri‹ôy
 = 
¥i‹ôy
; }

51 
GëPri‹ôy
()const

52 {  
	gm_iPri‹ôy
; };

54 
	g¥Ÿe˘ed
:

55 
m_iPri‹ôy
;

56 
	gm_iSètus
;

	@bits.h

1 #i‚de‡
_BITS_H


2 
	#_BITS_H


	)

5 ˛as†
	cBôs


7 
	mpublic
:

9 
ölöe
 
	$Sw≠Byãs
(
buf
)

11  ((
buf
>>8)&0xff) | ((buf << 8)&0xff00);

14 
ölöe
 
	$Sw≠Byãs
(
buf
)

16 ((
buf
 & 0xff)<<24) | ((buf & 0xff00)<<8) | ((buf & 0xff0000)>>8) | ((buf >> 24) & 0xff);

17 
	}
};

19 
	$SëBô
(
buf
, c⁄° 
pos
)

21 
buf
 = bu‡| ( 0x00000001 << (8-
pos
) );

22 
	}
};

24 
	$SëBô
(
buf
, c⁄° 
pos
)

26 
buf
 = bu‡| ( 0x00000001 << (32-
pos
) );

27 
	}
};

29 
	$CÀ¨Bô
(
buf
,c⁄° 
pos
)

31 
buf
 = bu‡& ~–0x00000001 << (8-
pos
) );

32 
	}
};

34 
	$CÀ¨Bô
(
buf
,c⁄° 
pos
)

36 
buf
 = bu‡& ~–0x00000001 << (32-
pos
) );

37 
	}
};

41 
ölöe
 
	$mem£t_öt
(* 
de°
,
öãgî
,
size
)

43 
öãgî
 = 
	`Sw≠Byãs
(integer);

44 * 
byã
 = 
ªöãΩªt_ˇ°
<*>(&
öãgî
);

45 
i
=0;i<
size
;i++)

47 
de°
[
i
] = 
byã
[i%4];

49 
	}
};

53 
ölöe
 
	$mem£t_sh‹t
(* 
de°
,
sh‹töt
,
size
)

55 
sh‹töt
 = 
	`Sw≠Byãs
(shortint);

56 * 
byã
 = 
ªöãΩªt_ˇ°
<*> (&
sh‹töt
);

57 
i
=0;i<
size
;i++)

59 
de°
[
i
] = 
byã
[i%2];

61 
	}
};

	@buddy.h

1 #i‚de‡
_BUDDY_H


2 
	#_BUDDY_H


	)

4 
	~<°rög
>

5 
	~"y∑ckë.h
"

7 
usög
 
«me•a˚
 
	gYPackë
;

9 ˛as†
	cc_Buddy


11 
	mpublic
:

13 
	$c_Buddy
(c⁄° 
°rög
 &
«me
,c⁄° såög& 
group
,c⁄° såög 
°©us
,c⁄° 
y°©us
,c⁄° 
‹dî
)

14 :
	`m_iOrdî
(
‹dî
),

15 
	`m_sGroup
(
group
),

16 
	`m_sName
(
«me
),

17 
	`m_sSètus
(
°©us
),

18 
	$m_iYSètus
(
y°©us
)

21 ~
	$c_Buddy
(Ë{ 
	}
};

24 
	$SëName
(c⁄° 
°rög
& 
«me
)

25 { 
m_sName
 = 
«me
; 
	}
};

27 
	g°rög
& 
	$GëName
()const

28 {  
m_sName
; 
	}
};

30 
	$SëGroup
(c⁄° 
°rög
& 
group
)

31 { 
m_sGroup
 = 
group
; 
	}
};

33 
	g°rög
& 
	$GëGroup
()const

34 {  
m_sGroup
; 
	}
};

36 
	$GëOrdî
()const

37 {  
m_iOrdî
; 
	}
};

39 
	$SëOrdî
(c⁄° 
‹dî
)

40 { 
m_iOrdî
 = 
‹dî
; 
	}
};

42 
	$SëYSètus
(
yahoo_°©us
 
°©us
)

43 { 
m_iSètus
 = 
°©us
; 
	}
};

45 
yahoo_°©us
 
	$GëYahooSètus
()const

46 {  
m_iSètus
; 
	}
};

49 
	g¥iv©e
:

50 
m_iOrdî
;

51 
°rög
 
	gm_sGroup
;

52 
°rög
 
	gm_sName
;

53 
°rög
 
	gm_sSètus
;

54 
yahoo_°©us
 
	gm_iYSètus
;

55 
boﬁ
 
	gm_bisO∆öe
;

56 
	gm_iIdÀTime
;

	@config.h

1 #i‚de‡
_CONFIG_H


2 
	#_CONFIG_H


	)

4 
«me•a˚
 
	gc⁄fig


6 
	#PORT
 5050

	)

7 
	#SERVER_ADDRESS
 "66.163.181.176"

	)

	@login.h

1 #i‚de‡
_LOGIN_H


2 
	#_LOGIN_H


	)

4 
	~<°rög
>

5 
	~<li°
>

7 
	~"y∑ckë.h
"

8 
	~"a˘i⁄.h
"

9 
	~"sockë.h
"

12 
usög
 
«me•a˚
 
	gA˘i⁄
;

13 
usög
 
«me•a˚
 
	gYPackë
;

14 
usög
 
«me•a˚
 
	g°d
;

16 ˛as†
	cc_Logö
 : 
public
 
c_A˘i⁄


18 
public
:

19 
c_Logö
(
c_Sockë
* 
sockë
,* 
u£∫ame
,* 
∑ssw‹d
);

20 ~
c_Logö
();

21 
Execuã
();

23 
	m¥iv©e
:

24 
ölöe
 
Cª©eSídFú°AuthPackë
();

25 
ölöe
 
RecvAndSídAuthRe•⁄£
();

26 
ölöe
 
Cª©eAuthRe•⁄£
(
c_YPackë
& 
∑ckë
);

27 
GëBuddyLi°
();

28 
GëBuddõs
(*
li°_buf„r
);

31 
ölöe
 
MagicShô
(*,*,*);

33 
	m¥iv©e
:

34 
c_Sockë
 *
m_cSockë
;

35 * 
	mm_sU£∫ame
;

36 * 
	mm_sPassw‹d
;

37 
	mli°
<
	m°rög
> 
	mm_cBuddyLi°
;

	@magic_shit.h

1 
	#IDENT
 1

	)

2 
	#XOR
 2

	)

3 
	#MULADD
 3

	)

4 
	#LOOKUP
 4

	)

5 
	#BITFLD
 5

	)

7 #i‚de‡
MIN


8 
	#MIN
(
x
,
y
Ë((x)<(y)?(x):(y))

	)

11 #i‚de‡
MAX


12 
	#MAX
(
x
,
y
Ë((x)>(y)?(x):(y))

	)

15 c⁄° 
	gmd5_ß…_¥efix
[] = "$1$";

16 c⁄° 
	gb64t
[65] ="./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

18 
	syahoo_‚


20 
	mty≥
;

21 
	m¨g1
, 
	m¨g2
;

24 
yahoo_x‰m
–
èbÀ
, 
dïth
, 
£ed
 );

25 *
yahoo_¸y±
(*
key
, *
ß…
);

26 
to_y64
(*
out
, c⁄° *
ö
, 
öÀn
);

	@md5.c

40 #i‡
HAVE_CONFIG_H


41 
	~<c⁄fig.h
>

44 
	~"md5.h
"

45 
	~"°rögs.h
"

47 #i‡
STDC_HEADERS


48 
	~<°rög.h
>

50 #i‡!
HAVE_STRCHR


51 
	#°rchr
 
ödex


	)

52 
	#°ºchr
 
rödex


	)

54 *
°rchr
 (), *
°ºchr
 ();

55 #i‡!
HAVE_MEMCPY


56 
	#mem˝y
(
d
, 
s
, 
n
Ë
	`bc›y
 ((s), (d), (n))

	)

57 
	#memmove
(
d
, 
s
, 
n
Ë
	`bc›y
 ((s), (d), (n))

	)

61 #ifde‡
TEST


67 
	$maö
()

69 c⁄° *c⁄° 
ã°
[7] = {

79 
i
;

81 
i
 = 0; i < 7; ++i) {

82 
md5_°©e_t
 
°©e
;

83 
md5_byã_t
 
dige°
[16];

84 
di
;

86 
	`md5_öô
(&
°©e
);

87 
	`md5_≠≥nd
(&
°©e
, (c⁄° 
md5_byã_t
 *)
ã°
[
i
], 
	`°æí
(test[i]));

88 
	`md5_föish
(&
°©e
, 
dige°
);

89 
	`¥ötf
("MD5 (\"%s\"Ë", 
ã°
[
i
]);

90 
di
 = 0; di < 16; ++di)

91 
	`¥ötf
("%02x", 
dige°
[
di
]);

92 
	`¥ötf
("\n");

95 
	}
}

103 
	~<m©h.h
>

104 
	$maö
()

106 
i
;

107 
i
 = 1; i <= 64; ++i) {

108 
v
 = ()(4294967296.0 * 
	`Ábs
(
	`sö
(()
i
)));

109 
	`¥ötf
("#deföêT%d 0x%08lx\n", 
i
, 
v
);

112 
	}
}

117 
	#T1
 0xd76Ø478

	)

118 
	#T2
 0xe8c7b756

	)

119 
	#T3
 0x242070db

	)

120 
	#T4
 0xc1bd˚ì

	)

121 
	#T5
 0xf57c0Áf

	)

122 
	#T6
 0x4787c62a

	)

123 
	#T7
 0xa8304613

	)

124 
	#T8
 0xfd469501

	)

125 
	#T9
 0x698098d8

	)

126 
	#T10
 0x8b44f7af

	)

127 
	#T11
 0xffff5bb1

	)

128 
	#T12
 0x895cd7be

	)

129 
	#T13
 0x6b901122

	)

130 
	#T14
 0xfd987193

	)

131 
	#T15
 0xa679438e

	)

132 
	#T16
 0x49b40821

	)

133 
	#T17
 0xf61e2562

	)

134 
	#T18
 0xc040b340

	)

135 
	#T19
 0x265e5a51

	)

136 
	#T20
 0xe9b6c7Ø

	)

137 
	#T21
 0xd62f105d

	)

138 
	#T22
 0x02441453

	)

139 
	#T23
 0xd8a1e681

	)

140 
	#T24
 0xe7d3fbc8

	)

141 
	#T25
 0x21e1cde6

	)

142 
	#T26
 0xc33707d6

	)

143 
	#T27
 0xf4d50d87

	)

144 
	#T28
 0x455a14ed

	)

145 
	#T29
 0xa9e3e905

	)

146 
	#T30
 0xf˚Á3f8

	)

147 
	#T31
 0x676f02d9

	)

148 
	#T32
 0x8d2a4c8a

	)

149 
	#T33
 0xffÁ3942

	)

150 
	#T34
 0x8771f681

	)

151 
	#T35
 0x6d9d6122

	)

152 
	#T36
 0xfde5380c

	)

153 
	#T37
 0xa4bìa44

	)

154 
	#T38
 0x4bdecÁ9

	)

155 
	#T39
 0xf6bb4b60

	)

156 
	#T40
 0xbebfbc70

	)

157 
	#T41
 0x289b7ec6

	)

158 
	#T42
 0xóa127Á

	)

159 
	#T43
 0xd4ef3085

	)

160 
	#T44
 0x04881d05

	)

161 
	#T45
 0xd9d4d039

	)

162 
	#T46
 0xe6db99e5

	)

163 
	#T47
 0x1Á27cf8

	)

164 
	#T48
 0xc4ac5665

	)

165 
	#T49
 0xf4292244

	)

166 
	#T50
 0x432aff97

	)

167 
	#T51
 0xab9423a7

	)

168 
	#T52
 0xfc93a039

	)

169 
	#T53
 0x655b59c3

	)

170 
	#T54
 0x8f0ccc92

	)

171 
	#T55
 0xf„ff47d

	)

172 
	#T56
 0x85845dd1

	)

173 
	#T57
 0x6Á87e4f

	)

174 
	#T58
 0x„2˚6e0

	)

175 
	#T59
 0xa3014314

	)

176 
	#T60
 0x4e0811a1

	)

177 
	#T61
 0xf7537e82

	)

178 
	#T62
 0xbd3af235

	)

179 
	#T63
 0x2ad7d2bb

	)

180 
	#T64
 0xeb86d391

	)

183 
	$md5_¥o˚ss
(
md5_°©e_t
 *
pms
, c⁄° 
md5_byã_t
 *
d©a
 )

185 
md5_w‹d_t


186 
a
 = 
pms
->
abcd
[0], 
b
 =Öms->abcd[1],

187 
c
 = 
pms
->
abcd
[2], 
d
 =Öms->abcd[3];

188 
md5_w‹d_t
 
t
;

190 #i‚de‡
ARCH_IS_BIG_ENDIAN


191 
	#ARCH_IS_BIG_ENDIAN
 1

	)

193 #i‡
ARCH_IS_BIG_ENDIAN


199 
md5_w‹d_t
 
X
[16];

200 c⁄° 
md5_byã_t
 *
xp
 = 
d©a
;

201 
i
;

203 
i
 = 0; i < 16; ++i, 
xp
 += 4)

204 
X
[
i
] = 
xp
[0] + (xp[1] << 8) + (xp[2] << 16) + (xp[3] << 24);

212 
md5_w‹d_t
 
xbuf
[16];

213 c⁄° 
md5_w‹d_t
 *
X
;

215 i‡(!((
d©a
 - (c⁄° 
md5_byã_t
 *)0) & 3)) {

217 
X
 = (c⁄° 
md5_w‹d_t
 *)
d©a
;

220 
	`mem˝y
(
xbuf
, 
d©a
, 64);

221 
X
 = 
xbuf
;

225 
	#ROTATE_LEFT
(
x
, 
n
Ë(((xË<< (n)Ë| ((xË>> (32 - (n))))

	)

230 
	#F
(
x
, 
y
, 
z
Ë(((xË& (y)Ë| (~(xË& (z)))

	)

231 
	#SET
(
a
, 
b
, 
c
, 
d
, 
k
, 
s
, 
Ti
)\

232 
t
 = 
a
 + 
	`F
(
b
,
c
,
d
Ë+ 
X
[
k
] + 
Ti
;\

233 
a
 = 
	`ROTATE_LEFT
(
t
, 
s
Ë+ 
b


	)

235 
	`SET
(
a
, 
b
, 
c
, 
d
, 0, 7, 
T1
);

236 
	`SET
(
d
, 
a
, 
b
, 
c
, 1, 12, 
T2
);

237 
	`SET
(
c
, 
d
, 
a
, 
b
, 2, 17, 
T3
);

238 
	`SET
(
b
, 
c
, 
d
, 
a
, 3, 22, 
T4
);

239 
	`SET
(
a
, 
b
, 
c
, 
d
, 4, 7, 
T5
);

240 
	`SET
(
d
, 
a
, 
b
, 
c
, 5, 12, 
T6
);

241 
	`SET
(
c
, 
d
, 
a
, 
b
, 6, 17, 
T7
);

242 
	`SET
(
b
, 
c
, 
d
, 
a
, 7, 22, 
T8
);

243 
	`SET
(
a
, 
b
, 
c
, 
d
, 8, 7, 
T9
);

244 
	`SET
(
d
, 
a
, 
b
, 
c
, 9, 12, 
T10
);

245 
	`SET
(
c
, 
d
, 
a
, 
b
, 10, 17, 
T11
);

246 
	`SET
(
b
, 
c
, 
d
, 
a
, 11, 22, 
T12
);

247 
	`SET
(
a
, 
b
, 
c
, 
d
, 12, 7, 
T13
);

248 
	`SET
(
d
, 
a
, 
b
, 
c
, 13, 12, 
T14
);

249 
	`SET
(
c
, 
d
, 
a
, 
b
, 14, 17, 
T15
);

250 
	`SET
(
b
, 
c
, 
d
, 
a
, 15, 22, 
T16
);

251 #unde‡
SET


256 
	#G
(
x
, 
y
, 
z
Ë(((xË& (z)Ë| ((yË& ~(z)))

	)

257 
	#SET
(
a
, 
b
, 
c
, 
d
, 
k
, 
s
, 
Ti
)\

258 
t
 = 
a
 + 
	`G
(
b
,
c
,
d
Ë+ 
X
[
k
] + 
Ti
;\

259 
a
 = 
	`ROTATE_LEFT
(
t
, 
s
Ë+ 
b


	)

261 
	`SET
(
a
, 
b
, 
c
, 
d
, 1, 5, 
T17
);

262 
	`SET
(
d
, 
a
, 
b
, 
c
, 6, 9, 
T18
);

263 
	`SET
(
c
, 
d
, 
a
, 
b
, 11, 14, 
T19
);

264 
	`SET
(
b
, 
c
, 
d
, 
a
, 0, 20, 
T20
);

265 
	`SET
(
a
, 
b
, 
c
, 
d
, 5, 5, 
T21
);

266 
	`SET
(
d
, 
a
, 
b
, 
c
, 10, 9, 
T22
);

267 
	`SET
(
c
, 
d
, 
a
, 
b
, 15, 14, 
T23
);

268 
	`SET
(
b
, 
c
, 
d
, 
a
, 4, 20, 
T24
);

269 
	`SET
(
a
, 
b
, 
c
, 
d
, 9, 5, 
T25
);

270 
	`SET
(
d
, 
a
, 
b
, 
c
, 14, 9, 
T26
);

271 
	`SET
(
c
, 
d
, 
a
, 
b
, 3, 14, 
T27
);

272 
	`SET
(
b
, 
c
, 
d
, 
a
, 8, 20, 
T28
);

273 
	`SET
(
a
, 
b
, 
c
, 
d
, 13, 5, 
T29
);

274 
	`SET
(
d
, 
a
, 
b
, 
c
, 2, 9, 
T30
);

275 
	`SET
(
c
, 
d
, 
a
, 
b
, 7, 14, 
T31
);

276 
	`SET
(
b
, 
c
, 
d
, 
a
, 12, 20, 
T32
);

277 #unde‡
SET


282 
	#H
(
x
, 
y
, 
z
Ë((xË^ (yË^ (z))

	)

283 
	#SET
(
a
, 
b
, 
c
, 
d
, 
k
, 
s
, 
Ti
)\

284 
t
 = 
a
 + 
	`H
(
b
,
c
,
d
Ë+ 
X
[
k
] + 
Ti
;\

285 
a
 = 
	`ROTATE_LEFT
(
t
, 
s
Ë+ 
b


	)

287 
	`SET
(
a
, 
b
, 
c
, 
d
, 5, 4, 
T33
);

288 
	`SET
(
d
, 
a
, 
b
, 
c
, 8, 11, 
T34
);

289 
	`SET
(
c
, 
d
, 
a
, 
b
, 11, 16, 
T35
);

290 
	`SET
(
b
, 
c
, 
d
, 
a
, 14, 23, 
T36
);

291 
	`SET
(
a
, 
b
, 
c
, 
d
, 1, 4, 
T37
);

292 
	`SET
(
d
, 
a
, 
b
, 
c
, 4, 11, 
T38
);

293 
	`SET
(
c
, 
d
, 
a
, 
b
, 7, 16, 
T39
);

294 
	`SET
(
b
, 
c
, 
d
, 
a
, 10, 23, 
T40
);

295 
	`SET
(
a
, 
b
, 
c
, 
d
, 13, 4, 
T41
);

296 
	`SET
(
d
, 
a
, 
b
, 
c
, 0, 11, 
T42
);

297 
	`SET
(
c
, 
d
, 
a
, 
b
, 3, 16, 
T43
);

298 
	`SET
(
b
, 
c
, 
d
, 
a
, 6, 23, 
T44
);

299 
	`SET
(
a
, 
b
, 
c
, 
d
, 9, 4, 
T45
);

300 
	`SET
(
d
, 
a
, 
b
, 
c
, 12, 11, 
T46
);

301 
	`SET
(
c
, 
d
, 
a
, 
b
, 15, 16, 
T47
);

302 
	`SET
(
b
, 
c
, 
d
, 
a
, 2, 23, 
T48
);

303 #unde‡
SET


308 
	#I
(
x
, 
y
, 
z
Ë((yË^ ((xË| ~(z)))

	)

309 
	#SET
(
a
, 
b
, 
c
, 
d
, 
k
, 
s
, 
Ti
)\

310 
t
 = 
a
 + 
	`I
(
b
,
c
,
d
Ë+ 
X
[
k
] + 
Ti
;\

311 
a
 = 
	`ROTATE_LEFT
(
t
, 
s
Ë+ 
b


	)

313 
	`SET
(
a
, 
b
, 
c
, 
d
, 0, 6, 
T49
);

314 
	`SET
(
d
, 
a
, 
b
, 
c
, 7, 10, 
T50
);

315 
	`SET
(
c
, 
d
, 
a
, 
b
, 14, 15, 
T51
);

316 
	`SET
(
b
, 
c
, 
d
, 
a
, 5, 21, 
T52
);

317 
	`SET
(
a
, 
b
, 
c
, 
d
, 12, 6, 
T53
);

318 
	`SET
(
d
, 
a
, 
b
, 
c
, 3, 10, 
T54
);

319 
	`SET
(
c
, 
d
, 
a
, 
b
, 10, 15, 
T55
);

320 
	`SET
(
b
, 
c
, 
d
, 
a
, 1, 21, 
T56
);

321 
	`SET
(
a
, 
b
, 
c
, 
d
, 8, 6, 
T57
);

322 
	`SET
(
d
, 
a
, 
b
, 
c
, 15, 10, 
T58
);

323 
	`SET
(
c
, 
d
, 
a
, 
b
, 6, 15, 
T59
);

324 
	`SET
(
b
, 
c
, 
d
, 
a
, 13, 21, 
T60
);

325 
	`SET
(
a
, 
b
, 
c
, 
d
, 4, 6, 
T61
);

326 
	`SET
(
d
, 
a
, 
b
, 
c
, 11, 10, 
T62
);

327 
	`SET
(
c
, 
d
, 
a
, 
b
, 2, 15, 
T63
);

328 
	`SET
(
b
, 
c
, 
d
, 
a
, 9, 21, 
T64
);

329 #unde‡
SET


334 
pms
->
abcd
[0] +
a
;

335 
pms
->
abcd
[1] +
b
;

336 
pms
->
abcd
[2] +
c
;

337 
pms
->
abcd
[3] +
d
;

338 
	}
}

341 
	$md5_öô
(
md5_°©e_t
 *
pms
)

343 
pms
->
cou¡
[0] =Öms->count[1] = 0;

344 
pms
->
abcd
[0] = 0x67452301;

345 
pms
->
abcd
[1] = 0xefcdab89;

346 
pms
->
abcd
[2] = 0x98badcfe;

347 
pms
->
abcd
[3] = 0x10325476;

348 
	}
}

351 
	$md5_≠≥nd
(
md5_°©e_t
 *
pms
, c⁄° 
md5_byã_t
 *
d©a
, 
nbyãs
)

353 c⁄° 
md5_byã_t
 *
p
 = 
d©a
;

354 
À·
 = 
nbyãs
;

355 
off£t
 = (
pms
->
cou¡
[0] >> 3) & 63;

356 
md5_w‹d_t
 
nbôs
 = (md5_w‹d_t)(
nbyãs
 << 3);

358 i‡(
nbyãs
 <= 0)

362 
pms
->
cou¡
[1] +
nbyãs
 >> 29;

363 
pms
->
cou¡
[0] +
nbôs
;

364 i‡(
pms
->
cou¡
[0] < 
nbôs
)

365 
pms
->
cou¡
[1]++;

368 i‡(
off£t
) {

369 
c›y
 = (
off£t
 + 
nbyãs
 > 64 ? 64 - offset :Çbytes);

371 
	`mem˝y
(
pms
->
buf
 + 
off£t
, 
p
, 
c›y
);

372 i‡(
off£t
 + 
c›y
 < 64)

374 
p
 +
c›y
;

375 
À·
 -
c›y
;

376 
	`md5_¥o˚ss
(
pms
,Öms->
buf
);

380 ; 
À·
 >64; 
p
 += 64,Üeft -= 64)

381 
	`md5_¥o˚ss
(
pms
, 
p
);

384 i‡(
À·
)

385 
	`mem˝y
(
pms
->
buf
, 
p
, 
À·
);

386 
	}
}

389 
md5_föish
(
md5_°©e_t
 *
pms
, 
md5_byã_t
 
dige°
[16])

391 c⁄° 
md5_byã_t
 
	g∑d
[64] = {

397 
md5_byã_t
 
	gd©a
[8];

398 
	gi
;

401 
	gi
 = 0; i < 8; ++i)

402 
	gd©a
[
i
] = (
md5_byã_t
)(
pms
->
cou¡
[i >> 2] >> ((i & 3) << 3));

404 
md5_≠≥nd
(
pms
, 
∑d
, ((55 - (pms->
cou¡
[0] >> 3)) & 63) + 1);

406 
md5_≠≥nd
(
pms
, 
d©a
, 8);

407 
	gi
 = 0; i < 16; ++i)

408 
	gdige°
[
i
] = (
md5_byã_t
)(
pms
->
abcd
[i >> 2] >> ((i & 3) << 3));

	@md5.h

42 #i‚de‡
md5_INCLUDED


43 
	#md5_INCLUDED


	)

53 
	tmd5_byã_t
;

54 
	tmd5_w‹d_t
;

57 
	smd5_°©e_s
 {

58 
md5_w‹d_t
 
	mcou¡
[2];

59 
md5_w‹d_t
 
	mabcd
[4];

60 
md5_byã_t
 
	mbuf
[64];

61 } 
	tmd5_°©e_t
;

63 #ifde‡
__˝lu•lus


69 #ifde‡
P1


70 
md5_öô
(
P1
(
md5_°©e_t
 *
pms
));

72 
md5_öô
(
md5_°©e_t
 *
pms
);

76 #ifde‡
P3


77 
md5_≠≥nd
(
P3
(
md5_°©e_t
 *
pms
, c⁄° 
md5_byã_t
 *
d©a
, 
nbyãs
));

79 
md5_≠≥nd
(
md5_°©e_t
 *
pms
, c⁄° 
md5_byã_t
 *
d©a
, 
nbyãs
);

83 #ifde‡
P2


84 
md5_föish
(
P2
(
md5_°©e_t
 *
pms
, 
md5_byã_t
 
dige°
[16]));

86 
md5_föish
(
md5_°©e_t
 *
pms
, 
md5_byã_t
 
dige°
[16]);

89 #ifde‡
__˝lu•lus


	@message_base.h

1 #i‚de‡
_MESSAGE_BASE_H


2 
	#_MESSAGE_BASE_H


	)

4 
	~<°rög.h
>

5 
	~<io°ªam
>

7 
usög
 
«me•a˚
 
	g°d
;

9 ˛as†
	cc_Mesßge


11 
	mpublic
:

15 
c_Mesßge
(c⁄° 
sz
 = 0)

16 :
	$m_iSize
(
sz
)

18 
m_sBuf„r
 = 
√w
 [
m_iSize
];

23 
	$c_Mesßge
(* 
mesßge
)

25 
m_iSize
 = 
	`°æí
(
mesßge
);

26 
m_sBuf„r
 = 
√w
 [
m_iSize
];

27 
	`mem˝y
(
m_sBuf„r
,
mesßge
,
m_iSize
);

28 
	}
};

32 
	$c_Mesßge
(c⁄° 
c_Mesßge
 &
ms
)

34 
m_iSize
 = 
ms
.
	`GëSize
();

35 
m_sBuf„r
 = 
√w
 [
m_iSize
];

36 
	`mem˝y
(
m_sBuf„r
,
ms
.
	`GëBuf„r
(),
m_iSize
);

37 
	}
};

41 c⁄° 
	gc_Mesßge
& 
	g›î©‹
=(c⁄° 
c_Mesßge
& 
msg
)

43 if–
this
 !&
msg
 )

45 
dñëe
 [] 
m_sBuf„r
;

46 
	gm_iSize
=
msg
.
GëSize
();

47 
	gm_sBuf„r
 = 
√w
 [
m_iSize
];

48 
mem˝y
(
m_sBuf„r
,
msg
.
GëBuf„r
(),
m_iSize
);

50  *
	gthis
;

55 
	$SëBuf„r
(*
buf
,
size
)

57 
	`mem˝y
(
m_sBuf„r
,
buf
,
size
);

58 
	}
};

62 
	gvútuÆ
 ~
	$c_Mesßge
()

64 
dñëe
 [] 
m_sBuf„r
;

65 
	}
};

69 
ölöe
 * 
	$GëBuf„r
()const

70 {  
m_sBuf„r
; 
	}
};

74 
ölöe
 
	$GëSize
()const

75 {  
m_iSize
; 
	}
};

79 
vútuÆ
 
	$PrötAsSåög
()

81 
cout
<<
m_sBuf„r
<<
ídl
;

82 
	}
};

86 
vútuÆ
 
	$PrötAsHex
()

88 
i
=0;i<
m_iSize
;i++)

89 
	`Ârötf
(
°dout
, "%02X ", 
m_sBuf„r
[
i
]);

90 
cout
<<
ídl
;

91 
	}
};

95 
	$CÀ¨
()

97 
	`mem£t
(
m_sBuf„r
,0,
m_iSize
);

98 
	}
};

102 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
c_Mesßge
 &
msg
)

104 if–
this
 =&
msg
 )

105  
åue
;

106 if(
memcmp
(
m_sBuf„r
,
msg
.
GëBuf„r
(),
m_iSize
))

107  
	gåue
;

109  
	gÁl£
;

116 
	g¥Ÿe˘ed
:

118 
muèbÀ
 * 
m_sBuf„r
;

119 
muèbÀ
 
	gm_iSize
;

	@priorityQueue.h

1 #i‚de‡
_PRIORITY_QUEUE_H


2 
	#_PRIORITY_QUEUE_H


	)

4 
	~<c°dio
>

5 
	~"a˘i⁄.h
"

7 
usög
 
«me•a˚
 
	gA˘i⁄
;

12 
	gãm∂©e
 <
˛ass
 
	gT
>

13 ˛as†
	cQueue


15 
	mpublic
:

16 
Queue
();

17 ~
Queue
();

18 
In£π
(
T
 &
D©a
);

19 
	mT
& 
Remove
();

22 
boﬁ
 
	$isEm±y
()const

23 {  (
m_Taû
 !
NULL
Ë? 
åue
 : 
Ál£
 ; };

26 
¥iv©e
:

27 
	sñemít


29 
T
 
D©a
;

30 
ñemít
 *
Next
;

31 
	}

	t}EÀmít
;

32 
EÀmít
 *
	gm_Hód
,*
	gm_Taû
;

41 ˛as†
	cPri‹ôyQueue


43 
	mpublic
:

44 
Pri‹ôyQueue
(
¥i‹ôõs
);

45 ~
Pri‹ôyQueue
();

47 
In£π
(
c_A˘i⁄
 *
job
);

48 
c_A˘i⁄
* 
Remove
();

50 
	m¥iv©e
:

51 
Queue
 <
c_A˘i⁄
*> *
m_Queue
;

52 
	mm_Pri‹ôõs
;

	@sha.c

23 
	~"sha.h
"

25 
shaHashBlock
(
SHA_CTX
 *
˘x
);

27 
	$shaInô
(
SHA_CTX
 *
˘x
) {

28 
i
;

30 
˘x
->
ÀnW
 = 0;

31 
˘x
->
sizeHi
 = ctx->
sizeLo
 = 0;

35 
˘x
->
H
[0] = 0x67452301L;

36 
˘x
->
H
[1] = 0xefcdab89L;

37 
˘x
->
H
[2] = 0x98badcfeL;

38 
˘x
->
H
[3] = 0x10325476L;

39 
˘x
->
H
[4] = 0xc3d2e1f0L;

41 
i
 = 0; i < 80; i++)

42 
˘x
->
W
[
i
] = 0;

43 
	}
}

46 
	$shaUpd©e
(
SHA_CTX
 *
˘x
, *
d©aIn
, 
Àn
) {

47 
i
;

51 
i
 = 0; i < 
Àn
; i++) {

52 
˘x
->
W
[˘x->
ÀnW
 / 4] <<= 8;

53 
˘x
->
W
[˘x->
ÀnW
 / 4] |(
uöt32
)
d©aIn
[
i
];

54 i‡((++
˘x
->
ÀnW
) % 64 == 0) {

55 
	`shaHashBlock
(
˘x
);

56 
˘x
->
ÀnW
 = 0;

58 
˘x
->
sizeLo
 += 8;

59 
˘x
->
sizeHi
 +(˘x->
sizeLo
 < 8);

61 
	}
}

64 
shaFöÆ
(
SHA_CTX
 *
˘x
, 
hashout
[20]) {

65 
	g∑d0x80
 = 0x80;

66 
	g∑d0x00
 = 0x00;

67 
	g∑dÀn
[8];

68 
	gi
;

72 
	g∑dÀn
[0] = ()((
˘x
->
sizeHi
 >> 24) & 255);

73 
	g∑dÀn
[1] = ()((
˘x
->
sizeHi
 >> 16) & 255);

74 
	g∑dÀn
[2] = ()((
˘x
->
sizeHi
 >> 8) & 255);

75 
	g∑dÀn
[3] = ()((
˘x
->
sizeHi
 >> 0) & 255);

76 
	g∑dÀn
[4] = ()((
˘x
->
sizeLo
 >> 24) & 255);

77 
	g∑dÀn
[5] = ()((
˘x
->
sizeLo
 >> 16) & 255);

78 
	g∑dÀn
[6] = ()((
˘x
->
sizeLo
 >> 8) & 255);

79 
	g∑dÀn
[7] = ()((
˘x
->
sizeLo
 >> 0) & 255);

80 
shaUpd©e
(
˘x
, &
∑d0x80
, 1);

81 
	g˘x
->
	gÀnW
 != 56)

82 
shaUpd©e
(
˘x
, &
∑d0x00
, 1);

83 
shaUpd©e
(
˘x
, 
∑dÀn
, 8);

87 
	gi
 = 0; i < 20; i++) {

88 
	ghashout
[
i
] = ()(
˘x
->
H
[i / 4] >> 24);

89 
	g˘x
->
	gH
[
i
 / 4] <<= 8;

95 
shaInô
(
˘x
);

99 
shaBlock
(*
d©aIn
, 
Àn
, 
hashout
[20]) {

100 
SHA_CTX
 
	g˘x
;

102 
shaInô
(&
˘x
);

103 
shaUpd©e
(&
˘x
, 
d©aIn
, 
Àn
);

104 
shaFöÆ
(&
˘x
, 
hashout
);

108 
	#SHA_ROTL
(
X
,
n
Ë((((XË<< (n)Ë| ((XË>> (32-“)))Ë& 0xffffffffL)

	)

110 
	$shaHashBlock
(
SHA_CTX
 *
˘x
) {

111 
t
;

112 
uöt32
 
A
,
B
,
C
,
D
,
E
,
TEMP
;

114 
t
 = 16;Å <= 79;Å++)

115 
˘x
->
W
[
t
] =

116 
	`SHA_ROTL
(
˘x
->
W
[
t
-3] ^ ctx->W[t-8] ^ ctx->W[t-14] ^ ctx->W[t-16], 1);

118 
A
 = 
˘x
->
H
[0];

119 
B
 = 
˘x
->
H
[1];

120 
C
 = 
˘x
->
H
[2];

121 
D
 = 
˘x
->
H
[3];

122 
E
 = 
˘x
->
H
[4];

124 
t
 = 0;Å <= 19;Å++) {

125 
TEMP
 = (
	`SHA_ROTL
(
A
,5Ë+ (((
C
^
D
)&
B
)^DË+ 
E
 + 
˘x
->
W
[
t
] + 0x5a827999L) & 0xffffffffL;

126 
E
 = 
D
; D = 
C
; C = 
	`SHA_ROTL
(
B
, 30); B = 
A
; A = 
TEMP
;

128 
t
 = 20;Å <= 39;Å++) {

129 
TEMP
 = (
	`SHA_ROTL
(
A
,5Ë+ (
B
^
C
^
D
Ë+ 
E
 + 
˘x
->
W
[
t
] + 0x6ed9eba1L) & 0xffffffffL;

130 
E
 = 
D
; D = 
C
; C = 
	`SHA_ROTL
(
B
, 30); B = 
A
; A = 
TEMP
;

132 
t
 = 40;Å <= 59;Å++) {

133 
TEMP
 = (
	`SHA_ROTL
(
A
,5Ë+ ((
B
&
C
)|(
D
&(B|C))Ë+ 
E
 + 
˘x
->
W
[
t
] + 0x8f1bbcdcL) & 0xffffffffL;

134 
E
 = 
D
; D = 
C
; C = 
	`SHA_ROTL
(
B
, 30); B = 
A
; A = 
TEMP
;

136 
t
 = 60;Å <= 79;Å++) {

137 
TEMP
 = (
	`SHA_ROTL
(
A
,5Ë+ (
B
^
C
^
D
Ë+ 
E
 + 
˘x
->
W
[
t
] + 0xca62c1d6L) & 0xffffffffL;

138 
E
 = 
D
; D = 
C
; C = 
	`SHA_ROTL
(
B
, 30); B = 
A
; A = 
TEMP
;

141 
˘x
->
H
[0] +
A
;

142 
˘x
->
H
[1] +
B
;

143 
˘x
->
H
[2] +
C
;

144 
˘x
->
H
[3] +
D
;

145 
˘x
->
H
[4] +
E
;

146 
	}
}

	@sha.h

1 #i‡(
SIZEOF_INT
 == 4)

2 
	tuöt32
;

3 #ñi‡(
SIZEOF_SHORT
 == 4)

4 
	tuöt32
;

6 
	tuöt32
;

9 
°Ωrötsha
(*
de°
, *
hashvÆ
);

12 
uöt32
 
	mH
[5];

13 
uöt32
 
	mW
[80];

14 
	mÀnW
;

15 
uöt32
 
	msizeHi
,
	msizeLo
;

16 } 
	tSHA_CTX
;

18 
shaInô
(
SHA_CTX
 *
˘x
);

19 
shaUpd©e
(
SHA_CTX
 *
˘x
, *
d©aIn
, 
Àn
);

20 
shaFöÆ
(
SHA_CTX
 *
˘x
, 
hashout
[20]);

21 
shaBlock
(*
d©aIn
, 
Àn
, 
hashout
[20]);

	@socket.h

1 #i‚de‡
_SOCKET_H


2 
	#_SOCKET_H


	)

24 
	~<io°ªam
>

25 
	~<°rög
>

26 
	~"unix_°d_•a˚.h
"

27 
	~"c⁄fig.h
"

28 
	~"mesßge_ba£.h
"

29 
	~"y∑ckë.h
"

31 
usög
 
«me•a˚
 
	gunix_°d_•a˚
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
usög
 
«me•a˚
 
	gc⁄fig
;

36 
usög
 
«me•a˚
 
	gYPackë
;

38 ˛as†
	cc_Sockë


40 
	mpublic
:

41 
c_Sockë
();

42 
	mvútuÆ
 ~
c_Sockë
();

44 
vútuÆ
 
C⁄√˘
();

45 
Disc⁄√˘
();

47 
Wrôe
(c⁄° 
c_Mesßge
& 
mesßge
 );

48 
Síd
(c⁄° 
c_Mesßge
& ,c⁄° 
Êag
);

50 
Wrôe
(c⁄° 
c_YPackë
& 
d©a
);

52 
Ród
(
c_Mesßge
& 
mesßge
,c⁄° 
cou¡
);

53 
Recv
(
c_Mesßge
& 
mesßge
,c⁄° 
cou¡
,c⁄° 
Êag
);

55 
Ród
(
c_YPackë
& 
∑ckë
);

56 
Recv
(
c_YPackë
& 
∑ckë
,c⁄° 
Êag
);

58 
boﬁ
 
	$is_O≥√d
()const

59 {  
m_bSètus
; };

63 
¥iv©e
:

64 
m_iP‹t
;

65 
°rög
 *
m_sAddªss
 ;

66 
m_iSockëFd
;

67 
sockaddr_ö
 
m_tAddªss
;

68 
boﬁ
 
m_bSètus
;

71 
	}
};

74 ˛as†
	cc_Eº‹_Sockë


76 
	mpublic
:

77 
	$c_Eº‹_Sockë
(
ªt
,c⁄° 
°rög
& 
u£r_mesßge
)

79 
m_sU£rMesßge
 = 
√w
 
	`°rög
(
u£r_mesßge
);

80 if(
ªt
<0)

82 
m_sEº‹Mesßge
 = 
√w
 
	`°rög
(
	`°ªº‹
(
î∫o
));

86 
m_sEº‹Mesßge
 = 
√w
 
	`°rög
("");

90 ~
	$c_Eº‹_Sockë
()

92 
	`dñëe
(
m_sEº‹Mesßge
);

93 
	}
};

95 
	$PrötEº‹
()

97 
cout
<<"Eº‹ mesßgê:: "<<*
m_sU£rMesßge
<<*
m_sEº‹Mesßge
<<
ídl
;

98 
	}
};

100 
	g¥iv©e
:

101 
°rög
 *
m_sEº‹Mesßge
;

102 
°rög
 *
	gm_sU£rMesßge
;

	@thread.h

1 #i‚de‡
_THREAD_H


2 
	#_THREAD_H


	)

4 
	~<±hªad.h
>

5 
	~<°rög
>

6 
	~<io°ªam
>

7 
	~<î∫o.h
>

9 
usög
 
«me•a˚
 
	g°d
;

11 
˛ass
 
	gc_A˘i⁄
;

17 
	gãm∂©e
 <
˛ass
 
	gjob
,˛as†
	g∑ømëî
>

18 ˛as†
	cc_Thªad


20 
	mpublic
:

21 
c_Thªad
();

22 ~
c_Thªad
();

23 
Sèπ
();

24 
AddP¨amëî
(c⁄° 
∑ømëî
 *
∑øm
);

25 
Joö
();

26 
C™˚l
();

28 
	m¥iv©e
:

29 
±hªad_t
 
m_Id
;

30 
job
 *
	mm_A˘i⁄
;

31 
∑ømëî
* 
	mm_P¨amëî
;

34 
±hªad_©å_t
* 
	mm_Aâribuã
;

36 
	mm_iRëu∫VÆue
;

45 ˛as†
	cc_Eº‹_Thªad


47 
	mpublic
:

48 
	$c_Eº‹_Thªad
(
ªt
,c⁄° 
°rög
& 
u£r_mesßge
)

50 
m_sU£rMesßge
 = 
√w
 
	`°rög
(
u£r_mesßge
);

51 if(
ªt
<0)

53 
m_sEº‹Mesßge
 = 
√w
 
	`°rög
(
	`°ªº‹
(
î∫o
));

57 
m_sEº‹Mesßge
 = 
√w
 
	`°rög
("");

61 ~
	$c_Eº‹_Thªad
()

63 
dñëe
 
m_sEº‹Mesßge
;

64 
	}
};

66 
	$PrötEº‹
()

68 
cout
<<"Eº‹ mesßgê:: "<<*
m_sU£rMesßge
<<*
m_sEº‹Mesßge
<<
ídl
;

69 
	}
};

71 
	g¥iv©e
:

72 
°rög
 *
m_sEº‹Mesßge
;

73 
°rög
 *
	gm_sU£rMesßge
;

	@unix_std_space.h

1 #i‚de‡
_UNIX_STD_SPACE_H


2 
	#_UNIX_STD_SPACE_H


	)

4 
«me•a˚
 
	gunix_°d_•a˚


6 
	~<î∫o.h
>

7 
	~<sys/sockë.h
>

8 
	~<sys/un.h
>

9 
	~<°dlib.h
>

10 
	~<uni°d.h
>

11 
	~<√töë/ö.h
>

12 
	~<¨∑/öë.h
>

15 #ifde‡
LITLE_END


	@ypacket.h

1 #i‚de‡
_YPACKET_H


2 
	#_YPACKET_H


	)

4 
	~"mesßge_ba£.h
"

5 
	~"bôs.h
"

6 
«me•a˚
 
	gYPackë


9 
	#YAHOO_STD_SEPARATOR
 0xC080

	)

10 
	#YAHOO_VERSION
 0x000F0000

	)

11 
	#YAHOO_HEADER_SIZE
 20

	)

12 
	#YAHOO_PROTOCOL
 0x594D5347

	)

18 
	eyahoo_£rvi˚


20 
	gYAHOO_SERVICE_LOGON
 = 1,

21 
	gYAHOO_SERVICE_LOGOFF
,

22 
	gYAHOO_SERVICE_ISAWAY
,

23 
	gYAHOO_SERVICE_ISBACK
,

24 
	gYAHOO_SERVICE_IDLE
,

25 
	gYAHOO_SERVICE_MESSAGE
,

26 
	gYAHOO_SERVICE_IDACT
,

27 
	gYAHOO_SERVICE_IDDEACT
,

28 
	gYAHOO_SERVICE_MAILSTAT
,

29 
	gYAHOO_SERVICE_USERSTAT
,

30 
	gYAHOO_SERVICE_NEWMAIL
,

31 
	gYAHOO_SERVICE_CHATINVITE
,

32 
	gYAHOO_SERVICE_CALENDAR
,

33 
	gYAHOO_SERVICE_NEWPERSONALMAIL
,

34 
	gYAHOO_SERVICE_NEWCONTACT
,

35 
	gYAHOO_SERVICE_ADDIDENT
,

36 
	gYAHOO_SERVICE_ADDIGNORE
,

37 
	gYAHOO_SERVICE_PING
,

38 
	gYAHOO_SERVICE_GOTGROUPRENAME
,

39 
	gYAHOO_SERVICE_SYSMESSAGE
 = 0x14,

40 
	gYAHOO_SERVICE_PASSTHROUGH2
 = 0x16,

41 
	gYAHOO_SERVICE_CONFINVITE
 = 0x18,

42 
	gYAHOO_SERVICE_CONFLOGON
,

43 
	gYAHOO_SERVICE_CONFDECLINE
,

44 
	gYAHOO_SERVICE_CONFLOGOFF
,

45 
	gYAHOO_SERVICE_CONFADDINVITE
,

46 
	gYAHOO_SERVICE_CONFMSG
,

47 
	gYAHOO_SERVICE_CHATLOGON
,

48 
	gYAHOO_SERVICE_CHATLOGOFF
,

49 
	gYAHOO_SERVICE_CHATMSG
 = 0x20,

50 
	gYAHOO_SERVICE_GAMELOGON
 = 0x28,

51 
	gYAHOO_SERVICE_GAMELOGOFF
,

52 
	gYAHOO_SERVICE_GAMEMSG
 = 0x2a,

53 
	gYAHOO_SERVICE_FILETRANSFER
 = 0x46,

54 
	gYAHOO_SERVICE_VOICECHAT
 = 0x4A,

55 
	gYAHOO_SERVICE_NOTIFY
,

56 
	gYAHOO_SERVICE_VERIFY
,

57 
	gYAHOO_SERVICE_P2PFILEXFER
,

58 
	gYAHOO_SERVICE_PEERTOPEER
 = 0x4F,

59 
	gYAHOO_SERVICE_WEBCAM
,

60 
	gYAHOO_SERVICE_AUTHRESP
 = 0x54,

61 
	gYAHOO_SERVICE_LIST
,

62 
	gYAHOO_SERVICE_AUTH
 = 0x57,

63 
	gYAHOO_SERVICE_ADDBUDDY
 = 0x83,

64 
	gYAHOO_SERVICE_REMBUDDY
,

65 
	gYAHOO_SERVICE_IGNORECONTACT
,

66 
	gYAHOO_SERVICE_REJECTCONTACT
,

67 
	gYAHOO_SERVICE_GROUPRENAME
 = 0x89,

68 
	gYAHOO_SERVICE_CHATONLINE
 = 0x96,

69 
	gYAHOO_SERVICE_CHATGOTO
,

70 
	gYAHOO_SERVICE_CHATJOIN
,

71 
	gYAHOO_SERVICE_CHATLEAVE
,

72 
	gYAHOO_SERVICE_CHATEXIT
 = 0x9b,

73 
	gYAHOO_SERVICE_CHATLOGOUT
 = 0xa0,

74 
	gYAHOO_SERVICE_CHATPING
,

75 
	gYAHOO_SERVICE_COMMENT
 = 0xa8

79 
	eyahoo_°©us
 {

80 
	gYAHOO_STATUS_AVAILABLE
 = 0,

81 
	gYAHOO_STATUS_BRB
,

82 
	gYAHOO_STATUS_BUSY
,

83 
	gYAHOO_STATUS_NOTATHOME
,

84 
	gYAHOO_STATUS_NOTATDESK
,

85 
	gYAHOO_STATUS_NOTINOFFICE
,

86 
	gYAHOO_STATUS_ONPHONE
,

87 
	gYAHOO_STATUS_ONVACATION
,

88 
	gYAHOO_STATUS_OUTTOLUNCH
,

89 
	gYAHOO_STATUS_STEPPEDOUT
,

90 
	gYAHOO_STATUS_INVISIBLE
 = 12,

91 
	gYAHOO_STATUS_CUSTOM
 = 99,

92 
	gYAHOO_STATUS_IDLE
 = 999,

93 
	gYAHOO_STATUS_OFFLINE
 = 0x5a55aa56,

94 
	gYAHOO_STATUS_NOTIFY
 = 0x16

97 
	sy∑ck


99 
	gsize
;

100 
	g£rvi˚
;

101 
	g°©us
;

102 
	gid
;

103 * 
	gyd©a
;

104 } 
	ty∑ckë
;

106 
ölöe
 
GëYPackSize
(*
buf„r
)

108  
	gBôs
::
Sw≠Byãs
–*((*Ë(
buf„r
+8)));

111 ˛as†
	cc_YPackë
 : 
public
 
c_Mesßge


113 
public
:

114 
c_YPackë
(c⁄° 
size
,
yahoo_£rvi˚
,
yahoo_°©us
,
id
);

115 
c_YPackë
(c⁄° 
size
);

116 
c_YPackë
();

117 
	gvútuÆ
 ~
c_YPackë
();

119 
SëD©a
(* 
d©a
)

120 { 
	gm_y∑ck
.
	gyd©a
 = 
ªöãΩªt_ˇ°
<*> (
°rdup
–ªöãΩªt_ˇ°<c⁄° *>(
d©a
) )); };

122 * 
GëD©a
()const

123 {  
	gm_y∑ck
.
	gyd©a
; };

125 
GëD©aSize
()const

126 {  
	gm_y∑ck
.
	gsize
; };

128 
AddD©aPaú
(* 
key
,* 
vÆue
);

130 
GëD©aPaú
(* 
key
,* 
vÆue
)const;

132 
Sîülize
()const;

134 
De£rülize
(* 
buf„r
);

136 c⁄° 
boﬁ
 
isSîülized
()const

137 {  
	gm_bSîülized
; };

139 
SëPri‹ôy
(c⁄° 
¥i‹ôy
)

140 { 
	gm_iPri‹ôy
 = 
¥i‹ôy
; };

142 
GëPri‹ôy
()const

143 {  
	gm_iPri‹ôy
; };

145 
GëSîvi˚
()const

146 {  
	gm_y∑ck
.
	g£rvi˚
; };

148 
GëSètus
()const

149 {  
	gm_y∑ck
.
	g°©us
; };

151 
GëId
()const

152 {  
	gm_y∑ck
.
	gid
; };

155 
	g¥iv©e
:

156 
m_iPri‹ôy
 ;

157 
y∑ckë
 
	gm_y∑ck
;

158 
muèbÀ
 
boﬁ
 
	gm_bSîülized
;

159 
	gm_iByãIãøt‹
;

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 || deföed 
__LDBL_COMPAT
)

102 #ifde‡
__LDBL_COMPAT


104 #ifde‡
__USE_ISOC99


105 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

106 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

107 #ifde‡
__REDIRECT_NTH


108 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

109 
__∆dbl_√xâow¨df
)

110 
	`__©åibuã__
 ((
__c⁄°__
));

111 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

112 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

114 (
__x
, 
__y
),

115 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #unde‡
__MATHDECL_1


123 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

124 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

125 
¨gs
, 
Æüs
)

	)

126 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

127 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

130 #i‚de‡
_Ml⁄g_doubÀ_


131 
	#_Ml⁄g_doubÀ_
 

	)

133 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

134 #ifde‡
__STDC__


135 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

137 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

139 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

140 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

141 
	~<bôs/m©hˇŒs.h
>

142 #unde‡
_MdoubÀ_


143 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


144 #unde‡
_MdoubÀ_END_NAMESPACE


145 #unde‡
__MATH_PRECNAME


150 #unde‡
__MATHDECL_1


151 #unde‡
__MATHDECL


152 #unde‡
__MATHCALL


155 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


157 
signgam
;

162 #ifde‡
__USE_ISOC99


200 
FP_NAN
,

201 
	#FP_NAN
 
FP_NAN


	)

202 
FP_INFINITE
,

203 
	#FP_INFINITE
 
FP_INFINITE


	)

204 
FP_ZERO
,

205 
	#FP_ZERO
 
FP_ZERO


	)

206 
FP_SUBNORMAL
,

207 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

208 
FP_NORMAL


209 
	#FP_NORMAL
 
FP_NORMAL


	)

213 #ifde‡
__NO_LONG_DOUBLE_MATH


214 
	#Â˛assify
(
x
) \

215 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

217 
	#Â˛assify
(
x
) \

218 ( (
x
) ==  () \

219 ? 
	`__Â˛assifyf
 (
x
) \

220 :  (
x
) ==  () \

221 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

225 #ifde‡
__NO_LONG_DOUBLE_MATH


226 
	#signbô
(
x
) \

227 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

229 
	#signbô
(
x
) \

230 ( (
x
) ==  () \

231 ? 
	`__signbôf
 (
x
) \

232 :  (
x
) ==  () \

233 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

237 #ifde‡
__NO_LONG_DOUBLE_MATH


238 
	#isföôe
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

241 
	#isföôe
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__föôef
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

249 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

253 #ifde‡
__NO_LONG_DOUBLE_MATH


254 
	#i¢™
(
x
) \

255 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

257 
	#i¢™
(
x
) \

258 ( (
x
) ==  () \

259 ? 
	`__i¢™f
 (
x
) \

260 :  (
x
) ==  () \

261 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

265 #ifde‡
__NO_LONG_DOUBLE_MATH


266 
	#isöf
(
x
) \

267 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

269 
	#isöf
(
x
) \

270 ( (
x
) ==  () \

271 ? 
	`__isöff
 (
x
) \

272 :  (
x
) ==  () \

273 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

277 
	#MATH_ERRNO
 1

	)

278 
	#MATH_ERREXCEPT
 2

	)

282 #ifdef 
__USE_MISC


286 
_IEEE_
 = -1,

287 
_SVID_
,

288 
_XOPEN_
,

289 
_POSIX_
,

290 
_ISOC_


291 } 
	t_LIB_VERSION_TYPE
;

296 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

300 #ifde‡
__USE_SVID


306 #ifde‡
__˝lu•lus


307 
__ex˚±i⁄


309 
ex˚±i⁄


312 
ty≥
;

313 *
«me
;

314 
¨g1
;

315 
¨g2
;

316 
ªtvÆ
;

317 
	}
};

319 #ifde‡
__˝lu•lus


320 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

322 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

325 
	#X_TLOSS
 1.41484755040568800000e+16

	)

328 
	#DOMAIN
 1

	)

329 
	#SING
 2

	)

330 
	#OVERFLOW
 3

	)

331 
	#UNDERFLOW
 4

	)

332 
	#TLOSS
 5

	)

333 
	#PLOSS
 6

	)

336 
	#HUGE
 3.40282347e+38F

	)

340 #ifde‡
__USE_XOPEN


342 
	#MAXFLOAT
 3.40282347e+38F

	)

349 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


350 
	#M_E
 2.7182818284590452354

	)

351 
	#M_LOG2E
 1.4426950408889634074

	)

352 
	#M_LOG10E
 0.43429448190325182765

	)

353 
	#M_LN2
 0.69314718055994530942

	)

354 
	#M_LN10
 2.30258509299404568402

	)

355 
	#M_PI
 3.14159265358979323846

	)

356 
	#M_PI_2
 1.57079632679489661923

	)

357 
	#M_PI_4
 0.78539816339744830962

	)

358 
	#M_1_PI
 0.31830988618379067154

	)

359 
	#M_2_PI
 0.63661977236758134308

	)

360 
	#M_2_SQRTPI
 1.12837916709551257390

	)

361 
	#M_SQRT2
 1.41421356237309504880

	)

362 
	#M_SQRT1_2
 0.70710678118654752440

	)

368 #ifde‡
__USE_GNU


369 
	#M_El
 2.7182818284590452353602874713526625L

	)

370 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

371 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

372 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

373 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

374 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

375 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

376 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

377 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

378 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

379 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

380 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

381 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

388 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


389 
	#__NO_MATH_INLINES
 1

	)

392 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

399 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

400 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

401 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

402 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

403 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

404 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

408 #ifde‡
__USE_EXTERN_INLINES


409 
	~<bôs/m©hölöe.h
>

412 #ifde‡
__USE_ISOC99


416 #i‚de‡
isgª©î


417 
	#isgª©î
(
x
, 
y
) \

418 (
__exãnsi⁄__
 \

419 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

420 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

424 #i‚de‡
isgª©îequÆ


425 
	#isgª©îequÆ
(
x
, 
y
) \

426 (
__exãnsi⁄__
 \

427 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

428 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

432 #i‚de‡
i¶ess


433 
	#i¶ess
(
x
, 
y
) \

434 (
__exãnsi⁄__
 \

435 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

436 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

440 #i‚de‡
i¶es£quÆ


441 
	#i¶es£quÆ
(
x
, 
y
) \

442 (
__exãnsi⁄__
 \

443 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

444 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

448 #i‚de‡
i¶essgª©î


449 
	#i¶essgª©î
(
x
, 
y
) \

450 (
__exãnsi⁄__
 \

451 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

452 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

456 #i‚de‡
isun‹dîed


457 
	#isun‹dîed
(
u
, 
v
) \

458 (
__exãnsi⁄__
 \

459 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

460 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

465 
	g__END_DECLS


	@/usr/include/netinet/in.h

19 #i‚def 
_NETINET_IN_H


20 
	#_NETINET_IN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°döt.h
>

24 
	~<sys/sockë.h
>

25 
	~<bôs/ty≥s.h
>

28 
__BEGIN_DECLS


33 
	mIPPROTO_IP
 = 0,

34 
	#IPPROTO_IP
 
IPPROTO_IP


	)

35 
	mIPPROTO_HOPOPTS
 = 0,

36 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

37 
	mIPPROTO_ICMP
 = 1,

38 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

39 
	mIPPROTO_IGMP
 = 2,

40 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

41 
	mIPPROTO_IPIP
 = 4,

42 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

43 
	mIPPROTO_TCP
 = 6,

44 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

45 
	mIPPROTO_EGP
 = 8,

46 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

47 
	mIPPROTO_PUP
 = 12,

48 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

49 
	mIPPROTO_UDP
 = 17,

50 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

51 
	mIPPROTO_IDP
 = 22,

52 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

53 
	mIPPROTO_TP
 = 29,

54 
	#IPPROTO_TP
 
IPPROTO_TP


	)

55 
	mIPPROTO_IPV6
 = 41,

56 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

57 
	mIPPROTO_ROUTING
 = 43,

58 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

59 
	mIPPROTO_FRAGMENT
 = 44,

60 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

61 
	mIPPROTO_RSVP
 = 46,

62 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

63 
	mIPPROTO_GRE
 = 47,

64 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

65 
	mIPPROTO_ESP
 = 50,

66 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

67 
	mIPPROTO_AH
 = 51,

68 
	#IPPROTO_AH
 
IPPROTO_AH


	)

69 
	mIPPROTO_ICMPV6
 = 58,

70 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

71 
	mIPPROTO_NONE
 = 59,

72 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

73 
	mIPPROTO_DSTOPTS
 = 60,

74 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

75 
	mIPPROTO_MTP
 = 92,

76 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

77 
	mIPPROTO_ENCAP
 = 98,

78 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

79 
	mIPPROTO_PIM
 = 103,

80 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

81 
	mIPPROTO_COMP
 = 108,

82 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

83 
	mIPPROTO_SCTP
 = 132,

84 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

85 
	mIPPROTO_RAW
 = 255,

86 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

87 
	mIPPROTO_MAX


92 
uöt16_t
 
	tö_p‹t_t
;

97 
	mIPPORT_ECHO
 = 7,

98 
	mIPPORT_DISCARD
 = 9,

99 
	mIPPORT_SYSTAT
 = 11,

100 
	mIPPORT_DAYTIME
 = 13,

101 
	mIPPORT_NETSTAT
 = 15,

102 
	mIPPORT_FTP
 = 21,

103 
	mIPPORT_TELNET
 = 23,

104 
	mIPPORT_SMTP
 = 25,

105 
	mIPPORT_TIMESERVER
 = 37,

106 
	mIPPORT_NAMESERVER
 = 42,

107 
	mIPPORT_WHOIS
 = 43,

108 
	mIPPORT_MTP
 = 57,

110 
	mIPPORT_TFTP
 = 69,

111 
	mIPPORT_RJE
 = 77,

112 
	mIPPORT_FINGER
 = 79,

113 
	mIPPORT_TTYLINK
 = 87,

114 
	mIPPORT_SUPDUP
 = 95,

117 
	mIPPORT_EXECSERVER
 = 512,

118 
	mIPPORT_LOGINSERVER
 = 513,

119 
	mIPPORT_CMDSERVER
 = 514,

120 
	mIPPORT_EFSSERVER
 = 520,

123 
	mIPPORT_BIFFUDP
 = 512,

124 
	mIPPORT_WHOSERVER
 = 513,

125 
	mIPPORT_ROUTESERVER
 = 520,

128 
	mIPPORT_RESERVED
 = 1024,

131 
	mIPPORT_USERRESERVED
 = 5000

136 
uöt32_t
 
	tö_addr_t
;

137 
	sö_addr


139 
ö_addr_t
 
	ms_addr
;

148 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

149 
	#IN_CLASSA_NET
 0xff000000

	)

150 
	#IN_CLASSA_NSHIFT
 24

	)

151 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

152 
	#IN_CLASSA_MAX
 128

	)

154 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

155 
	#IN_CLASSB_NET
 0xffff0000

	)

156 
	#IN_CLASSB_NSHIFT
 16

	)

157 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

158 
	#IN_CLASSB_MAX
 65536

	)

160 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

161 
	#IN_CLASSC_NET
 0xffffff00

	)

162 
	#IN_CLASSC_NSHIFT
 8

	)

163 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

165 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

166 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

168 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

169 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

172 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

174 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

176 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

179 
	#IN_LOOPBACKNET
 127

	)

181 #i‚de‡
INADDR_LOOPBACK


182 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

186 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

187 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

188 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

189 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

193 
	sö6_addr


197 
uöt8_t
 
	mu6_addr8
[16];

198 
uöt16_t
 
	mu6_addr16
[8];

199 
uöt32_t
 
	mu6_addr32
[4];

200 } 
	mö6_u
;

201 
	#s6_addr
 
ö6_u
.
u6_addr8


	)

202 
	#s6_addr16
 
ö6_u
.
u6_addr16


	)

203 
	#s6_addr32
 
ö6_u
.
u6_addr32


	)

206 c⁄° 
ö6_addr
 
ö6addr_™y
;

207 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

208 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

209 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

211 
	#INET_ADDRSTRLEN
 16

	)

212 
	#INET6_ADDRSTRLEN
 46

	)

215 
	~<bôs/sockë.h
>

219 
	ssockaddr_ö


221 
__SOCKADDR_COMMON
 (
sö_
);

222 
ö_p‹t_t
 
	msö_p‹t
;

223 
ö_addr
 
	msö_addr
;

226 
	msö_zîo
[ (
sockaddr
) -

227 
__SOCKADDR_COMMON_SIZE
 -

228  (
ö_p‹t_t
) -

229  (
ö_addr
)];

233 
	ssockaddr_ö6


235 
__SOCKADDR_COMMON
 (
sö6_
);

236 
ö_p‹t_t
 
	msö6_p‹t
;

237 
uöt32_t
 
	msö6_Êowöfo
;

238 
ö6_addr
 
	msö6_addr
;

239 
uöt32_t
 
	msö6_sc›e_id
;

244 
	sù_mªq


247 
ö_addr
 
	mimr_mu…üddr
;

250 
ö_addr
 
	mimr_öãrÁ˚
;

253 
	sù_mªq_sour˚


256 
ö_addr
 
	mimr_mu…üddr
;

259 
ö_addr
 
	mimr_öãrÁ˚
;

262 
ö_addr
 
	mimr_sour˚addr
;

266 
	sùv6_mªq


269 
ö6_addr
 
	mùv6mr_mu…üddr
;

272 
	mùv6mr_öãrÁ˚
;

277 
	sgroup_ªq


280 
uöt32_t
 
	mgr_öãrÁ˚
;

283 
sockaddr_°‹age
 
	mgr_group
;

286 
	sgroup_sour˚_ªq


289 
uöt32_t
 
	mg§_öãrÁ˚
;

292 
sockaddr_°‹age
 
	mg§_group
;

295 
sockaddr_°‹age
 
	mg§_sour˚
;

300 
	sù_msfûãr


303 
ö_addr
 
	mimsf_mu…üddr
;

306 
ö_addr
 
	mimsf_öãrÁ˚
;

309 
uöt32_t
 
	mimsf_fmode
;

312 
uöt32_t
 
	mimsf_num§c
;

314 
ö_addr
 
	mimsf_¶i°
[1];

317 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

318 -  (
ö_addr
) \

319 + (
num§c
Ë*  (
ö_addr
))

	)

321 
	sgroup_fûãr


324 
uöt32_t
 
	mgf_öãrÁ˚
;

327 
sockaddr_°‹age
 
	mgf_group
;

330 
uöt32_t
 
	mgf_fmode
;

333 
uöt32_t
 
	mgf_num§c
;

335 
sockaddr_°‹age
 
	mgf_¶i°
[1];

338 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

339 -  (
sockaddr_°‹age
) \

340 + ((
num§c
) \

341 *  (
sockaddr_°‹age
)))

	)

345 
	~<bôs/ö.h
>

354 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

355 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

356 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

357 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

358 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

359 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

360 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

362 
	~<ídün.h
>

365 
	~<bôs/byãsw≠.h
>

367 #ifde‡
__OPTIMIZE__


371 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


374 
	#¡ohl
(
x
Ë(x)

	)

375 
	#¡ohs
(
x
Ë(x)

	)

376 
	#ht⁄l
(
x
Ë(x)

	)

377 
	#ht⁄s
(
x
Ë(x)

	)

379 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


380 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

381 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

382 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

383 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

388 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

389 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

390 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

391 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

392 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

394 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

395 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

396 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

397 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

398 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

400 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

402 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

403 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

404 =
	`ht⁄l
 (0x„800000))

	)

406 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

407 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

408 =
	`ht⁄l
 (0x„c00000))

	)

410 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

411 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

412 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

413 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

415 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

416 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

417 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

418 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

419 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

421 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

425 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

428 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

431 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

432 
__THROW
;

435 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

436 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

437 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

439 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

440 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

441 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

443 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

444 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

445 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

447 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

448 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

449 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

451 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

452 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

453 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

456 
	sö6_pktöfo


458 
ö6_addr
 
ùi6_addr
;

459 
ùi6_ifödex
;

463 
	sù6_mtuöfo


465 
sockaddr_ö6
 
ù6m_addr
;

466 
uöt32_t
 
ù6m_mtu
;

470 #ifde‡
__USE_GNU


472 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

473 
__THROW
 
__©åibuã_dïªˇãd__
;

474 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

475 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

476 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

477 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

478 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

479 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

480 
__mu…x
, 
__∂usy
)

481 
__THROW
 
__©åibuã_dïªˇãd__
;

482 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

483 
uöt8_t
 **
__çåp
)

484 
__THROW
 
__©åibuã_dïªˇãd__
;

485 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

486 
uöt8_t
 **
__çåp
, 
__ty≥
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

491 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

492 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

493 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

494 **
__d©abuÂ
Ë
__THROW
;

495 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

496 
__THROW
;

497 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

498 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

499 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

500 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

501 **
__d©abuÂ
Ë
__THROW
;

502 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

503 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

504 **
__d©abuÂ
Ë
__THROW
;

505 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

506 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

510 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

511 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

512 
__£gmíts
Ë
__THROW
;

513 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

514 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

515 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

516 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

517 
__THROW
;

523 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

524 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

525 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

526 
__THROW
;

529 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

530 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

531 
uöt32_t
 
__num§c
,

532 
__c⁄°
 
ö_addr
 *
__¶i°
)

533 
__THROW
;

537 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

538 
__c⁄°
 
sockaddr
 *
__group
,

539 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

540 
uöt32_t
 *
__num§c
,

541 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

544 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

545 
__c⁄°
 
sockaddr
 *
__group
,

546 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

547 
uöt32_t
 
__num§c
,

548 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

551 
__END_DECLS


	@/usr/include/pthread.h

19 #i‚de‡
_PTHREAD_H


20 
	#_PTHREAD_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	#__√ed_sig£t_t


	)

27 
	~<sig«l.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #ifde‡
__USE_UNIX98


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_GNU


68 
	mPTHREAD_MUTEX_STALLED_NP
,

69 
	mPTHREAD_MUTEX_ROBUST_NP


74 #ifde‡
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__WORDSIZE
 == 64

87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


122 #i‡
__WORDSIZE
 == 64

123 
	#PTHREAD_RWLOCK_INITIALIZER
 \

124 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

129 #ifde‡
__USE_GNU


130 #i‡
__WORDSIZE
 == 64

131 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

133 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, 0 } }

	)

145 
	mPTHREAD_INHERIT_SCHED
,

146 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

147 
	mPTHREAD_EXPLICIT_SCHED


148 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

155 
	mPTHREAD_SCOPE_SYSTEM
,

156 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

157 
	mPTHREAD_SCOPE_PROCESS


158 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

165 
	mPTHREAD_PROCESS_PRIVATE
,

166 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

167 
	mPTHREAD_PROCESS_SHARED


168 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

174 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

178 
	s_±hªad_˛ónup_buf„r


180 (*
	m__routöe
) (*);

181 *
	m__¨g
;

182 
	m__ˇn˚…y≥
;

183 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

189 
	mPTHREAD_CANCEL_ENABLE
,

190 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

191 
	mPTHREAD_CANCEL_DISABLE


192 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

196 
	mPTHREAD_CANCEL_DEFERRED
,

197 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

198 
	mPTHREAD_CANCEL_ASYNCHRONOUS


199 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

201 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

205 
	#PTHREAD_ONCE_INIT
 0

	)

208 #ifde‡
__USE_XOPEN2K


212 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

216 
__BEGIN_DECLS


221 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

222 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

223 *(*
__°¨t_routöe
) (*),

224 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

230 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

238 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

240 #ifde‡
__USE_GNU


243 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

251 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

252 
__c⁄°
 
time•ec
 *
__ab°ime
);

259 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

263 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

266 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

274 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

282 *
__dëach°©e
)

283 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

287 
__dëach°©e
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

293 
size_t
 *
__gu¨dsize
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

297 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

298 
size_t
 
__gu¨dsize
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


304 
__©å
,

305 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

309 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

310 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


311 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

314 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


315 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

316 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

319 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1));

323 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


324 
__©å
, *
__ª°ri˘
 
__öhîô
)

325 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

328 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

329 
__öhîô
)

330 
__THROW
 
	`__n⁄nuŒ
 ((1));

334 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

335 *
__ª°ri˘
 
__sc›e
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

339 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1));

343 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


344 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

351 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

352 *
__°ackaddr
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

356 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


357 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

358 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

364 
size_t
 
__°acksize
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1));

367 #ifde‡
__USE_XOPEN2K


369 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

370 **
__ª°ri˘
 
__°ackaddr
,

371 
size_t
 *
__ª°ri˘
 
__°acksize
)

372 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

377 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

378 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

381 #ifde‡
__USE_GNU


384 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

385 
size_t
 
__˝u£tsize
,

386 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

391 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

392 
size_t
 
__˝u£tsize
,

393 
˝u_£t_t
 *
__˝u£t
)

394 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

400 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

401 
__THROW
 
	`__n⁄nuŒ
 ((2));

409 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

410 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

411 
__THROW
 
	`__n⁄nuŒ
 ((3));

414 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

415 *
__ª°ri˘
 
__pﬁicy
,

416 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

420 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

421 
__THROW
;

424 #ifde‡
__USE_UNIX98


426 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

429 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

432 #ifde‡
__USE_GNU


437 
	$±hªad_yõld
 (Ë
__THROW
;

442 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

443 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

444 
__THROW
 
	`__n⁄nuŒ
 ((3));

447 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

448 
˝u_£t_t
 *
__˝u£t
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3));

462 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

463 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

474 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

478 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

481 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

486 
	`±hªad_ã°ˇn˚l
 ();

495 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

496 
__mask_was_ßved
;

497 } 
__ˇn˚l_jmp_buf
[1];

498 *
__∑d
[4];

499 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

502 #i‚de‡
__˛ónup_f˘_©åibuã


503 
	#__˛ónup_f˘_©åibuã


	)

508 
	s__±hªad_˛ónup_‰ame


510 (*
__ˇn˚l_routöe
) (*);

511 *
__ˇn˚l_¨g
;

512 
__do_ô
;

513 
__ˇn˚l_ty≥
;

516 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


517 #ifde‡
__˝lu•lus


519 ˛as†
	c__±hªad_˛ónup_˛ass


521 (*
__ˇn˚l_routöe
) (*);

522 *
__ˇn˚l_¨g
;

523 
__do_ô
;

524 
__ˇn˚l_ty≥
;

526 
public
:

527 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

528 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	`__do_ô
 (1) { }

529 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

530 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

531 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

532 &
__ˇn˚l_ty≥
); 
	}
}

533 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

543 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

545 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

549 
	#±hªad_˛ónup_p›
(
execuã
) \

550 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

551 } 0)

	)

553 #ifde‡
__USE_GNU


557 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

559 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

560 
__˛‰ame
.
	`__de„r
 ()

	)

565 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

566 
__˛‰ame
.
	`__ª°‹e
 (); \

567 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

568 } 0)

	)

575 
__ölöe
 

576 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

578 i‡(
__‰ame
->
__do_ô
)

579 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

580 
	}
}

589 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

592 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

593 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

594 .
__do_ô
 = 1 };

	)

598 
	#±hªad_˛ónup_p›
(
execuã
) \

599 
__˛‰ame
.
__do_ô
 = (
execuã
); \

600 } 0)

	)

602 #ifde‡
__USE_GNU


606 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

608 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

609 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

610 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

611 .
__do_ô
 = 1 }; \

612 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

613 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

618 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

619 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

620 
__˛‰ame
.
__do_ô
 = (
execuã
); \

621 } 0)

	)

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

635 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

636 *
__ˇn˚l_¨g
 = (
¨g
); \

637 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

638 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

639 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

641 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

642 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

646 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

647 dÿ{

	)

648 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

649 
__˛ónup_f˘_©åibuã
;

653 
	#±hªad_˛ónup_p›
(
execuã
) \

655 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

656 i‡(
execuã
) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 } 0)

	)

659 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

660 
__˛ónup_f˘_©åibuã
;

662 #ifde‡
__USE_GNU


666 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

668 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

669 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

670 *
__ˇn˚l_¨g
 = (
¨g
); \

671 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

672 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

673 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

675 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

676 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

680 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

681 dÿ{

	)

682 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

683 
__˛ónup_f˘_©åibuã
;

688 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

690 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

691 i‡(
execuã
) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	}
} 0)

	)

694 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

695 
__˛ónup_f˘_©åibuã
;

699 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

701 #i‚de‡
SHARED


702 
	`__©åibuã__
 ((
__wók__
))

708 
__jmp_buf_èg
;

709 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

715 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

716 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

717 
__THROW
 
	`__n⁄nuŒ
 ((1));

720 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

721 
__THROW
 
	`__n⁄nuŒ
 ((1));

724 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

731 #ifde‡
__USE_XOPEN2K


733 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

734 
__c⁄°
 
time•ec
 *
__ª°ri˘


735 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

739 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

740 
__THROW
 
	`__n⁄nuŒ
 ((1));

743 #ifde‡
__USE_UNIX98


745 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

746 
__ª°ri˘
 
__muãx
,

747 *
__ª°ri˘
 
__¥io˚ûög
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

752 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

753 
__¥io˚ûög
,

754 *
__ª°ri˘
 
__ﬁd_˚ûög
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

759 #ifde‡
__USE_GNU


761 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

770 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

771 
__THROW
 
	`__n⁄nuŒ
 ((1));

774 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

775 
__THROW
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

779 
__ª°ri˘
 
__©å
,

780 *
__ª°ri˘
 
__psh¨ed
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

785 
__psh¨ed
)

786 
__THROW
 
	`__n⁄nuŒ
 ((1));

788 #ifde‡
__USE_UNIX98


790 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


791 
__©å
, *
__ª°ri˘
 
__köd
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

797 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

801 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

802 
__ª°ri˘
 
__©å
,

803 *
__ª°ri˘
 
__¥Ÿocﬁ
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

808 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

809 
__¥Ÿocﬁ
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥io˚ûög
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

819 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

820 
__¥io˚ûög
)

821 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #ifde‡
__USE_GNU


826 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

827 *
__robu°√ss
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__robu°√ss
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

837 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


842 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

843 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


844 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

856 
__THROW
 
	`__n⁄nuŒ
 ((1));

858 #ifde‡
__USE_XOPEN2K


860 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

861 
__c⁄°
 
time•ec
 *
__ª°ri˘


862 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

866 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

867 
__THROW
 
	`__n⁄nuŒ
 ((1));

870 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

871 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 #ifde‡
__USE_XOPEN2K


875 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

876 
__c⁄°
 
time•ec
 *
__ª°ri˘


877 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

881 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

896 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

897 
__ª°ri˘
 
__©å
,

898 *
__ª°ri˘
 
__psh¨ed
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

902 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

903 
__psh¨ed
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

907 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

908 
__ª°ri˘
 
__©å
,

909 *
__ª°ri˘
 
__¥ef
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

913 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

914 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

923 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


924 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

928 
__THROW
 
	`__n⁄nuŒ
 ((1));

931 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1));

935 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1));

943 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

944 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

945 
	`__n⁄nuŒ
 ((1, 2));

954 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

955 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

956 
__c⁄°
 
time•ec
 *
__ª°ri˘


957 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

962 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

963 
__THROW
 
	`__n⁄nuŒ
 ((1));

966 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1));

970 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

971 
__ª°ri˘
 
__©å
,

972 *
__ª°ri˘
 
__psh¨ed
)

973 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

977 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 #ifde‡
__USE_XOPEN2K


981 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

982 
__ª°ri˘
 
__©å
,

983 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

984 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

987 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

988 
__˛ockid_t
 
__˛ock_id
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

993 #ifde‡
__USE_XOPEN2K


998 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1));

1002 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1));

1006 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1));

1010 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1014 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1015 
__THROW
 
	`__n⁄nuŒ
 ((1));

1022 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1023 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1024 
__©å
, 
__cou¡
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1037 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1038 
__THROW
 
	`__n⁄nuŒ
 ((1));

1041 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1042 
__THROW
 
	`__n⁄nuŒ
 ((1));

1045 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1046 
__ª°ri˘
 
__©å
,

1047 *
__ª°ri˘
 
__psh¨ed
)

1048 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1051 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1052 
__psh¨ed
)

1053 
__THROW
 
	`__n⁄nuŒ
 ((1));

1065 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1066 (*
__de°r_fun˘i⁄
) (*))

1067 
__THROW
 
	`__n⁄nuŒ
 ((1));

1070 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1073 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1076 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1077 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1080 #ifde‡
__USE_XOPEN2K


1082 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1083 
__˛ockid_t
 *
__˛ock_id
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((2));

1099 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1100 (*
__∑ª¡
) (),

1101 (*
__chûd
Ë()Ë
__THROW
;

1104 #ifde‡
__USE_EXTERN_INLINES


1106 
__ölöe
 

1107 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1109  
__thªad1
 =
__thªad2
;

1110 
	}
}

1113 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

279 
	$__°πod_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
, 
__group
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

282 
	$__°πof_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

283 **
__ª°ri˘
 
__íd±r
, 
__group
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

285 
	$__°πﬁd_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
,

287 
__group
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

289 #i‚de‡
__°πﬁ_öã∫Æ_deföed


290 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
__group
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

294 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

296 #i‚de‡
__°πoul_öã∫Æ_deföed


297 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
,

299 
__ba£
, 
__group
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

301 
	#__°πoul_öã∫Æ_deföed
 1

	)

303 #i‡
deföed
 
__GNUC__
 || deföed 
__USE_ISOC99


304 #i‚de‡
__°πﬁl_öã∫Æ_deföed


305 
__exãnsi⁄__


306 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

307 **
__ª°ri˘
 
__íd±r
,

308 
__ba£
, 
__group
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

310 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

312 #i‚de‡
__°πouŒ_öã∫Æ_deföed


313 
__exãnsi⁄__


314 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

315 
__ª°ri˘
 
__≈å
,

316 **
__ª°ri˘
 
__íd±r
,

317 
__ba£
, 
__group
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

323 #ifde‡
__USE_EXTERN_INLINES


326 
__BEGIN_NAMESPACE_STD


327 
__ölöe
 

328 
	`__NTH
 (
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

330  
	`__°πod_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

331 
	}
}

332 
__ölöe
 

333 
__NTH
 (
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

334 
__ba£
))

336  
	`__°πﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

337 
	}
}

338 
__ölöe
 

339 
__NTH
 (
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

340 
__ba£
))

342  
	`__°πoul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

343 
	}
}

344 
__END_NAMESPACE_STD


346 #ifde‡
__USE_ISOC99


347 
__BEGIN_NAMESPACE_C99


348 
__ölöe
 

349 
__NTH
 (
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

351  
	`__°πof_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

352 
	}
}

353 #i‚de‡
__LDBL_COMPAT


354 
__ölöe
 

355 
__NTH
 (
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

357  
	`__°πﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

358 
	}
}

360 
__END_NAMESPACE_C99


363 #ifde‡
__USE_BSD


364 
__exãnsi⁄__
 
__ölöe
 

365 
__NTH
 (
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

366 
__ba£
))

368  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

369 
	}
}

370 
__exãnsi⁄__
 
__ölöe
 

371 
__NTH
 (
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

372 
__ba£
))

374  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

375 
	}
}

378 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


379 
__BEGIN_NAMESPACE_C99


380 
__exãnsi⁄__
 
__ölöe
 

381 
__NTH
 (
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

382 
__ba£
))

384  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

385 
	}
}

386 
__exãnsi⁄__
 
__ölöe
 

387 
__NTH
 (
	$°πouŒ
 (
__c⁄°
 * 
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

388 
__ba£
))

390  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

391 
	}
}

392 
__END_NAMESPACE_C99


395 
__BEGIN_NAMESPACE_STD


396 
__ölöe
 

397 
__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

399  
	`°πod
 (
__≈å
, (**Ë
NULL
);

400 
	}
}

401 
__ölöe
 

402 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

404  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

405 
	}
}

406 
__ölöe
 

407 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

409  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

410 
	}
}

411 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


414 
__BEGIN_NAMESPACE_C99


415 
__exãnsi⁄__
 
__ölöe
 

416 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

418  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

419 
	}
}

420 
__END_NAMESPACE_C99


425 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


429 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

432 
	$a64l
 (
__c⁄°
 *
__s
)

433 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

437 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


438 
	~<sys/ty≥s.h
>

445 
	$øndom
 (Ë
__THROW
;

448 
	$§™dom
 (
__£ed
Ë
__THROW
;

454 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

455 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

459 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 #ifde‡
__USE_MISC


467 
	søndom_d©a


469 
öt32_t
 *
Âå
;

470 
öt32_t
 *
Ωå
;

471 
öt32_t
 *
°©e
;

472 
ønd_ty≥
;

473 
ønd_deg
;

474 
ønd_£p
;

475 
öt32_t
 *
íd_±r
;

478 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

479 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

481 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

482 
__THROW
 
	`__n⁄nuŒ
 ((2));

484 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

485 
size_t
 
__°©ñí
,

486 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

487 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

489 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

490 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

491 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 
__BEGIN_NAMESPACE_STD


498 
	$ønd
 (Ë
__THROW
;

500 
	$§™d
 (
__£ed
Ë
__THROW
;

501 
__END_NAMESPACE_STD


503 #ifde‡
__USE_POSIX


505 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

509 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


513 
	$dønd48
 (Ë
__THROW
;

514 
	`î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

517 
	$Ã™d48
 (Ë
__THROW
;

518 
	`ƒ™d48
 (
__xsubi
[3])

519 
__THROW
 
	`__n⁄nuŒ
 ((1));

522 
	$mønd48
 (Ë
__THROW
;

523 
	`jønd48
 (
__xsubi
[3])

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

528 *
	`£ed48
 (
__£ed16v
[3])

529 
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
	`lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #ifde‡
__USE_MISC


536 
	sdønd48_d©a


538 
__x
[3];

539 
__ﬁd_x
[3];

540 
__c
;

541 
__öô
;

542 
__a
;

546 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

547 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

548 
	`î™d48_r
 (
__xsubi
[3],

549 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

550 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

553 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

554 *
__ª°ri˘
 
__ªsu…
)

555 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

556 
	`ƒ™d48_r
 (
__xsubi
[3],

557 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

558 *
__ª°ri˘
 
__ªsu…
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

563 *
__ª°ri˘
 
__ªsu…
)

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	`jønd48_r
 (
__xsubi
[3],

566 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

567 *
__ª°ri˘
 
__ªsu…
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

572 
__THROW
 
	`__n⁄nuŒ
 ((2));

574 
	`£ed48_r
 (
__£ed16v
[3],

575 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 
	`lc⁄g48_r
 (
__∑øm
[7],

578 
dønd48_d©a
 *
__buf„r
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


586 
	#__mÆloc_™d_ˇŒoc_deföed


	)

587 
__BEGIN_NAMESPACE_STD


589 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

591 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

592 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

593 
__END_NAMESPACE_STD


596 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


597 
__BEGIN_NAMESPACE_STD


600 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

601 
__THROW
 
__©åibuã_mÆloc__
 
__©åibuã_w¨n_unu£d_ªsu…__
;

603 
	$‰ì
 (*
__±r
Ë
__THROW
;

604 
__END_NAMESPACE_STD


606 #ifdef 
__USE_MISC


608 
	$c‰ì
 (*
__±r
Ë
__THROW
;

611 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


612 
	~<Æloˇ.h
>

615 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


617 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

620 #ifde‡
__USE_XOPEN2K


622 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

623 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
__BEGIN_NAMESPACE_STD


628 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

632 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

633 
__END_NAMESPACE_STD


635 #ifdef 
__USE_MISC


638 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

639 
__THROW
 
	`__n⁄nuŒ
 ((1));

642 
__BEGIN_NAMESPACE_STD


646 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

647 
__END_NAMESPACE_STD


649 #ifde‡
__USE_ISOC99


650 
__BEGIN_NAMESPACE_C99


653 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

654 
__END_NAMESPACE_C99


658 
__BEGIN_NAMESPACE_STD


660 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 
__END_NAMESPACE_STD


665 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

666 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

668 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


672 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


678 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

679 
__THROW
 
	`__n⁄nuŒ
 ((2));

682 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

685 #ifdef 
__USE_MISC


689 
	$˛óªnv
 (Ë
__THROW
;

693 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


698 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

708 #i‚de‡
__USE_FILE_OFFSET64


709 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 #ifde‡
__REDIRECT


712 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

713 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

715 
	#mk°emp
 
mk°emp64


	)

718 #ifde‡
__USE_LARGEFILE64


719 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #ifde‡
__USE_BSD


729 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

733 
__BEGIN_NAMESPACE_STD


738 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

739 
__END_NAMESPACE_STD


742 #ifdef 
__USE_GNU


746 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

750 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


757 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

758 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

763 #i‚de‡
__COMPAR_FN_T


764 
	#__COMPAR_FN_T


	)

765 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

767 #ifdef 
__USE_GNU


768 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

772 
__BEGIN_NAMESPACE_STD


775 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

776 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

777 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

781 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

782 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

786 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__BEGIN_NAMESPACE_STD


800 
div_t
 
	$div
 (
__numî
, 
__díom
)

801 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

802 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

803 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_ISOC99


807 
__BEGIN_NAMESPACE_C99


808 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

809 
__díom
)

810 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

811 
__END_NAMESPACE_C99


815 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


822 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

823 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

829 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

834 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 #ifde‡
__USE_MISC


840 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

841 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

843 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

845 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

846 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

852 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

853 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

854 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

855 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

856 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

857 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

860 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

861 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

862 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

863 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

864 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

865 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

866 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

871 
__BEGIN_NAMESPACE_STD


874 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

877 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

878 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

881 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

885 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

886 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

888 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

889 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

890 
__THROW
;

891 
__END_NAMESPACE_STD


894 #ifde‡
__USE_SVID


899 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

903 #ifde‡
__USE_XOPEN_EXTENDED


910 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

911 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

912 **
__ª°ri˘
 
__vÆuï
)

913 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

917 #ifde‡
__USE_XOPEN


919 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

925 #ifde‡
__USE_XOPEN2K


927 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

930 #ifde‡
__USE_XOPEN


935 
	$gø¡±
 (
__fd
Ë
__THROW
;

939 
	$u∆ock±
 (
__fd
Ë
__THROW
;

944 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

947 #ifde‡
__USE_GNU


951 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

952 
__THROW
 
	`__n⁄nuŒ
 ((2));

955 
	`gë±
 ();

958 #ifde‡
__USE_BSD


962 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

963 
__THROW
 
	`__n⁄nuŒ
 ((1));

968 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


969 
	~<bôs/°dlib.h
>

971 #ifde‡
__LDBL_COMPAT


972 
	~<bôs/°dlib-ldbl.h
>

976 #unde‡
__√ed_mÆloc_™d_ˇŒoc


978 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

288 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_BSD


292 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

296 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

300 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

303 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

307 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

308 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

312 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

316 #ifdef 
__USE_GNU


317 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

318 #ifde‡
__GNUC__


319 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

333 #ifdef 
__USE_GNU


336 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

337 
__loˇÀ_t
 
__loc
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

340 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

341 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

345 #ifdef 
__USE_BSD


348 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

349 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 #ifdef 
__USE_GNU


355 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

356 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

362 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

364 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

370 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

373 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

380 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

382 #i‚de‡
ba£«me


387 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

393 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

394 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


414 
	~<bôs/°rög.h
>

417 
	~<bôs/°rög2.h
>

420 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


422 
	~<bôs/°rög3.h
>

426 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
__BEGIN_DECLS


34 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
;

38 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

41 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

45 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

48 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

51 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

54 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

55 
__THROW
 
__©åibuã_puª__
;

58 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

59 
__THROW
 
__©åibuã_puª__
;

61 
__END_DECLS


	@/usr/include/sys/socket.h

20 #i‚def 
_SYS_SOCKET_H


21 
	#_SYS_SOCKET_H
 1

	)

23 
	~<„©uªs.h
>

25 
	g__BEGIN_DECLS


27 
	~<sys/uio.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

35 
	~<bôs/sockë.h
>

37 #ifde‡
__USE_BSD


40 
	sosockaddr


42 
	mß_Ámûy
;

43 
	mß_d©a
[14];

51 
	mSHUT_RD
 = 0,

52 
	#SHUT_RD
 
SHUT_RD


	)

53 
	mSHUT_WR
,

54 
	#SHUT_WR
 
SHUT_WR


	)

55 
	mSHUT_RDWR


56 
	#SHUT_RDWR
 
SHUT_RDWR


	)

65 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


66 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

67 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

71 
	#__SOCKADDR_ALLTYPES
 \

72 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

86 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

87 uni⁄ { 
	m__SOCKADDR_ALLTYPES


88 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

89 #unde‡
__SOCKADDR_ONETYPE


90 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

91 uni⁄ { 
	m__SOCKADDR_ALLTYPES


92 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

93 #unde‡
__SOCKADDR_ONETYPE


100 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

106 
	`sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

107 
__fds
[2]Ë
__THROW
;

110 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

111 
__THROW
;

114 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

115 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

124 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

128 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

129 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

136 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

143 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

150 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

151 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

152 
sockÀn_t
 
__addr_Àn
);

161 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

162 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

163 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

171 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

172 
__Êags
);

179 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

185 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

186 *
__ª°ri˘
 
__›tvÆ
,

187 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

192 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

193 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

199 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

209 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

210 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

218 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

221 #ifde‡
__USE_XOPEN2K


223 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

227 #ifde‡
__USE_MISC


231 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

236 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


237 
	~<bôs/sockë2.h
>

240 
__END_DECLS


	@/usr/include/sys/un.h

19 #i‚def 
_SYS_UN_H


20 
	#_SYS_UN_H
 1

	)

22 
	~<sys/cdefs.h
>

25 
	~<bôs/sockaddr.h
>

27 
__BEGIN_DECLS


30 
	ssockaddr_un


32 
__SOCKADDR_COMMON
 (
sun_
);

33 
	msun_∑th
[108];

37 #ifde‡
__USE_MISC


38 
	~<°rög.h
>

41 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë0)->
sun_∑th
) \

42 + 
	`°æí
 ((
±r
)->
sun_∑th
))

	)

45 
	g__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_UNIX98


60 
	#_XOPEN_VERSION
 500

	)

62 
	#_XOPEN_VERSION
 4

	)

66 
	#_XOPEN_XCU_VERSION
 4

	)

69 
	#_XOPEN_XPG2
 1

	)

70 
	#_XOPEN_XPG3
 1

	)

71 
	#_XOPEN_XPG4
 1

	)

74 
	#_XOPEN_UNIX
 1

	)

77 
	#_XOPEN_CRYPT
 1

	)

81 
	#_XOPEN_ENH_I18N
 1

	)

84 
	#_XOPEN_LEGACY
 1

	)

171 
	~<bôs/posix_›t.h
>

174 #ifde‡
__USE_UNIX98


175 
	~<bôs/ívú⁄míts.h
>

179 
	#STDIN_FILENO
 0

	)

180 
	#STDOUT_FILENO
 1

	)

181 
	#STDERR_FILENO
 2

	)

186 
	~<bôs/ty≥s.h
>

188 #i‚def 
__ssize_t_deföed


189 
__ssize_t
 
	tssize_t
;

190 
	#__ssize_t_deföed


	)

193 
	#__√ed_size_t


	)

194 
	#__√ed_NULL


	)

195 
	~<°ddef.h
>

197 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


200 #i‚de‡
__gid_t_deföed


201 
__gid_t
 
	tgid_t
;

202 
	#__gid_t_deföed


	)

205 #i‚de‡
__uid_t_deföed


206 
__uid_t
 
	tuid_t
;

207 
	#__uid_t_deföed


	)

210 #i‚de‡
__off_t_deföed


211 #i‚de‡
__USE_FILE_OFFSET64


212 
__off_t
 
	toff_t
;

214 
__off64_t
 
	toff_t
;

216 
	#__off_t_deföed


	)

218 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


219 
__off64_t
 
	toff64_t
;

220 
	#__off64_t_deföed


	)

223 #i‚de‡
__u£c⁄ds_t_deföed


224 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

225 
	#__u£c⁄ds_t_deföed


	)

228 #i‚de‡
__pid_t_deföed


229 
__pid_t
 
	tpid_t
;

230 
	#__pid_t_deföed


	)

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


235 #i‚de‡
__öçå_t_deföed


236 
__öçå_t
 
	töçå_t
;

237 
	#__öçå_t_deföed


	)

241 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


242 #i‚de‡
__sockÀn_t_deföed


243 
__sockÀn_t
 
	tsockÀn_t
;

244 
	#__sockÀn_t_deföed


	)

250 
	#R_OK
 4

	)

251 
	#W_OK
 2

	)

252 
	#X_OK
 1

	)

253 
	#F_OK
 0

	)

256 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

258 #ifde‡
__USE_GNU


261 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1));

265 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1));

269 #ifde‡
__USE_ATFILE


273 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

274 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

279 #i‚def 
_STDIO_H


280 
	#SEEK_SET
 0

	)

281 
	#SEEK_CUR
 1

	)

282 
	#SEEK_END
 2

	)

285 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


287 
	#L_SET
 
SEEK_SET


	)

288 
	#L_INCR
 
SEEK_CUR


	)

289 
	#L_XTND
 
SEEK_END


	)

298 #i‚de‡
__USE_FILE_OFFSET64


299 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

301 #ifde‡
__REDIRECT_NTH


302 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

303 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

304 
l£ek64
);

306 
	#l£ek
 
l£ek64


	)

309 #ifde‡
__USE_LARGEFILE64


310 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

311 
__THROW
;

318 
	`˛o£
 (
__fd
);

325 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

331 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

333 #ifde‡
__USE_UNIX98


334 #i‚de‡
__USE_FILE_OFFSET64


341 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

342 
__off_t
 
__off£t
Ë
__wur
;

349 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

350 
__off_t
 
__off£t
Ë
__wur
;

352 #ifde‡
__REDIRECT


353 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

354 
__off64_t
 
__off£t
),

355 
¥ód64
Ë
__wur
;

356 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

357 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

358 
pwrôe64
Ë
__wur
;

360 
	#¥ód
 
¥ód64


	)

361 
	#pwrôe
 
pwrôe64


	)

365 #ifde‡
__USE_LARGEFILE64


369 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

370 
__off64_t
 
__off£t
Ë
__wur
;

373 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

374 
__off64_t
 
__off£t
Ë
__wur
;

382 
	`pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

391 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

403 
	`¶ìp
 (
__£c⁄ds
);

405 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


410 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

411 
__THROW
;

418 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

427 
	`∑u£
 ();

431 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

434 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


436 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

441 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

442 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

446 #ifde‡
__USE_ATFILE


449 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

450 
__gid_t
 
__group
, 
__Êag
)

451 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

455 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

457 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

469 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

471 #ifdef 
__USE_GNU


475 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

478 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


482 *
	$gëwd
 (*
__buf
)

483 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

488 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

491 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

494 **
__ívú⁄
;

495 #ifde‡
__USE_GNU


496 **
ívú⁄
;

502 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

503 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

505 #ifde‡
__USE_GNU


508 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

509 
__THROW
;

514 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

515 
__THROW
 
	`__n⁄nuŒ
 ((1));

519 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

520 
__THROW
 
	`__n⁄nuŒ
 ((1));

524 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

525 
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

530 
__THROW
 
	`__n⁄nuŒ
 ((1));

535 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


541 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

546 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

552 
	~<bôs/c⁄‚ame.h
>

555 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

556 
__THROW
 
	`__n⁄nuŒ
 ((1));

559 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

562 
	$sysc⁄f
 (
__«me
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

564 #ifdef 
__USE_POSIX2


566 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

571 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

574 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

578 #i‚de‡
__FAVOR_BSD


579 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

581 #ifde‡
__REDIRECT_NTH


582 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

584 
	#gëpgΩ
 
__gëpgid


	)

589 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

590 #ifde‡
__USE_XOPEN_EXTENDED


591 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

598 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

600 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


611 #i‚de‡
__FAVOR_BSD


615 
	$£çgΩ
 (Ë
__THROW
;

620 #ifde‡
__REDIRECT_NTH


621 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

623 
	#£çgΩ
 
£çgid


	)

632 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

634 #ifde‡
__USE_XOPEN_EXTENDED


636 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

640 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

643 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

646 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

649 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

654 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

656 #ifdef 
__USE_GNU


658 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

665 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

667 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


670 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

673 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


675 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

682 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

684 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


687 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

690 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


692 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

695 #ifde‡
__USE_GNU


698 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

699 
__THROW
;

703 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

704 
__THROW
;

708 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

709 
__THROW
;

713 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

714 
__THROW
;

721 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

734 *
	$ây«me
 (
__fd
Ë
__THROW
;

738 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

739 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

743 
	$ißây
 (
__fd
Ë
__THROW
;

745 #i‡
deföed
 
__USE_BSD
 \

746 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

749 
	$ây¶Ÿ
 (Ë
__THROW
;

754 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

757 #ifde‡
__USE_ATFILE


760 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

761 
__c⁄°
 *
__to
, 
__Êags
)

762 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

765 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


767 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

768 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

773 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

774 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

775 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

778 #ifde‡
__USE_ATFILE


780 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

781 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

784 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

785 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

786 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

790 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

792 #ifde‡
__USE_ATFILE


794 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

795 
__THROW
 
	`__n⁄nuŒ
 ((2));

799 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

803 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

806 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

813 *
	`gëlogö
 ();

814 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


821 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

824 #ifdef 
__USE_BSD


826 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifdef 
__USE_POSIX2


834 
	#__√ed_gë›t


	)

835 
	~<gë›t.h
>

839 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


843 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

850 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

855 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

861 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

863 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

870 
	$vh™gup
 (Ë
__THROW
;

873 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

881 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

882 
size_t
 
__off£t
, 
__sˇÀ
)

883 
__THROW
 
	`__n⁄nuŒ
 ((1));

889 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

893 *
	$gëu£rshñl
 (Ë
__THROW
;

894 
	$ídu£rshñl
 (Ë
__THROW
;

895 
	$£tu£rshñl
 (Ë
__THROW
;

901 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

905 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

908 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

912 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

916 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


921 
	`fsync
 (
__fd
);

925 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


928 
	`gëho°id
 ();

931 
	$sync
 (Ë
__THROW
;

936 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

941 
	$gëdèbÀsize
 (Ë
__THROW
;

945 #i‚de‡
__USE_FILE_OFFSET64


946 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

949 #ifde‡
__REDIRECT_NTH


950 
	`__REDIRECT_NTH
 (
åunˇã
,

951 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

952 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

954 
	#åunˇã
 
åunˇã64


	)

957 #ifde‡
__USE_LARGEFILE64


958 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

959 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


967 #i‚de‡
__USE_FILE_OFFSET64


968 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

970 #ifde‡
__REDIRECT_NTH


971 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

972 
·runˇã64
Ë
__wur
;

974 
	#·runˇã
 
·runˇã64


	)

977 #ifde‡
__USE_LARGEFILE64


978 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

984 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


988 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

994 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

998 #ifde‡
__USE_MISC


1009 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1014 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1026 
	#F_ULOCK
 0

	)

1027 
	#F_LOCK
 1

	)

1028 
	#F_TLOCK
 2

	)

1029 
	#F_TEST
 3

	)

1031 #i‚de‡
__USE_FILE_OFFSET64


1032 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1034 #ifde‡
__REDIRECT


1035 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1036 
lockf64
Ë
__wur
;

1038 
	#lockf
 
lockf64


	)

1041 #ifde‡
__USE_LARGEFILE64


1042 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1047 #ifde‡
__USE_GNU


1052 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1053 (
__exãnsi⁄__
 \

1054 ({ 
__ªsu…
; \

1055 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1056 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1057 
__ªsu…
; 
	}
}))

	)

1060 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1063 
	$fd©async
 (
__fûdes
Ë
__THROW
;

1069 #ifdef 
__USE_XOPEN


1071 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1076 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1083 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1084 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1090 #ifde‡
__USE_XOPEN


1092 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1097 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


1098 
	~<bôs/uni°d.h
>

1101 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

20 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H


24 #i‚de‡
_BITS_BYTESWAP_H


25 
	#_BITS_BYTESWAP_H
 1

	)

28 
	#__bsw≠_c⁄°™t_16
(
x
) \

29 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

31 #ifde‡
__GNUC__


32 #i‡
__GNUC__
 >= 2

33 
	#__bsw≠_16
(
x
) \

34 (
__exãnsi⁄__
 \

35 ({ 
__v
, 
__x
 = (
x
); \

36 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

37 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

39 
	`__asm__
 ("rorw $8, %w0" \

40 : "Ù" (
__v
) \

41 : "0" (
__x
) \

43 
__v
; }))

	)

46 
	#__bsw≠_16
(
x
) \

47 (
__exãnsi⁄__
 \

48 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

51 
__ölöe
 

52 
	$__bsw≠_16
 (
__bsx
)

54  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

55 
	}
}

59 
	#__bsw≠_c⁄°™t_32
(
x
) \

60 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

61 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

63 #ifde‡
__GNUC__


64 #i‡
__GNUC__
 >= 2

67 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__
 \

68 && !
deföed
 
	g__≥¡ium4__
 && !deföed 
	g__k8__
 && !deföed 
	g__©hl⁄__
 \

69 && !
deföed
 
	g__k6__


70 
	#__bsw≠_32
(
x
) \

71 (
__exãnsi⁄__
 \

72 ({ 
__v
, 
__x
 = (
x
); \

73 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

74 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

76 
	`__asm__
 ("rorw $8, %w0;" \

79 : "Ù" (
__v
) \

80 : "0" (
__x
) \

82 
__v
; }))

	)

84 
	#__bsw≠_32
(
x
) \

85 (
__exãnsi⁄__
 \

86 ({ 
__v
, 
__x
 = (
x
); \

87 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

88 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

90 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

91 
__v
; }))

	)

94 
	#__bsw≠_32
(
x
) \

95 (
__exãnsi⁄__
 \

96 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 
__ölöe
 

100 
	$__bsw≠_32
 (
__bsx
)

102  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

103 
	}
}

107 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

109 
	#__bsw≠_c⁄°™t_64
(
x
) \

110 ((((
x
) & 0xff00000000000000ull) >> 56) \

111 | (((
x
) & 0x00ff000000000000ull) >> 40) \

112 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

113 | (((
x
) & 0x000000ff00000000ull) >> 8) \

114 | (((
x
) & 0x00000000ff000000ull) << 8) \

115 | (((
x
) & 0x0000000000ff0000ull) << 24) \

116 | (((
x
) & 0x000000000000ff00ull) << 40) \

117 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

119 
	#__bsw≠_64
(
x
) \

120 (
__exãnsi⁄__
 \

121 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

122 
__l
[2]; } 
__w
, 
__r
; \

123 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

124 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

127 
__w
.
__Œ
 = (
x
); \

128 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

129 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

131 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

514 
	m_CS_GNU_LIBC_VERSION
,

515 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

516 
	m_CS_GNU_LIBPTHREAD_VERSION
,

517 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

519 
	m_CS_LFS_CFLAGS
 = 1000,

520 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

521 
	m_CS_LFS_LDFLAGS
,

522 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

523 
	m_CS_LFS_LIBS
,

524 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

525 
	m_CS_LFS_LINTFLAGS
,

526 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

527 
	m_CS_LFS64_CFLAGS
,

528 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

529 
	m_CS_LFS64_LDFLAGS
,

530 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

531 
	m_CS_LFS64_LIBS
,

532 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

533 
	m_CS_LFS64_LINTFLAGS
,

534 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

536 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

537 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

538 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

539 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

540 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

541 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

542 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

543 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

544 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

545 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

546 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

547 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

548 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

549 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

550 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

551 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

552 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

553 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

554 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

555 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

556 
	m_CS_XBS5_LP64_OFF64_LIBS
,

557 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

558 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

559 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

560 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

561 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

562 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

563 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

564 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

565 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

566 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

567 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

569 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

570 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

571 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

572 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

573 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

574 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

575 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

576 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

577 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

578 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

579 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

580 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

581 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

582 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

583 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

584 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

585 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

586 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

587 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

588 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

589 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

590 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

591 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

592 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

593 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

594 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

595 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

596 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

597 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

598 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

599 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


600 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


41 
	#_POSIX_V6_ILP32_OFF32
 1

	)

42 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

43 
	#_XBS5_ILP32_OFF32
 1

	)

44 
	#_XBS5_ILP32_OFFBIG
 1

	)

57 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

58 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

59 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

60 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

61 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

62 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

22 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

32 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

34 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

35 #ifde‡
__GNUC__


36 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

37 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

39 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

40 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

54 
	#MCAST_EXCLUDE
 0

	)

55 
	#MCAST_INCLUDE
 1

	)

57 
	#IP_ROUTER_ALERT
 5

	)

58 
	#IP_PKTINFO
 8

	)

59 
	#IP_PKTOPTIONS
 9

	)

60 
	#IP_PMTUDISC
 10

	)

61 
	#IP_MTU_DISCOVER
 10

	)

62 
	#IP_RECVERR
 11

	)

63 
	#IP_RECVTTL
 12

	)

64 
	#IP_RECVTOS
 13

	)

68 
	#IP_PMTUDISC_DONT
 0

	)

69 
	#IP_PMTUDISC_WANT
 1

	)

70 
	#IP_PMTUDISC_DO
 2

	)

73 
	#SOL_IP
 0

	)

75 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

76 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

77 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 
	sù_›ts


84 
ö_addr
 
	mù_d°
;

85 
	mù_›ts
[40];

89 
	sù_mªqn


91 
ö_addr
 
	mimr_mu…üddr
;

92 
ö_addr
 
	mimr_addªss
;

93 
	mimr_ifödex
;

97 
	sö_pktöfo


99 
	mùi_ifödex
;

100 
ö_addr
 
	mùi_•ec_d°
;

101 
ö_addr
 
	mùi_addr
;

107 
	#IPV6_ADDRFORM
 1

	)

108 
	#IPV6_2292PKTINFO
 2

	)

109 
	#IPV6_2292HOPOPTS
 3

	)

110 
	#IPV6_2292DSTOPTS
 4

	)

111 
	#IPV6_2292RTHDR
 5

	)

112 
	#IPV6_2292PKTOPTIONS
 6

	)

113 
	#IPV6_CHECKSUM
 7

	)

114 
	#IPV6_2292HOPLIMIT
 8

	)

116 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

118 
	#IPV6_NEXTHOP
 9

	)

119 
	#IPV6_AUTHHDR
 10

	)

120 
	#IPV6_UNICAST_HOPS
 16

	)

121 
	#IPV6_MULTICAST_IF
 17

	)

122 
	#IPV6_MULTICAST_HOPS
 18

	)

123 
	#IPV6_MULTICAST_LOOP
 19

	)

124 
	#IPV6_JOIN_GROUP
 20

	)

125 
	#IPV6_LEAVE_GROUP
 21

	)

126 
	#IPV6_ROUTER_ALERT
 22

	)

127 
	#IPV6_MTU_DISCOVER
 23

	)

128 
	#IPV6_MTU
 24

	)

129 
	#IPV6_RECVERR
 25

	)

130 
	#IPV6_V6ONLY
 26

	)

131 
	#IPV6_JOIN_ANYCAST
 27

	)

132 
	#IPV6_LEAVE_ANYCAST
 28

	)

133 
	#IPV6_IPSEC_POLICY
 34

	)

134 
	#IPV6_XFRM_POLICY
 35

	)

136 
	#IPV6_RECVPKTINFO
 49

	)

137 
	#IPV6_PKTINFO
 50

	)

138 
	#IPV6_RECVHOPLIMIT
 51

	)

139 
	#IPV6_HOPLIMIT
 52

	)

140 
	#IPV6_RECVHOPOPTS
 53

	)

141 
	#IPV6_HOPOPTS
 54

	)

142 
	#IPV6_RTHDRDSTOPTS
 55

	)

143 
	#IPV6_RECVRTHDR
 56

	)

144 
	#IPV6_RTHDR
 57

	)

145 
	#IPV6_RECVDSTOPTS
 58

	)

146 
	#IPV6_DSTOPTS
 59

	)

148 
	#IPV6_RECVTCLASS
 66

	)

149 
	#IPV6_TCLASS
 67

	)

152 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

153 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

154 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

155 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

158 
	#IPV6_PMTUDISC_DONT
 0

	)

159 
	#IPV6_PMTUDISC_WANT
 1

	)

160 
	#IPV6_PMTUDISC_DO
 2

	)

163 
	#SOL_IPV6
 41

	)

164 
	#SOL_ICMPV6
 58

	)

167 
	#IPV6_RTHDR_LOOSE
 0

	)

168 
	#IPV6_RTHDR_STRICT
 1

	)

170 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 #i‡
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0

29 
	tÊﬂt_t
;

30 
	tdoubÀ_t
;

36 
	tÊﬂt_t
;

38 
	tdoubÀ_t
;

43 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

44 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

22 #i‚de‡
_MATH_H


26 #ifde‡
__˝lu•lus


27 
	#__MATH_INLINE
 
__ölöe


	)

29 
	#__MATH_INLINE
 
__ölöe


	)

33 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

35 #i‡!
__GNUC_PREREQ
 (2,97)

40 #unde‡
isgª©î


41 #unde‡
isgª©îequÆ


42 #unde‡
i¶ess


43 #unde‡
i¶es£quÆ


44 #unde‡
i¶essgª©î


45 #unde‡
isun‹dîed


46 #ifde‡
__i686__


49 
	#isgª©î
(
x
, 
y
) \

50 ({ 
__ªsu…
; \

51 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

52 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

53 
__ªsu…
; })

	)

54 
	#isgª©îequÆ
(
x
, 
y
) \

55 ({ 
__ªsu…
; \

56 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

57 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

58 
__ªsu…
; })

	)

60 
	#i¶ess
(
x
, 
y
) \

61 ({ 
__ªsu…
; \

62 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

63 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

64 
__ªsu…
; })

	)

66 
	#i¶es£quÆ
(
x
, 
y
) \

67 ({ 
__ªsu…
; \

68 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

69 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

70 
__ªsu…
; })

	)

72 
	#i¶essgª©î
(
x
, 
y
) \

73 ({ 
__ªsu…
; \

74 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

75 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

76 
__ªsu…
; })

	)

78 
	#isun‹dîed
(
x
, 
y
) \

79 ({ 
__ªsu…
; \

80 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

81 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

82 
__ªsu…
; })

	)

85 
	#isgª©î
(
x
, 
y
) \

86 ({ 
__ªsu…
; \

87 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

88 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

89 
__ªsu…
; })

	)

91 
	#isgª©îequÆ
(
x
, 
y
) \

92 ({ 
__ªsu…
; \

93 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

94 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

95 
__ªsu…
; })

	)

97 
	#i¶ess
(
x
, 
y
) \

98 ({ 
__ªsu…
; \

99 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

100 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

101 
__ªsu…
; })

	)

103 
	#i¶es£quÆ
(
x
, 
y
) \

104 ({ 
__ªsu…
; \

105 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

106 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

107 
__ªsu…
; })

	)

109 
	#i¶essgª©î
(
x
, 
y
) \

110 ({ 
__ªsu…
; \

111 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

112 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

113 
__ªsu…
; })

	)

115 
	#isun‹dîed
(
x
, 
y
) \

116 ({ 
__ªsu…
; \

117 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

118 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

119 
__ªsu…
; })

	)

125 #i‡
__GNUC_PREREQ
 (2, 8)

127 
__MATH_INLINE
 

128 
__NTH
 (
	$__signbôf
 (
__x
))

130 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

131  
__u
.
__i
 < 0;

132 
	}
}

133 
__MATH_INLINE
 

134 
__NTH
 (
	$__signbô
 (
__x
))

136 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

137  
__u
.
__i
[1] < 0;

138 
	}
}

139 
__MATH_INLINE
 

140 
__NTH
 (
	$__signbôl
 (
__x
))

142 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

143  (
__u
.
__i
[2] & 0x8000) != 0;

144 
	}
}

151 #i‡
__GNUC_PREREQ
 (2, 8)

153 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

154 && 
deföed
 
__OPTIMIZE__
)

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


164 
	#__ölöe_m©h›
(
func
, 
›
) \

165 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

166 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

167 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

168 
	#__ölöe_m©h›NP
(
func
, 
›
) \

169 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

170 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

171 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

173 
	#__ölöe_m©h›
(
func
, 
›
) \

174 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

175 
	#__ölöe_m©h›NP
(
func
, 
›
) \

176 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

179 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

180 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

181 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

182 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

185 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


186 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

187 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

188 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

189 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

190 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

191 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

192 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

193 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

195 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

196 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

197 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

198 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

201 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

202 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

203 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

205 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

206 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

208 
Êﬂt_ty≥
 
__ªsu…
; \

209 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

210  
__ªsu…
; \

211 }

	)

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


215 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

216 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

217 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

218 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

219 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

220 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

221 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

222 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

223 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

224 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

225 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

226 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

227 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

228 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

229 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

230 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

231 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

232 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

233 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

234 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

235 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

236 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

237 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

238 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

240 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

241 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

242 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

243 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

244 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

245 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

246 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

247 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

248 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

249 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

250 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

251 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

254 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

255 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

256 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

258 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

259 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

261 
code
; \

262 }

	)

265 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

266 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

267 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

269 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

270 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

272 
code
; \

273 }

	)

275 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

276 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

277 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

279 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

280 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

281 
Êﬂt_ty≥
 
¨g3
)) \

283 
code
; \

284 }

	)

288 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


291 
__ölöe_m©hcode
 (
__sgn
, 
__x
, \

292  
__x
 == 0.0 ? 0.0 : (__x > 0.0 ? 1.0 : -1.0))

295 #ifde‡
__FAST_MATH__


296 
__ölöe_m©hcode
 (
__pow2
, 
__x
, \

297 
__vÆue
; \

298 
__exp⁄ít
; \

299 
__exãnsi⁄__
 
__p
 = (Ë
__x
; \

300 i‡(
__x
 =(Ë
__p
) \

302 
__asm
 
__vﬁ©ûe__
 \

304 : "Ò" (
__vÆue
Ë: "0" (1.0), "u" (
__x
)); \

305  
__vÆue
; \

307 
__asm
 
__vﬁ©ûe__
 \

313 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

314 
__vÆue
 += 1.0; \

315 
__asm
 
__vﬁ©ûe__
 \

317 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

318  
__vÆue
)

320 #ifde‡
__USE_GNU


321 
	#__söcos_code
 \

322 
__co§
; \

323 
__sör
; \

324 
__asm
 
__vﬁ©ûe__
 \

339 : "Ò" (
__co§
), "=u" (
__sör
Ë: "0" (
__x
)); \

340 *
__söx
 = 
__sör
; \

341 *
__cosx
 = 
__co§


	)

343 
__MATH_INLINE
 

344 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

346 
__söcos_code
;

347 
	}
}

349 
__MATH_INLINE
 

350 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

352 
__söcos_code
;

353 
	}
}

355 
__MATH_INLINE
 

356 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

358 
__söcos_code
;

359 
	}
}

366 #i‡
__GNUC_PREREQ
 (3, 5)

367 
	#__expm1_code
 \

368 
__ãmp
; \

369 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

370  
__ãmp
 ? __ãm∞: 
__x


	)

372 
	#__expm1_code
 \

373 
__vÆue
; \

374 
__exp⁄ít
; \

375 
__ãmp
; \

376 
__asm
 
__vﬁ©ûe__
 \

385 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

386 
__asm
 
__vﬁ©ûe__
 \

388 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

389 
__ãmp
 -= 1.0; \

390 
__ãmp
 +
__vÆue
; \

391  
__ãmp
 ? __ãm∞: 
__x


	)

393 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

395 #i‡
	`__GNUC_PREREQ
 (3, 4)

396 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

398 
	#__exp_code
 \

399 
__vÆue
; \

400 
__exp⁄ít
; \

401 
__asm
 
__vﬁ©ûe__
 \

409 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

410 
__vÆue
 += 1.0; \

411 
__asm
 
__vﬁ©ûe__
 \

413 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

414  
__vÆue


	)

415 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

416 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

420 #i‡!
	`__GNUC_PREREQ
 (3, 5)

421 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

422 
__vÆue
; \

423 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

424 
__asm
 
__vﬁ©ûe__
 \

426 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

427  
__vÆue
)

432 #i‡
	`__GNUC_PREREQ
 (3, 4)

433 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

434  
	$__buûtö_©™2l
 (
__y
, 
__x
))

436 
	#__©™2_code
 \

437 
__vÆue
; \

438 
__asm
 
__vﬁ©ûe__
 \

440 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

441  
__vÆue


	)

442 #ifde‡
__FAST_MATH__


443 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

445 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

449 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

450 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

451 
__vÆue
; \

452 
__asm
 
__vﬁ©ûe__
 \

457 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

458  
__vÆue
)

462 #ifde‡
__FAST_MATH__


463 #i‡!
	`__GNUC_PREREQ
 (3,3)

464 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

465 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

466 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

468 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

472 #i‡
	`__GNUC_PREREQ
 (2, 8)

473 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

474 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


475 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

476 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

478 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

480 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

481 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

484 #ifde‡
__FAST_MATH__


485 #i‡!
	`__GNUC_PREREQ
 (3, 4)

487 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

489 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

491 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

494 #i‡!
	`__GNUC_PREREQ
 (3, 5)

495 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

497 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

498 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

501 #i‡!
	`__GNUC_PREREQ
 (3, 4)

502 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

506 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

507 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

508 { 
__xld
: 
__x
 
	}
}; \

509 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

510 
	g__n
.
	g__xi
[1] = 0x80000000; \

511 
	g__n
.
	g__xi
[0] = 0; \

512  
	g__n
.
	g__xld
)

515 #ifde‡
__FAST_MATH__


517 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

518 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

519  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

521 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

522 
__ex
 = 
	`__ex∂
 (
__x
); \

523  0.5 * (
__ex
 + 1.0 / __ex))

525 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

526 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

527  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

530 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

531 
__vÆue
; \

532 
__vﬁ©ûe
 
__cw
; \

533 
__vﬁ©ûe
 
__cwtmp
; \

534 
__asm
 
	`__vﬁ©ûe
 ("‚°cw %0" : "=m" (
__cw
)); \

535 
__cwtmp
 = (
__cw
 & 0xf3ff) | 0x0400; \

536 
__asm
 
	`__vﬁ©ûe
 ("Êdcw %0" : : "m" (
__cwtmp
)); \

537 
__asm
 
	`__vﬁ©ûe
 ("‰ndöt" : "Ò" (
__vÆue
Ë: "0" (
__x
)); \

538 
__asm
 
	`__vﬁ©ûe
 ("Êdcw %0" : : "m" (
__cw
)); \

539  
__vÆue
)

541 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

542 
__vÆue
; \

543 
__vﬁ©ûe
 
__cw
; \

544 
__vﬁ©ûe
 
__cwtmp
; \

545 
__asm
 
	`__vﬁ©ûe
 ("‚°cw %0" : "=m" (
__cw
)); \

546 
__cwtmp
 = (
__cw
 & 0xf3ff) | 0x0800; \

547 
__asm
 
	`__vﬁ©ûe
 ("Êdcw %0" : : "m" (
__cwtmp
)); \

548 
__asm
 
	`__vﬁ©ûe
 ("‰ndöt" : "Ò" (
__vÆue
Ë: "0" (
__x
)); \

549 
__asm
 
	`__vﬁ©ûe
 ("Êdcw %0" : : "m" (
__cw
)); \

550  
__vÆue
)

552 #ifde‡
__FAST_MATH__


553 
	#__ldexp_code
 \

554 
__vÆue
; \

555 
__asm
 
__vﬁ©ûe__
 \

557 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

558  
__vÆue


	)

560 
__MATH_INLINE
 

561 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

563 
__ldexp_code
;

564 
	}
}

569 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


571 #ifde‡
__FAST_MATH__


572 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

576 
	#__M_SQRT2
 1.41421356237309504880L

	)

578 #i‡!
	`__GNUC_PREREQ
 (3, 5)

579 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

580 
__vÆue
; \

581 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

582 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

584 
__asm
 
__vﬁ©ûe__
 \

588 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

589  
__vÆue
)

594 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

595 
__y
 = 
	`__Áb¶
 (
__x
); \

596  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

597 * 
	$__sgn1l
 (
__x
)))

599 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

600  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

602 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

603 
__y
 = 
	`__Áb¶
 (
__x
); \

604  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

607 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

608  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

610 #i‡!
	`__GNUC_PREREQ
 (3, 5)

611 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

612 
__vÆue
; \

613 
__junk
; \

614 
__asm
 
__vﬁ©ûe__
 \

616 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

617  
__vÆue
)

623 #ifde‡
__USE_ISOC99


624 #ifde‡
__FAST_MATH__


626 #i‡!
	`__GNUC_PREREQ
 (3, 5)

627 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

630 
__MATH_INLINE
 

631 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

633 
__ldexp_code
;

634 
	}
}

636 
__MATH_INLINE
 

637 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

639 
__ldexp_code
;

640 
	}
}

642 
__ölöe_m©hcodeNP3
 (
fma
, 
__x
, 
__y
, 
__z
,  (__x * __y) + __z)

644 
__ölöe_m©h›NP
 (
röt
, "frndint")

647 
	#__Ãöt_code
 \

648 
__Ãöåes
; \

649 
__asm__
 
__vﬁ©ûe__
 \

651 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

652  
__Ãöåes


	)

653 
__MATH_INLINE
 

654 
__NTH
 (
	$Ãötf
 (
__x
))

656 
__Ãöt_code
;

657 
	}
}

658 
__MATH_INLINE
 

659 
__NTH
 (
	$Ãöt
 (
__x
))

661 
__Ãöt_code
;

662 
	}
}

663 
__MATH_INLINE
 

664 
__NTH
 (
	$Ãöé
 (
__x
))

666 
__Ãöt_code
;

667 
	}
}

668 #unde‡
__Ãöt_code


670 
	#__Œröt_code
 \

671 
__Œröåes
; \

672 
__asm__
 
__vﬁ©ûe__
 \

674 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

675  
__Œröåes


	)

676 
__MATH_INLINE
 

677 
__NTH
 (
	$Œrötf
 (
__x
))

679 
__Œröt_code
;

680 
	}
}

681 
__MATH_INLINE
 

682 
__NTH
 (
	$Œröt
 (
__x
))

684 
__Œröt_code
;

685 
	}
}

686 
__MATH_INLINE
 

687 
__NTH
 (
	$Œröé
 (
__x
))

689 
__Œröt_code
;

690 
	}
}

691 #unde‡
__Œröt_code


696 #ifde‡
__USE_MISC


698 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

699 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

700 
__vÆue
; \

701 
__˛obbîed
; \

702 
__asm
 
__vﬁ©ûe__
 \

707 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

708  
__vÆue
)

713 
__MATH_INLINE
 

714 
__NTH
 (
	$__föôe
 (
__x
))

716  (
__exãnsi⁄__


717 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

719 
	}
}

722 #ifde‡
__FAST_MATH__


723 
__ölöe_m©hcode
 (
__coshm1
, 
__x
, \

724 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

725  0.5 * (
__exm1
 / (__exm1 + 1.0)) * __exm1)

727 
__ölöe_m©hcode
 (
__acosh1p
, 
__x
, \

728  
log1∂
 (
__x
 + 
__libc_sqπl
 (__x) * __libc_sqrtl (__x + 2.0)))

734 #unde‡
__©™2_code


735 #ifde‡
__FAST_MATH__


736 #unde‡
__expm1_code


737 #unde‡
__exp_code


738 #unde‡
__söcos_code


745 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


746 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

747 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

748 
__vÆue
;

749 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

750 : "Ò" (
__vÆue
)

751 : "0" (
__x
), "u" (
__y
) : "st(1)");

752  
__vÆue
;)

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200112L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200112L

	)

93 
	#_POSIX_SEMAPHORES
 200112L

	)

96 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

99 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

100 
	#_POSIX_ASYNC_IO
 1

	)

102 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

104 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

107 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

110 
	#_LFS_LARGEFILE
 1

	)

111 
	#_LFS64_LARGEFILE
 1

	)

112 
	#_LFS64_STDIO
 1

	)

115 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

118 
	#_POSIX_CPUTIME
 0

	)

121 
	#_POSIX_THREAD_CPUTIME
 0

	)

124 
	#_POSIX_REGEXP
 1

	)

127 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

130 
	#_POSIX_SHELL
 1

	)

133 
	#_POSIX_TIMEOUTS
 200112L

	)

136 
	#_POSIX_SPIN_LOCKS
 200112L

	)

139 
	#_POSIX_SPAWN
 200112L

	)

142 
	#_POSIX_TIMERS
 200112L

	)

145 
	#_POSIX_BARRIERS
 200112L

	)

148 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

151 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

154 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

157 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

160 
	#_POSIX_ADVISORY_INFO
 200112L

	)

163 
	#_POSIX_IPV6
 200112L

	)

166 
	#_POSIX_RAW_SOCKETS
 200112L

	)

169 
	#_POSIX2_CHAR_TERM
 200112L

	)

172 
	#_POSIX_SPORADIC_SERVER
 -1

	)

173 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

176 
	#_POSIX_TRACE
 -1

	)

177 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

178 
	#_POSIX_TRACE_INHERIT
 -1

	)

179 
	#_POSIX_TRACE_LOG
 -1

	)

182 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

23 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

24 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

25 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

26 
	#__SIZEOF_PTHREAD_COND_COMPAT_T
 12

	)

27 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

29 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

30 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

31 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	t±hªad_t
;

41 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

42 
	m__Æign
;

43 } 
	t±hªad_©å_t
;

46 
	s__±hªad_öã∫Æ_¶i°


48 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

49 } 
	t__±hªad_¶i°_t
;

56 
	s__±hªad_muãx_s


58 
	m__lock
;

59 
	m__cou¡
;

60 
	m__ow√r
;

63 
	m__köd
;

64 
	m__nu£rs
;

65 
__exãnsi⁄__
 union

67 
	m__•ös
;

68 
__±hªad_¶i°_t
 
	m__li°
;

70 } 
	m__d©a
;

71 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

72 
	m__Æign
;

73 } 
	t±hªad_muãx_t
;

77 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

78 
	m__Æign
;

79 } 
	t±hªad_muãx©å_t
;

88 
	m__lock
;

89 
	m__fuãx
;

90 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

91 
__exãnsi⁄__
 
	m__wakeup_£q
;

92 
__exãnsi⁄__
 
	m__wokí_£q
;

93 *
	m__muãx
;

94 
	m__nwaôîs
;

95 
	m__brﬂdˇ°_£q
;

96 } 
	m__d©a
;

97 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

98 
__exãnsi⁄__
 
	m__Æign
;

99 } 
	t±hªad_c⁄d_t
;

103 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

104 
	m__Æign
;

105 } 
	t±hªad_c⁄d©å_t
;

109 
	t±hªad_key_t
;

113 
	t±hªad_⁄˚_t
;

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


123 
	m__lock
;

124 
	m__ƒ_ªadîs
;

125 
	m__ªadîs_wakeup
;

126 
	m__wrôî_wakeup
;

127 
	m__ƒ_ªadîs_queued
;

128 
	m__ƒ_wrôîs_queued
;

131 
	m__Êags
;

132 
	m__wrôî
;

133 } 
	m__d©a
;

134 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

135 
	m__Æign
;

136 } 
	t±hªad_rwlock_t
;

140 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

141 
	m__Æign
;

142 } 
	t±hªad_rwlock©å_t
;

146 #ifde‡
__USE_XOPEN2K


148 vﬁ©ûê
	t±hªad_•ölock_t
;

155 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

156 
	m__Æign
;

157 } 
	t±hªad_b¨rõr_t
;

161 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

162 
	m__Æign
;

163 } 
	t±hªad_b¨rõøâr_t
;

168 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

21 #i‚de‡
_BITS_SETJMP_H


22 
	#_BITS_SETJMP_H
 1

	)

24 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


28 #i‚def 
_ASM


29 
	t__jmp_buf
[6];

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket.h

20 #i‚de‡
__BITS_SOCKET_H


21 
	#__BITS_SOCKET_H


	)

23 #i‡!
deföed
 
_SYS_SOCKET_H
 && !deföed 
_NETINET_IN_H


27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<limôs.h
>

32 
	~<sys/ty≥s.h
>

35 #i‚de‡
__sockÀn_t_deföed


36 
__sockÀn_t
 
	tsockÀn_t
;

37 
	#__sockÀn_t_deföed


	)

41 
	e__sockë_ty≥


43 
	mSOCK_STREAM
 = 1,

45 
	#SOCK_STREAM
 
SOCK_STREAM


	)

46 
	mSOCK_DGRAM
 = 2,

48 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

49 
	mSOCK_RAW
 = 3,

50 
	#SOCK_RAW
 
SOCK_RAW


	)

51 
	mSOCK_RDM
 = 4,

52 
	#SOCK_RDM
 
SOCK_RDM


	)

53 
	mSOCK_SEQPACKET
 = 5,

55 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

56 
	mSOCK_PACKET
 = 10

59 
	#SOCK_PACKET
 
SOCK_PACKET


	)

63 
	#PF_UNSPEC
 0

	)

64 
	#PF_LOCAL
 1

	)

65 
	#PF_UNIX
 
PF_LOCAL


	)

66 
	#PF_FILE
 
PF_LOCAL


	)

67 
	#PF_INET
 2

	)

68 
	#PF_AX25
 3

	)

69 
	#PF_IPX
 4

	)

70 
	#PF_APPLETALK
 5

	)

71 
	#PF_NETROM
 6

	)

72 
	#PF_BRIDGE
 7

	)

73 
	#PF_ATMPVC
 8

	)

74 
	#PF_X25
 9

	)

75 
	#PF_INET6
 10

	)

76 
	#PF_ROSE
 11

	)

77 
	#PF_DEC√t
 12

	)

78 
	#PF_NETBEUI
 13

	)

79 
	#PF_SECURITY
 14

	)

80 
	#PF_KEY
 15

	)

81 
	#PF_NETLINK
 16

	)

82 
	#PF_ROUTE
 
PF_NETLINK


	)

83 
	#PF_PACKET
 17

	)

84 
	#PF_ASH
 18

	)

85 
	#PF_ECONET
 19

	)

86 
	#PF_ATMSVC
 20

	)

87 
	#PF_SNA
 22

	)

88 
	#PF_IRDA
 23

	)

89 
	#PF_PPPOX
 24

	)

90 
	#PF_WANPIPE
 25

	)

91 
	#PF_BLUETOOTH
 31

	)

92 
	#PF_MAX
 32

	)

95 
	#AF_UNSPEC
 
PF_UNSPEC


	)

96 
	#AF_LOCAL
 
PF_LOCAL


	)

97 
	#AF_UNIX
 
PF_UNIX


	)

98 
	#AF_FILE
 
PF_FILE


	)

99 
	#AF_INET
 
PF_INET


	)

100 
	#AF_AX25
 
PF_AX25


	)

101 
	#AF_IPX
 
PF_IPX


	)

102 
	#AF_APPLETALK
 
PF_APPLETALK


	)

103 
	#AF_NETROM
 
PF_NETROM


	)

104 
	#AF_BRIDGE
 
PF_BRIDGE


	)

105 
	#AF_ATMPVC
 
PF_ATMPVC


	)

106 
	#AF_X25
 
PF_X25


	)

107 
	#AF_INET6
 
PF_INET6


	)

108 
	#AF_ROSE
 
PF_ROSE


	)

109 
	#AF_DEC√t
 
PF_DEC√t


	)

110 
	#AF_NETBEUI
 
PF_NETBEUI


	)

111 
	#AF_SECURITY
 
PF_SECURITY


	)

112 
	#AF_KEY
 
PF_KEY


	)

113 
	#AF_NETLINK
 
PF_NETLINK


	)

114 
	#AF_ROUTE
 
PF_ROUTE


	)

115 
	#AF_PACKET
 
PF_PACKET


	)

116 
	#AF_ASH
 
PF_ASH


	)

117 
	#AF_ECONET
 
PF_ECONET


	)

118 
	#AF_ATMSVC
 
PF_ATMSVC


	)

119 
	#AF_SNA
 
PF_SNA


	)

120 
	#AF_IRDA
 
PF_IRDA


	)

121 
	#AF_PPPOX
 
PF_PPPOX


	)

122 
	#AF_WANPIPE
 
PF_WANPIPE


	)

123 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

124 
	#AF_MAX
 
PF_MAX


	)

130 
	#SOL_RAW
 255

	)

131 
	#SOL_DECNET
 261

	)

132 
	#SOL_X25
 262

	)

133 
	#SOL_PACKET
 263

	)

134 
	#SOL_ATM
 264

	)

135 
	#SOL_AAL
 265

	)

136 
	#SOL_IRDA
 266

	)

139 
	#SOMAXCONN
 128

	)

142 
	~<bôs/sockaddr.h
>

145 
	ssockaddr


147 
__SOCKADDR_COMMON
 (
ß_
);

148 
	mß_d©a
[14];

154 #i‡
ULONG_MAX
 > 0xffffffff

155 
	#__ss_Æig¡y≥
 
__uöt64_t


	)

157 
	#__ss_Æig¡y≥
 
__uöt32_t


	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000

209 
	#MSG_MORE
 
MSG_MORE


	)

215 
	smsghdr


217 *
	mmsg_«me
;

218 
sockÀn_t
 
	mmsg_«mñí
;

220 
iovec
 *
	mmsg_iov
;

221 
size_t
 
	mmsg_iovÀn
;

223 *
	mmsg_c⁄åﬁ
;

224 
size_t
 
	mmsg_c⁄åﬁÀn
;

229 
	mmsg_Êags
;

233 
	scmsghdr


235 
size_t
 
	mcmsg_Àn
;

240 
	mcmsg_Àvñ
;

241 
	mcmsg_ty≥
;

242 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

243 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

248 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

249 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

251 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

253 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

254 
	#CMSG_FIRSTHDR
(
mhdr
) \

255 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

256 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë
NULL
)

	)

257 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

258 & (
size_t
Ë~( (size_tË- 1))

	)

259 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

260 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

261 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

263 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

264 
cmsghdr
 *
__cmsg
Ë
__THROW
;

265 #ifde‡
__USE_EXTERN_INLINES


266 #i‚de‡
_EXTERN_INLINE


267 
	#_EXTERN_INLINE
 
__ölöe


	)

269 
_EXTERN_INLINE
 
cmsghdr
 *

270 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

272 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

276 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

277 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

278 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


279 + 
__mhdr
->
msg_c⁄åﬁÀn
)

280 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

281 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

284  
__cmsg
;

285 
	}
}

292 
SCM_RIGHTS
 = 0x01

293 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

294 #ifde‡
__USE_BSD


295 , 
SCM_CREDENTIALS
 = 0x02

296 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

302 
	su¸ed


304 
pid_t
 
	mpid
;

305 
uid_t
 
	muid
;

306 
gid_t
 
	mgid
;

310 
	~<asm/sockë.h
>

314 
	slögî


316 
	ml_⁄off
;

317 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

29 
__Æways_ölöe
 
ssize_t


30 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

32 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

33 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos0
 (
__buf
)))

34  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

35  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

36 
	}
}

38 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

39 
size_t
 
__buÊí
, 
__Êags
,

40 
__SOCKADDR_ARG
 
__addr
,

41 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

42 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

43 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

44 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

45 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

47 
__Æways_ölöe
 
ssize_t


48 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

51 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

52 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos0
 (
__buf
)))

53  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

54 
__addr
, 
__addr_Àn
);

55  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

56 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 
	$__LDBL_REDIR1_DECL
 (
__°πﬁd_öã∫Æ
, 
__°πod_öã∫Æ
)

36 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


37 #ifde‡
__USE_MISC


38 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

40 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

41 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

42 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

31 
__Æways_ölöe
 
__wur
 *

32 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

34 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

35  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

37  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

38 
	}
}

41 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

42 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

43 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

44 
size_t
 
__buÊí
), 
±¢ame_r
)

45 
	`__n⁄nuŒ
 ((2));

47 
__Æways_ölöe
 

48 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

50 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

51 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

52  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

53  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

54 
	}
}

57 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

58 
__THROW
 
__wur
;

59 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

60 
w˘omb
Ë
__wur
;

62 
__Æways_ölöe
 
__wur
 

63 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

68 
	#__STDLIB_MB_LEN_MAX
 16

	)

69 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


72 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

73  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

74  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

75 
	}
}

78 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

79 
__c⁄°
 *
__ª°ri˘
 
__§c
,

80 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

81 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

82 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

83 
__c⁄°
 *
__ª°ri˘
 
__§c
,

84 
size_t
 
__Àn
), 
mb°owcs
);

86 
__Æways_ölöe
 
size_t


87 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

88 
size_t
 
__Àn
))

90 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

91 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

92 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

93  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

94 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

95  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

96 
	}
}

99 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

100 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

103 (*
__ª°ri˘
 
__d°
,

104 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
wc°ombs
);

107 
__Æways_ölöe
 
size_t


108 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

109 
size_t
 
__Àn
))

111 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

112 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

113  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

114  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

115 
	}
}

	@/usr/include/bits/string.h

21 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

31 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

32 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


34 #i‚de‡
__STRING_INLINE


35 #ifde‡
__˝lu•lus


36 
	#__STRING_INLINE
 
ölöe


	)

38 
	#__STRING_INLINE
 
__ölöe


	)

43 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

44 ((((
__c⁄°
 *Ë(
§c
))[
idx
 + 1] << 8) \

45 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

46 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

47 (((((
__c⁄°
 *Ë(
§c
))[
idx
 + 3] << 8 \

48 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 2]) << 8 \

49 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 1]) << 8 \

50 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

54 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

55 
	#mem˝y
(
de°
, 
§c
, 
n
) \

56 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

57 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

58 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

59 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

60 ((
n
) == 0 \

61 ? (
de°
) \

62 : (((
n
) % 4 == 0) \

63 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

64 : (((
n
) % 2 == 0) \

65 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

66 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

68 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

69 
size_t
 
__n
);

71 
__STRING_INLINE
 *

72 
	$__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

74 
__d0
, 
__d1
;

75 *
__tmp
 = 
__de°
;

76 
__asm__
 
__vﬁ©ûe__


84 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

85 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

87  
__de°
;

88 
	}
}

90 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

91 
size_t
 
__n
);

93 
__STRING_INLINE
 *

94 
	$__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

96 
__d0
, 
__d1
;

97 *
__tmp
 = 
__de°
;

98 
__asm__
 
__vﬁ©ûe__


111 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

112 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

114  
__de°
;

115 
	}
}

117 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
,

118 
size_t
 
__n
);

120 
__STRING_INLINE
 *

121 
	$__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

123 
__d0
, 
__d1
, 
__d2
;

124 *
__tmp
 = 
__de°
;

125 
__asm__
 
__vﬁ©ûe__


136 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

137 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

138 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

139 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

141  
__de°
;

142 
	}
}

144 
	#_HAVE_STRING_ARCH_memmove
 1

	)

145 #i‚de‡
_FORCE_INLINES


148 
__STRING_INLINE
 *

149 
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

151 
__d0
, 
__d1
, 
__d2
;

152 *
__tmp
 = 
__de°
;

153 i‡(
__de°
 < 
__§c
)

154 
__asm__
 
__vﬁ©ûe__


157 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

158 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

159 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

160 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

162 
__asm__
 
__vﬁ©ûe__


166 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

167 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

168 : "0" (
__n
), "1" (__¿- 1 + (
__c⁄°
 *Ë
__§c
),

169 "2" (
__n
 - 1 + (*Ë
__tmp
),

170 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

171  
__de°
;

172 
	}
}

176 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

177 #i‚de‡
_FORCE_INLINES


178 #i‚de‡
__PIC__


180 
__STRING_INLINE
 

181 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

183 
__d0
, 
__d1
, 
__d2
;

184 
__ªs
;

185 
__asm__
 
__vﬁ©ûe__


193 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

194 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

195 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

196 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

198  
__ªs
;

199 
	}
}

204 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

205 
	#_USE_STRING_ARCH_mem£t
 1

	)

206 
	#mem£t
(
s
, 
c
, 
n
) \

207 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

208 ? ((
n
) == 1 \

209 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

210 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

211 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

212 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

213 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

214 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

215 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

216 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

217 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

219 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

220 *((*Ë
__s
Ë(Ë(
c
); \

221 
__s
; })

	)

223 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

224 ({ *
__s
 = (
s
); \

226 
__ui
; \

227 
__usi
; \

228 
__uc
; \

229 } *
__u
 = 
__s
; \

230 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

236 i‡((
n
) == 3 || (n) >= 5) \

237 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

240 
n
) \

243 
__u
->
__ui
 = 
__c
; \

244 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

246 
__u
->
__ui
 = 
__c
; \

247 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

249 
__u
->
__ui
 = 
__c
; \

250 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

252 
__u
->
__usi
 = (Ë
__c
; \

253 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

254 
__u
->
__uc
 = (Ë
__c
; \

258 
__u
->
__ui
 = 
__c
; \

259 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

261 
__u
->
__ui
 = 
__c
; \

262 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__usi
 = (Ë
__c
; \

271 
__u
->
__ui
 = 
__c
; \

272 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

274 
__u
->
__ui
 = 
__c
; \

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

277 
__u
->
__ui
 = 
__c
; \

278 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

280 
__u
->
__uc
 = (Ë
__c
; \

284 
__u
->
__ui
 = 
__c
; \

285 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

287 
__u
->
__ui
 = 
__c
; \

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

290 
__u
->
__ui
 = 
__c
; \

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

293 
__u
->
__ui
 = 
__c
; \

298 
__s
; })

	)

300 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

301 (((
n
) % 4 == 0) \

302 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

303 
n
) \

304 : (((
n
) % 2 == 0) \

305 ? 
	`__mem£t_c˙_by2
 (
s
, \

306 ((Ë((Ë(
c
))) * 0x01010101,\

307 
n
) \

308 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

310 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

311 
size_t
 
__n
);

313 
__STRING_INLINE
 *

314 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

316 *
__tmp
 = 
__s
;

317 
__d0
;

318 #ifde‡
__i686__


319 
__asm__
 
__vﬁ©ûe__


322 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

323 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

324 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

327 
__asm__
 
__vﬁ©ûe__


333 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338  
__s
;

339 
	}
}

341 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

342 
size_t
 
__n
);

344 
__STRING_INLINE
 *

345 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

347 
__d0
, 
__d1
;

348 *
__tmp
 = 
__s
;

349 #ifde‡
__i686__


350 
__asm__
 
__vﬁ©ûe__


354 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359 
__asm__
 
__vﬁ©ûe__


365 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370  
__s
;

371 
	}
}

373 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

374 (((
n
) % 4 == 0) \

375 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

376 : (((
n
) % 2 == 0) \

377 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

378 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

380 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

382 
__STRING_INLINE
 *

383 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

385 *
__tmp
 = 
__s
;

386 
__d0
;

387 
__asm__
 
__vﬁ©ûe__


397 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

398 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

399 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

401  
__s
;

402 
	}
}

404 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

406 
__STRING_INLINE
 *

407 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

409 
__d0
, 
__d1
;

410 *
__tmp
 = 
__s
;

411 
__asm__
 
__vﬁ©ûe__


422 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

423 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

424 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

426  
__s
;

427 
	}
}

431 
	#_HAVE_STRING_ARCH_memchr
 1

	)

432 #i‚de‡
_FORCE_INLINES


433 
__STRING_INLINE
 *

434 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

436 
__d0
;

437 #ifde‡
__i686__


438 
__d1
;

440 *
__ªs
;

441 i‡(
__n
 == 0)

442  
NULL
;

443 #ifde‡
__i686__


444 
__asm__
 
__vﬁ©ûe__


448 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

449 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

450 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

453 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464  
__ªs
 - 1;

465 
	}
}

468 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

469 #i‚de‡
_FORCE_INLINES


470 
__STRING_INLINE
 *
__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
);

472 
__STRING_INLINE
 *

473 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

475 
__d0
;

476 #ifde‡
__i686__


477 
__d1
;

479 *
__ªs
;

480 i‡(
__n
 == 0)

481  
NULL
;

482 #ifde‡
__i686__


483 
__asm__
 
__vﬁ©ûe__


489 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

490 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

491 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

494 
__asm__
 
__vﬁ©ûe__


501 : "=D" (
__ªs
), "=&c" (
__d0
)

502 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

503 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

506  
__ªs
;

507 
	}
}

508 #ifde‡
__USE_GNU


509 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

514 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

515 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

517 #i‚de‡
_FORCE_INLINES


518 
__STRING_INLINE
 *

519 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

521 
__d0
;

522 *
__ªs
;

523 
__asm__
 
__vﬁ©ûe__


526 : "=D" (
__ªs
), "=&c" (
__d0
)

527 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

528 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

530  
__ªs
 - 1;

531 
	}
}

532 #ifde‡
__USE_GNU


533 
__STRING_INLINE
 *

534 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

536  
	`__øwmemchr
 (
__s
, 
__c
);

537 
	}
}

543 
	#_HAVE_STRING_ARCH_°æí
 1

	)

544 
	#°æí
(
°r
) \

545 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

546 ? 
	`__buûtö_°æí
 (
°r
) \

547 : 
	`__°æí_g
 (
°r
)))

	)

548 
__STRING_INLINE
 
size_t
 
__°æí_g
 (
__c⁄°
 *
__°r
);

550 
__STRING_INLINE
 
size_t


551 
	$__°æí_g
 (
__c⁄°
 *
__°r
)

553 
__dummy
;

554 
__c⁄°
 *
__tmp
 = 
__°r
;

555 
__asm__
 
__vﬁ©ûe__


561 : "Ù" (
__tmp
), "=&q" (
__dummy
)

562 : "0" (
__°r
),

563 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

565  
__tmp
 - 
__°r
 - 1;

566 
	}
}

570 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

571 
	#°r˝y
(
de°
, 
§c
) \

572 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

573 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

574 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

575 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

576 (
__c⁄°
 *Ë(
§c
), \

577 
	`°æí
 (
§c
) + 1)) \

578 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

580 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

581 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

583 
__ui
; \

584 
__usi
; \

585 
__uc
; \

586 
__c
; \

587 } *
__u
 = (*Ë
__de°
; \

588 
§˛í
) \

591 
__u
->
__uc
 = '\0'; \

594 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

597 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

598 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

599 
__u
->
__uc
 = '\0'; \

602 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

605 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

606 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

607 
__u
->
__uc
 = '\0'; \

610 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

611 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

612 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

615 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

617 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

618 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

619 
__u
->
__uc
 = '\0'; \

622 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

624 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

627 (*Ë
__de°
; }))

	)

629 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

631 
__STRING_INLINE
 *

632 
	$__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

634 *
__tmp
 = 
__de°
;

635 
__dummy
;

636 
__asm__
 
__vﬁ©ûe__


645 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

646 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

647 : "0" (
__§c
), "1" (
__tmp
),

648 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

650  
__de°
;

651 
	}
}

654 #ifde‡
__USE_GNU


655 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

657 
	#__°p˝y
(
de°
, 
§c
) \

658 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

659 ? (
	`°æí
 (
§c
) + 1 <= 8 \

660 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

661 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

662 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

663 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

664 ((
§˛í
) % 4 == 0 \

665 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

666 : ((
§˛í
) % 2 == 0 \

667 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

668 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

671 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

673 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

674 (
	`__exãnsi⁄__
 ({ union { \

675 
__ui
; \

676 
__usi
; \

677 
__uc
; \

678 
__c
; \

679 } *
__u
 = (*Ë(
de°
); \

680 
§˛í
) \

683 
__u
->
__uc
 = '\0'; \

686 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

687 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

690 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

691 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

692 
__u
->
__uc
 = '\0'; \

695 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

696 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

699 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

700 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

701 
__u
->
__uc
 = '\0'; \

704 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

705 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

706 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

713 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

714 
__u
->
__uc
 = '\0'; \

717 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

719 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

720 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

723 (*Ë
__u
; }))

	)

725 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

726 
size_t
 
__§˛í
);

728 
__STRING_INLINE
 *

729 
	$__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

731 *
__tmp
 = 
__de°
;

732 
__d0
, 
__d1
;

733 
__asm__
 
__vﬁ©ûe__


741 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

742 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

744  
__tmp
;

745 
	}
}

747 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

748 
size_t
 
__§˛í
);

750 
__STRING_INLINE
 *

751 
	$__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

753 *
__tmp
 = 
__de°
;

754 
__d0
, 
__d1
;

755 
__asm__
 
__vﬁ©ûe__


768 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

769 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

770 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

771 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

773  
__tmp
 + 2;

774 
	}
}

776 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
,

777 
size_t
 
__§˛í
);

779 
__STRING_INLINE
 *

780 
	$__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

782 
__d0
, 
__d1
;

783 *
__tmp
 = 
__de°
;

784 
__asm__
 
__vﬁ©ûe__


795 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

796 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

797 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

798 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

800  
__tmp
;

801 
	}
}

803 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

805 
__STRING_INLINE
 *

806 
	$__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

808 *
__tmp
 = 
__de°
;

809 
__dummy
;

810 
__asm__
 
__vﬁ©ûe__


819 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

820 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

821 : "0" (
__§c
), "1" (
__tmp
),

822 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

824  
__tmp
 - 1;

825 
	}
}

830 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

831 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

832 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

833 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

834 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

835 (
__c⁄°
 *Ë(
§c
), 
n
) \

836 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

837 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

838 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

839 (((
§˛í
) % 4 == 0) \

840 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

841 : (((
§˛í
) % 2 == 0) \

842 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

843 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

845 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[],

846 
size_t
 
__§˛í
, size_à
__n
);

848 
__STRING_INLINE
 *

849 
	$__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

851 *
__tmp
 = 
__de°
;

852 
__dummy1
, 
__dummy2
;

853 
__asm__
 
__vﬁ©ûe__


861 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

862 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

863 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

864 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

866 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

867  
__de°
;

868 
	}
}

870 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[],

871 
size_t
 
__§˛í
, size_à
__n
);

873 
__STRING_INLINE
 *

874 
	$__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

876 *
__tmp
 = 
__de°
;

877 
__dummy1
, 
__dummy2
;

878 
__asm__
 
__vﬁ©ûe__


891 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

892 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

893 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

894 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

896 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

897  
__de°
;

898 
	}
}

900 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[],

901 
size_t
 
__§˛í
, size_à
__n
);

903 
__STRING_INLINE
 *

904 
	$__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

906 
__d0
, 
__d1
;

907 *
__tmp
 = 
__de°
;

908 
__asm__
 
__vﬁ©ûe__


919 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

920 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

921 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

922 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

924 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

925  
__de°
;

926 
	}
}

928 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
,

929 
size_t
 
__n
);

931 
__STRING_INLINE
 *

932 
	$__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

934 *
__tmp
 = 
__de°
;

935 
__dummy
;

936 i‡(
__n
 > 0)

937 
__asm__
 
__vﬁ©ûe__


953 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

954 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

957  
__de°
;

958 
	}
}

962 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

963 
	#°rˇt
(
de°
, 
§c
) \

964 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

965 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

966 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

968 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[],

969 
size_t
 
__§˛í
);

971 
__STRING_INLINE
 *

972 
	$__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
)

974 #ifde‡
__i686__


975 
__d0
;

976 *
__tmp
;

977 
__asm__
 
__vﬁ©ûe__


979 : "=D" (
__tmp
), "=&c" (
__d0
),

980 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

981 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

982 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

984 --
__tmp
;

986 *
__tmp
 = 
__de°
 - 1;

987 
__asm__
 
__vﬁ©ûe__


992 : "Ù" (
__tmp
),

993 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

994 : "0" (
__tmp
),

995 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

998 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

999  
__de°
;

1000 
	}
}

1002 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

1004 
__STRING_INLINE
 *

1005 
	$__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

1007 *
__tmp
 = 
__de°
 - 1;

1008 
__dummy
;

1009 
__asm__
 
__vﬁ©ûe__


1021 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1022 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1023 : "1" (
__tmp
), "2" (
__§c
),

1024 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1026  
__de°
;

1027 
	}
}

1031 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1032 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1033 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1034 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1035 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1036 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1037 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1038 (
__c⁄°
 *Ë(
§c
), \

1039 (
n
)Ë0, 
__de°
)) \

1040 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1042 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[],

1043 
size_t
 
__n
);

1045 
__STRING_INLINE
 *

1046 
	$__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__n
)

1048 *
__tmp
 = 
__de°
;

1049 
__dummy
;

1050 #ifde‡
__i686__


1051 
__asm__
 
__vﬁ©ûe__


1065 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1066 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1069 --
__tmp
;

1070 
__asm__
 
__vﬁ©ûe__


1087 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1088 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1091  
__de°
;

1092 
	}
}

1096 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1097 
	#°rcmp
(
s1
, 
s2
) \

1098 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1099 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1100 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1101 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

1102 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1103 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1104 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1105 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1106 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1107 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1108 (
__c⁄°
 *Ë(
s2
), \

1109 
	`°æí
 (
s1
)) \

1110 : 
	`__°rcmp_cg
 ((
__c⁄°
 *Ë(
s1
), \

1111 (
__c⁄°
 *Ë(
s2
), \

1112 
	`°æí
 (
s1
))) \

1113 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1114 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1115 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1116 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1117 (
__c⁄°
 *Ë(
s2
), \

1118 
	`°æí
 (
s2
)) \

1119 : 
	`__°rcmp_gc
 ((
__c⁄°
 *Ë(
s1
), \

1120 (
__c⁄°
 *Ë(
s2
), \

1121 
	`°æí
 (
s2
))) \

1122 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1124 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1125 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1126 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1128 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1129 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1131 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1132 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1133 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1136 
__ªsu…
; }))

	)

1138 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1139 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = (
s2
); \

1140 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1141 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1143 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1144 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1146 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1147 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1148 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1151 
__ªsu…
; }))

	)

1153 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1154 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = (
s1
); \

1155 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1156 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1158 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1159 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1161 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1162 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1163 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1166 
__ªsu…
; }))

	)

1168 
__STRING_INLINE
 
__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

1170 
__STRING_INLINE
 

1171 
	$__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

1173 
__ªs
;

1174 
__asm__
 
__vﬁ©ûe__


1190 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1191 : "1" (
__s1
), "2" (
__s2
),

1192 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1193 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1195  
__ªs
;

1196 
	}
}

1200 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1201 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1202 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1203 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1204 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1205 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1206 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1208 
__STRING_INLINE
 
__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

1209 
size_t
 
__n
);

1211 
__STRING_INLINE
 

1212 
	$__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

1214 
__ªs
;

1215 
__asm__
 
__vﬁ©ûe__


1234 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1235 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1236 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1237 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1239  
__ªs
;

1240 
	}
}

1244 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1245 
	#_USE_STRING_ARCH_°rchr
 1

	)

1246 
	#°rchr
(
s
, 
c
) \

1247 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1248 ? ((
c
) == '\0' \

1249 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1250 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1251 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1253 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1255 
__STRING_INLINE
 *

1256 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1258 
__d0
;

1259 *
__ªs
;

1260 
__asm__
 
__vﬁ©ûe__


1270 : "Ù" (
__ªs
), "=&a" (
__d0
)

1271 : "0" (
__s
), "1" (
__c
),

1272 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1274  
__ªs
;

1275 
	}
}

1277 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1279 
__STRING_INLINE
 *

1280 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1282 
__d0
;

1283 *
__ªs
;

1284 
__asm__
 
__vﬁ©ûe__


1295 : "Ù" (
__ªs
), "=&a" (
__d0
)

1296 : "0" (
__s
), "1" (
__c
),

1297 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1299  
__ªs
;

1300 
	}
}

1304 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1305 
	#__°rch∫ul
(
s
, 
c
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1307 ? ((
c
) == '\0' \

1308 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1309 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1310 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1312 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

1314 
__STRING_INLINE
 *

1315 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

1317 
__d0
;

1318 *
__ªs
;

1319 
__asm__
 
__vﬁ©ûe__


1329 : "Ù" (
__ªs
), "=&a" (
__d0
)

1330 : "0" (
__s
), "1" (
__c
),

1331 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1333  
__ªs
;

1334 
	}
}

1336 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

1338 
__STRING_INLINE
 *

1339 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

1341 
__d0
;

1342 *
__ªs
;

1343 
__asm__
 
__vﬁ©ûe__


1354 : "Ù" (
__ªs
), "=&a" (
__d0
)

1355 : "0" (
__s
), "1" (
__c
),

1356 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1358  
__ªs
;

1359 
	}
}

1360 #ifde‡
__USE_GNU


1361 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1365 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1367 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1368 
	#ödex
(
s
, 
c
) \

1369 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1370 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1371 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1376 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1377 
	#°ºchr
(
s
, 
c
) \

1378 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1379 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1380 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1382 #ifde‡
__i686__


1383 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1385 
__STRING_INLINE
 *

1386 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1388 
__d0
, 
__d1
;

1389 *
__ªs
;

1390 
__asm__
 
__vﬁ©ûe__


1398 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1399 : "0" (1), "1" (
__s
), "2" (
__c
),

1400 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1402  
__ªs
 - 1;

1403 
	}
}

1405 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1407 
__STRING_INLINE
 *

1408 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1410 
__d0
, 
__d1
;

1411 *
__ªs
;

1412 
__asm__
 
__vﬁ©ûe__


1421 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1422 : "0" (1), "1" (
__s
), "2" (
__c
),

1423 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1425  
__ªs
 - 1;

1426 
	}
}

1428 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1430 
__STRING_INLINE
 *

1431 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1433 
__d0
, 
__d1
;

1434 *
__ªs
;

1435 
__asm__
 
__vﬁ©ûe__


1445 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1446 : "0" (0), "1" (
__s
), "2" (
__c
),

1447 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1449  
__ªs
;

1450 
	}
}

1452 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1454 
__STRING_INLINE
 *

1455 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1457 
__d0
, 
__d1
;

1458 *
__ªs
;

1459 
__asm__
 
__vﬁ©ûe__


1470 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1471 : "0" (0), "1" (
__s
), "2" (
__c
),

1472 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1474  
__ªs
;

1475 
	}
}

1479 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1481 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1482 
	#rödex
(
s
, 
c
) \

1483 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1484 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1485 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1491 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1492 
	#°rc•n
(
s
, 
ªje˘
) \

1493 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1494 ? ((
ªje˘
)[0] == '\0' \

1495 ? 
	`°æí
 (
s
) \

1496 : ((
ªje˘
)[1] == '\0' \

1497 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1498 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1499 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1501 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

1503 #i‚de‡
_FORCE_INLINES


1504 
__STRING_INLINE
 
size_t


1505 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

1507 
__d0
;

1508 *
__ªs
;

1509 
__asm__
 
__vﬁ©ûe__


1518 : "Ù" (
__ªs
), "=&a" (
__d0
)

1519 : "0" (
__s
), "1" (
__ªje˘
),

1520 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1522  (
__ªs
 - 1Ë- 
__s
;

1523 
	}
}

1526 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[],

1527 
size_t
 
__ªje˘_Àn
);

1529 
__STRING_INLINE
 
size_t


1530 
	$__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1532 
__d0
, 
__d1
, 
__d2
;

1533 
__c⁄°
 *
__ªs
;

1534 
__asm__
 
__vﬁ©ûe__


1545 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1546 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1548  (
__ªs
 - 1Ë- 
__s
;

1549 
	}
}

1551 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
);

1552 #ifde‡
__PIC__


1554 
__STRING_INLINE
 
size_t


1555 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1557 
__d0
, 
__d1
, 
__d2
;

1558 
__c⁄°
 *
__ªs
;

1559 
__asm__
 
__vﬁ©ûe__


1576 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1577 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1579  (
__ªs
 - 1Ë- 
__s
;

1580 
	}
}

1582 
__STRING_INLINE
 
size_t


1583 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1585 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1586 
__c⁄°
 *
__ªs
;

1587 
__asm__
 
__vﬁ©ûe__


1601 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1602 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1605  (
__ªs
 - 1Ë- 
__s
;

1606 
	}
}

1612 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1613 
	#°r•n
(
s
, 
ac˚±
) \

1614 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1615 ? ((
ac˚±
)[0] == '\0' \

1616 ? ((Ë(
s
), 0) \

1617 : ((
ac˚±
)[1] == '\0' \

1618 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1619 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1620 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1622 #i‚de‡
_FORCE_INLINES


1623 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1625 
__STRING_INLINE
 
size_t


1626 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1628 
__d0
;

1629 *
__ªs
;

1631 
__asm__
 
__vﬁ©ûe__


1637 : "Ù" (
__ªs
), "=&q" (
__d0
)

1638 : "0" (
__s
), "1" (
__ac˚±
),

1639 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1641  (
__ªs
 - 1Ë- 
__s
;

1642 
	}
}

1645 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1646 
size_t
 
__ac˚±_Àn
);

1648 
__STRING_INLINE
 
size_t


1649 
	$__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1651 
__d0
, 
__d1
, 
__d2
;

1652 
__c⁄°
 *
__ªs
;

1653 
__asm__
 
__vﬁ©ûe__


1664 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1665 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1668 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1669 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1671  (
__ªs
 - 1Ë- 
__s
;

1672 
	}
}

1674 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1675 #ifde‡
__PIC__


1677 
__STRING_INLINE
 
size_t


1678 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1680 
__d0
, 
__d1
, 
__d2
;

1681 
__c⁄°
 *
__ªs
;

1682 
__asm__
 
__vﬁ©ûe__


1698 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1699 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1701  (
__ªs
 - 1Ë- 
__s
;

1702 
	}
}

1704 
__STRING_INLINE
 
size_t


1705 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1707 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1708 
__c⁄°
 *
__ªs
;

1709 
__asm__
 
__vﬁ©ûe__


1723 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1724 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1726  (
__ªs
 - 1Ë- 
__s
;

1727 
	}
}

1732 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1733 
	#°Ωbrk
(
s
, 
ac˚±
) \

1734 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1735 ? ((
ac˚±
)[0] == '\0' \

1736 ? ((Ë(
s
), (*) 0) \

1737 : ((
ac˚±
)[1] == '\0' \

1738 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1739 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1740 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1742 
__STRING_INLINE
 *
__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1743 
size_t
 
__ac˚±_Àn
);

1745 
__STRING_INLINE
 *

1746 
	$__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1748 
__d0
, 
__d1
, 
__d2
;

1749 *
__ªs
;

1750 
__asm__
 
__vﬁ©ûe__


1765 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1766 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1768  
__ªs
;

1769 
	}
}

1771 
__STRING_INLINE
 *
__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1772 #ifde‡
__PIC__


1774 
__STRING_INLINE
 *

1775 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1777 
__d0
, 
__d1
, 
__d2
;

1778 *
__ªs
;

1779 
__asm__
 
__vﬁ©ûe__


1800 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1801 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1803  
__ªs
;

1804 
	}
}

1806 
__STRING_INLINE
 *

1807 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1809 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1810 *
__ªs
;

1811 
__asm__
 
__vﬁ©ûe__


1830 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1831 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1833  
__ªs
;

1834 
	}
}

1839 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1840 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1841 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1842 ? ((
√edÀ
)[0] == '\0' \

1843 ? (
hay°ack
) \

1844 : ((
√edÀ
)[1] == '\0' \

1845 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1846 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1847 
	`°æí
 (
√edÀ
)))) \

1848 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1852 
__STRING_INLINE
 *
__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1853 
size_t
 
__√edÀ_Àn
);

1855 
__STRING_INLINE
 *

1856 
	$__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1857 
size_t
 
__√edÀ_Àn
)

1859 
__d0
, 
__d1
, 
__d2
;

1860 *
__ªs
;

1861 
__asm__
 
__vﬁ©ûe__


1874 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1875 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1877  
__ªs
;

1878 
	}
}

1880 
__STRING_INLINE
 *
__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
);

1881 #ifde‡
__PIC__


1883 
__STRING_INLINE
 *

1884 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1886 
__d0
, 
__d1
, 
__d2
;

1887 *
__ªs
;

1888 
__asm__
 
__vﬁ©ûe__


1907 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1908 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1909 "d" (
__√edÀ
)

1911  
__ªs
;

1912 
	}
}

1914 
__STRING_INLINE
 *

1915 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1917 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1918 *
__ªs
;

1919 
__asm__
 
__vﬁ©ûe__


1936 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1937 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1938 "b" (
__√edÀ
)

1940  
__ªs
;

1941 
	}
}

1947 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1948 #ifde‡
__i686__


1949 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1950 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1951 ? 
	`__buûtö_ffs
 (
w‹d
) \

1952 : ({ 
__˙t
, 
__tmp
; \

1953 
__asm__
 
__vﬁ©ûe__
 \

1956 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1957 : "rm" (
w‹d
), "1" (-1)); \

1958 
__˙t
 + 1; }))

	)

1960 #i‚de‡
ff¶


1961 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1966 #i‚de‡
_FORCE_INLINES


1967 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 (1, 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 (1, 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


26 #unde‡
mem˝y


27 #unde‡
memmove


28 #unde‡
mem£t


29 #unde‡
°rˇt


30 #unde‡
°r˝y


31 #unde‡
°∫ˇt


32 #unde‡
°∫˝y


33 #ifde‡
__USE_GNU


34 #unde‡
memp˝y


35 #unde‡
°p˝y


37 #ifde‡
__USE_BSD


38 #unde‡
bc›y


39 #unde‡
bzîo


43 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

44 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

45 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

46 : 
	`__mem˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

47 
__Æways_ölöe
 *

48 
__NTH
 (
	$__mem˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

55 
	#memmove
(
de°
, 
§c
, 
Àn
) \

56 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

57 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

58 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
))

	)

59 
__Æways_ölöe
 *

60 
__NTH
 (
	$__memmove_ichk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

62  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

63 
	}
}

66 #ifde‡
__USE_GNU


67 
	#memp˝y
(
de°
, 
§c
, 
Àn
) \

68 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

69 ? 
	`__buûtö___memp˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

70 : 
	`__memp˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

71 
__Æways_ölöe
 *

72 
__NTH
 (
	$__memp˝y_ichk
 (*
__ª°ri˘
 
__de°
,

73 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
))

75  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

76 
	}
}

85 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

87 
	#mem£t
(
de°
, 
ch
, 
Àn
) \

88 (
	`__buûtö_c⁄°™t_p
 (
Àn
) && (len) == 0 \

89 ? (
	`__w¨n_mem£t_zîo_Àn
 (), (Ë(
ch
), (Ë(
Àn
), (*Ë(
de°
)) \

90 : ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

91 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
ch
, 
Àn
, 
	`__bos0
 (dest)) \

92 : 
	`__mem£t_ichk
 (
de°
, 
ch
, 
Àn
)))

	)

93 
__Æways_ölöe
 *

94 
__NTH
 (
	$__mem£t_ichk
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

96  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

97 
	}
}

99 #ifde‡
__USE_BSD


100 
	#bc›y
(
§c
, 
de°
, 
Àn
) (() \

101 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

102 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

103 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
)))

	)

104 
	#bzîo
(
de°
, 
Àn
) (() \

105 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

106 ? 
	`__buûtö___mem£t_chk
 (
de°
, '\0', 
Àn
, 
	`__bos0
 (dest)) \

107 : 
	`__mem£t_ichk
 (
de°
, '\0', 
Àn
)))

	)

111 
	#°r˝y
(
de°
, 
§c
) \

112 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

113 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

114 : 
	`__°r˝y_ichk
 (
de°
, 
§c
))

	)

115 
__Æways_ölöe
 *

116 
__NTH
 (
	$__°r˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

118  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

119 
	}
}

122 #ifde‡
__USE_GNU


123 
	#°p˝y
(
de°
, 
§c
) \

124 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

125 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

126 : 
	`__°p˝y_ichk
 (
de°
, 
§c
))

	)

127 
__Æways_ölöe
 *

128 
__NTH
 (
	$__°p˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

130  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

131 
	}
}

135 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

136 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

137 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

138 : 
	`__°∫˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

139 
__Æways_ölöe
 *

140 
__NTH
 (
	$__°∫˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

141 
size_t
 
__Àn
))

143  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

144 
	}
}

148 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

149 
size_t
 
__de°Àn
Ë
__THROW
;

150 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

151 
__c⁄°
 *
__§c
,

152 
size_t
 
__n
), 
°≤˝y
);

154 
__Æways_ölöe
 *

155 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

158 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

159  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

160  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

161 
	}
}

164 
	#°rˇt
(
de°
, 
§c
) \

165 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

166 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

167 : 
	`__°rˇt_ichk
 (
de°
, 
§c
))

	)

168 
__Æways_ölöe
 *

169 
__NTH
 (
	$__°rˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

171  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

172 
	}
}

175 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

176 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

177 ? 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

178 : 
	`__°∫ˇt_ichk
 (
de°
, 
§c
, 
Àn
))

	)

179 
__Æways_ölöe
 *

180 
__NTH
 (
	$__°∫ˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

181 
size_t
 
__Àn
))

183  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

184 
	}
}

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	t__u_ch¨
;

35 
	t__u_sh‹t
;

36 
	t__u_öt
;

37 
	t__u_l⁄g
;

40 sig√d 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 sig√d 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 sig√d 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 #i‡
__WORDSIZE
 == 64

47 sig√d 
	t__öt64_t
;

48 
	t__uöt64_t
;

49 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


50 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

51 
__exãnsi⁄__
 
	t__uöt64_t
;

55 #i‡
__WORDSIZE
 == 64

56 
	t__quad_t
;

57 
	t__u_quad_t
;

58 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


59 
__exãnsi⁄__
 
	t__quad_t
;

60 
__exãnsi⁄__
 
	t__u_quad_t
;

64 
	m__vÆ
[2];

65 } 
	t__quad_t
;

68 
__u_l⁄g
 
	m__vÆ
[2];

69 } 
	t__u_quad_t
;

102 
	#__S16_TYPE
 

	)

103 
	#__U16_TYPE
 

	)

104 
	#__S32_TYPE
 

	)

105 
	#__U32_TYPE
 

	)

106 
	#__SLONGWORD_TYPE
 

	)

107 
	#__ULONGWORD_TYPE
 

	)

108 #i‡
__WORDSIZE
 == 32

109 
	#__SQUAD_TYPE
 
__quad_t


	)

110 
	#__UQUAD_TYPE
 
__u_quad_t


	)

111 
	#__SWORD_TYPE
 

	)

112 
	#__UWORD_TYPE
 

	)

113 
	#__SLONG32_TYPE
 

	)

114 
	#__ULONG32_TYPE
 

	)

115 
	#__S64_TYPE
 
__quad_t


	)

116 
	#__U64_TYPE
 
__u_quad_t


	)

119 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

120 #ñi‡
__WORDSIZE
 == 64

121 
	t__SQUAD_TYPE
 

	)

122 
	t__UQUAD_TYPE
 

	)

123 
	t__SWORD_TYPE
 

	)

124 
	t__UWORD_TYPE
 

	)

125 
	t__SLONG32_TYPE
 

	)

126 
	t__ULONG32_TYPE
 

	)

127 
	t__S64_TYPE
 

	)

128 
	t__U64_TYPE
 

	)

130 
	t__STD_TYPE
 

	)

134 
	~<bôs/ty≥sizes.h
>

137 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

138 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

139 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

140 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

141 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

142 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

143 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

144 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

145 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

146 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

147 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

148 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

149 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

150 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

151 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

152 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

153 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

154 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

156 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

157 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

158 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

161 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

164 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

167 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

172 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

173 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

176 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

177 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

180 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

181 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

183 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

187 
__off64_t
 
	t__loff_t
;

188 
__quad_t
 *
	t__qaddr_t
;

189 *
	t__ˇddr_t
;

192 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

195 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

198 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

29 
__Æways_ölöe
 
__wur
 
ssize_t


30 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

32 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

33 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

34  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

35  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

36 
	}
}

38 #ifde‡
__USE_UNIX98


39 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

40 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

41 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

42 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

43 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

44 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

45 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

46 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

47 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

48 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
__Æways_ölöe
 
__wur
 
ssize_t


52 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

54 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

55 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

56  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

57  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

58 
	}
}

60 
__Æways_ölöe
 
__wur
 
ssize_t


61 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

63 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

64 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

65  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

66  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

67 
	}
}

70 #ifde‡
__USE_LARGEFILE64


71 
__Æways_ölöe
 
__wur
 
ssize_t


72 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

75 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

76  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

77  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

78 
	}
}

82 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


83 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

84 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

85 
size_t
 
__buÊí
)

86 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

87 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

88 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

89 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

90 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

92 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


93 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

94 
size_t
 
__Àn
))

96 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

97 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__buf
)))

98  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

99  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

100 
	}
}

103 #ifde‡
__USE_ATFILE


104 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

105 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

106 
size_t
 
__buÊí
)

107 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

108 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

109 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

110 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

111 
ªadlök©
)

112 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

114 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


115 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

116 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

118 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__buf
)))

120  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

121  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

122 
	}
}

125 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

126 
__THROW
 
__wur
;

127 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

128 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

130 
__Æways_ölöe
 
__wur
 *

131 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

133 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

134 && (!
	`__buûtö_c⁄°™t_p
 (
__size
Ë|| __sizê> 
	`__bos
 (
__buf
)))

135  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

136  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

137 
	}
}

139 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


140 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

141 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

142 *
	`__REDIRECT_NTH
 (
__gëwd_Æüs
, (*
__buf
), 
gëwd
)

143 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

145 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

146 
	`__NTH
 (
	$gëwd
 (*
__buf
))

148 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

149  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

150  
	`__gëwd_Æüs
 (
__buf
);

151 
	}
}

154 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

155 
size_t
 
__buÊí
Ë
__THROW
;

156 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

157 
size_t
 
__Àn
), 
c⁄f°r
);

159 
__Æways_ölöe
 
size_t


160 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

162 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

163 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| 
	`__bos
 (
__buf
) < __len))

164  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

165  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

166 
	}
}

169 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
li°Àn
)

170 
__THROW
 
__wur
;

171 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

172 
gëgroups
Ë
__wur
;

174 
__Æways_ölöe
 

175 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

177 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1

178 && (!
	`__buûtö_c⁄°™t_p
 (
__size
)

179 || 
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
)))

180  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

181  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

182 
	}
}

185 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

186 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

187 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

188 
size_t
 
__buÊí
), 
ây«me_r
)

189 
	`__n⁄nuŒ
 ((2));

191 
__Æways_ölöe
 

192 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

194 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

195 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

196  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

197  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

198 
	}
}

201 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


202 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

203 
	`__n⁄nuŒ
 ((1));

204 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

205 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

207 
__Æways_ölöe
 

208 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

210 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

211 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

212  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

213  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

214 
	}
}

218 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


219 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

220 
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

222 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

224 
__Æways_ölöe
 

225 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

227 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

228 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

229  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

230  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

231 
	}
}

235 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

236 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

237 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

238 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

239 
size_t
 
__buÊí
),

240 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

242 
__Æways_ölöe
 

243 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

245 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

246 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

247  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

248  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

249 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_POSIX


95 #unde‡
__USE_POSIX2


96 #unde‡
__USE_POSIX199309


97 #unde‡
__USE_POSIX199506


98 #unde‡
__USE_XOPEN


99 #unde‡
__USE_XOPEN_EXTENDED


100 #unde‡
__USE_UNIX98


101 #unde‡
__USE_XOPEN2K


102 #unde‡
__USE_LARGEFILE


103 #unde‡
__USE_LARGEFILE64


104 #unde‡
__USE_FILE_OFFSET64


105 #unde‡
__USE_BSD


106 #unde‡
__USE_SVID


107 #unde‡
__USE_MISC


108 #unde‡
__USE_ATFILE


109 #unde‡
__USE_GNU


110 #unde‡
__USE_REENTRANT


111 #unde‡
__USE_FORTIFY_LEVEL


112 #unde‡
__FAVOR_BSD


113 #unde‡
__KERNEL_STRICT_NAMES


117 #i‚de‡
_LOOSE_KERNEL_NAMES


118 
	#__KERNEL_STRICT_NAMES


	)

122 
	#__USE_ANSI
 1

	)

131 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


132 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

133 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

135 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

140 #i‡
deföed
 
_BSD_SOURCE
 && \

141 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

142 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

143 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

144 
	#__FAVOR_BSD
 1

	)

148 #ifde‡
_GNU_SOURCE


149 #unde‡
_ISOC99_SOURCE


150 
	#_ISOC99_SOURCE
 1

	)

151 #unde‡
_POSIX_SOURCE


152 
	#_POSIX_SOURCE
 1

	)

153 #unde‡
_POSIX_C_SOURCE


154 
	#_POSIX_C_SOURCE
 200112L

	)

155 #unde‡
_XOPEN_SOURCE


156 
	#_XOPEN_SOURCE
 600

	)

157 #unde‡
_XOPEN_SOURCE_EXTENDED


158 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

159 #unde‡
_LARGEFILE64_SOURCE


160 
	#_LARGEFILE64_SOURCE
 1

	)

161 #unde‡
_BSD_SOURCE


162 
	#_BSD_SOURCE
 1

	)

163 #unde‡
_SVID_SOURCE


164 
	#_SVID_SOURCE
 1

	)

165 #unde‡
_ATFILE_SOURCE


166 
	#_ATFILE_SOURCE
 1

	)

171 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

172 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

173 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

174 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

175 
	#_BSD_SOURCE
 1

	)

176 
	#_SVID_SOURCE
 1

	)

183 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

184 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

185 
	#__USE_ISOC99
 1

	)

190 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

191 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

192 
	#_POSIX_SOURCE
 1

	)

193 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

194 
	#_POSIX_C_SOURCE
 2

	)

195 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

196 
	#_POSIX_C_SOURCE
 199506L

	)

198 
	#_POSIX_C_SOURCE
 200112L

	)

202 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


203 
	#__USE_POSIX
 1

	)

206 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


207 
	#__USE_POSIX2
 1

	)

210 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

211 
	#__USE_POSIX199309
 1

	)

214 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

215 
	#__USE_POSIX199506
 1

	)

218 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

219 
	#__USE_XOPEN2K
 1

	)

222 #ifdef 
_XOPEN_SOURCE


223 
	#__USE_XOPEN
 1

	)

224 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

225 
	#__USE_XOPEN_EXTENDED
 1

	)

226 
	#__USE_UNIX98
 1

	)

227 #unde‡
_LARGEFILE_SOURCE


228 
	#_LARGEFILE_SOURCE
 1

	)

229 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

230 
	#__USE_XOPEN2K
 1

	)

231 #unde‡
__USE_ISOC99


232 
	#__USE_ISOC99
 1

	)

235 #ifde‡
_XOPEN_SOURCE_EXTENDED


236 
	#__USE_XOPEN_EXTENDED
 1

	)

241 #ifde‡
_LARGEFILE_SOURCE


242 
	#__USE_LARGEFILE
 1

	)

245 #ifde‡
_LARGEFILE64_SOURCE


246 
	#__USE_LARGEFILE64
 1

	)

249 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

250 
	#__USE_FILE_OFFSET64
 1

	)

253 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


254 
	#__USE_MISC
 1

	)

257 #ifdef 
_BSD_SOURCE


258 
	#__USE_BSD
 1

	)

261 #ifdef 
_SVID_SOURCE


262 
	#__USE_SVID
 1

	)

265 #ifdef 
_ATFILE_SOURCE


266 
	#__USE_ATFILE
 1

	)

269 #ifdef 
_GNU_SOURCE


270 
	#__USE_GNU
 1

	)

273 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


274 
	#__USE_REENTRANT
 1

	)

277 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

278 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

279 #i‡
_FORTIFY_SOURCE
 > 1

280 
	#__USE_FORTIFY_LEVEL
 2

	)

282 
	#__USE_FORTIFY_LEVEL
 1

	)

285 
	#__USE_FORTIFY_LEVEL
 0

	)

289 
	#__STDC_IEC_559__
 1

	)

290 
	#__STDC_IEC_559_COMPLEX__
 1

	)

293 
	#__STDC_ISO_10646__
 200009L

	)

301 #unde‡
__GNU_LIBRARY__


302 
	#__GNU_LIBRARY__
 6

	)

306 
	#__GLIBC__
 2

	)

307 
	#__GLIBC_MINOR__
 4

	)

309 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

310 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

313 #i‡
deföed
 
__GNUC__
 \

314 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

315 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

316 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

317 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

321 #i‚de‡
__ASSEMBLER__


322 #i‚de‡
_SYS_CDEFS_H


323 
	~<sys/cdefs.h
>

328 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


329 
	#__USE_LARGEFILE
 1

	)

330 
	#__USE_LARGEFILE64
 1

	)

336 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

337 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


338 
	#__USE_EXTERN_INLINES
 1

	)

346 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

69 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET
 (˝u, cpu£ç)

	)

70 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR
 (˝u, cpu£ç)

	)

71 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET
 (˝u, cpu£ç)

	)

72 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO
 (˝u£ç)

	)

76 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

77 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

80 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

81 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


346 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

348 
	~<bôs/sig°ack.h
>

349 #ifde‡
__USE_XOPEN


351 
	~<sys/uc⁄ãxt.h
>

357 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

358 
__THROW
 
__©åibuã_dïªˇãd__
;

362 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

363 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

367 #ifde‡
__USE_XOPEN_EXTENDED


371 
	$sighﬁd
 (
__sig
Ë
__THROW
;

374 
	$sigªl£
 (
__sig
Ë
__THROW
;

377 
	$sigign‹e
 (
__sig
Ë
__THROW
;

380 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

383 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


386 
	~<bôs/±hªadty≥s.h
>

387 
	~<bôs/sigthªad.h
>

394 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

396 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

400 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

138 #i‡
__GNUC_PREREQ
 (2,97)

140 
	#__Êex¨r
 []

	)

142 #ifde‡
__GNUC__


143 
	#__Êex¨r
 [0]

	)

145 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

146 
	#__Êex¨r
 []

	)

149 
	#__Êex¨r
 [1]

	)

165 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

167 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

168 #ifde‡
__˝lu•lus


169 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

170 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

172 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

173 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

175 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

176 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

189 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

190 
	#__©åibuã__
(
xyz
Ë

	)

196 #i‡
__GNUC_PREREQ
 (2,96)

197 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

199 
	#__©åibuã_mÆloc__


	)

205 #i‡
__GNUC_PREREQ
 (2,96)

206 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

208 
	#__©åibuã_puª__


	)

214 #i‡
__GNUC_PREREQ
 (3,1)

215 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

216 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

218 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

219 
	#__©åibuã_noölöe__


	)

223 #i‡
__GNUC_PREREQ
 (3,2)

224 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

226 
	#__©åibuã_dïªˇãd__


	)

235 #i‡
__GNUC_PREREQ
 (2,8)

236 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

238 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

245 #i‡
__GNUC_PREREQ
 (2,97)

246 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

247 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

249 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

254 #i‡
__GNUC_PREREQ
 (3,3)

255 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

257 
	#__n⁄nuŒ
(
∑øms
)

	)

262 #i‡
__GNUC_PREREQ
 (3,4)

263 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

264 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

265 #i‡
__USE_FORTIFY_LEVEL
 > 0

266 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

269 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

271 #i‚de‡
__wur


272 
	#__wur


	)

276 #i‡
__GNUC_PREREQ
 (3,2)

277 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

279 
	#__Æways_ölöe
 
__ölöe


	)

286 #i‡!
__GNUC_PREREQ
 (2,8)

287 
	#__exãnsi⁄__


	)

291 #i‡!
__GNUC_PREREQ
 (2,92)

292 
	#__ª°ri˘


	)

298 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


299 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

301 #ifde‡
__GNUC__


302 
	#__ª°ri˘_¨r


	)

304 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

305 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

308 
	#__ª°ri˘_¨r


	)

313 
	~<bôs/w‹dsize.h
>

315 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


316 
	#__LDBL_COMPAT
 1

	)

317 #ifde‡
__REDIRECT


318 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

319 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

320 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

321 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

322 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

323 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

324 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

325 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

326 
	#__LDBL_REDIR_DECL
(
«me
) \

327 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

330 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


331 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

332 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

333 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

334 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

335 
	#__LDBL_REDIR_DECL
(
«me
)

	)

	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

50 
ssize_t
 
wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

52 
	g__END_DECLS


	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/asm/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

36 #ifde‡
__USE_MISC


38 
	#CSIGNAL
 0x000000f‡

	)

39 
	#CLONE_VM
 0x00000100

	)

40 
	#CLONE_FS
 0x00000200

	)

41 
	#CLONE_FILES
 0x00000400

	)

42 
	#CLONE_SIGHAND
 0x00000800

	)

43 
	#CLONE_PTRACE
 0x00002000

	)

44 
	#CLONE_VFORK
 0x00004000

	)

46 
	#CLONE_PARENT
 0x00008000

	)

48 
	#CLONE_THREAD
 0x00010000

	)

49 
	#CLONE_NEWNS
 0x00020000

	)

50 
	#CLONE_SYSVSEM
 0x00040000

	)

51 
	#CLONE_SETTLS
 0x00080000

	)

52 
	#CLONE_PARENT_SETTID
 0x00100000

	)

54 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

56 
	#CLONE_DETACHED
 0x00400000

	)

57 
	#CLONE_UNTRACED
 0x00800000

	)

59 
	#CLONE_CHILD_SETTID
 0x01000000

	)

61 
	#CLONE_STOPPED
 0x02000000

	)

65 
	ssched_∑øm


67 
	m__sched_¥i‹ôy
;

70 
	g__BEGIN_DECLS


72 #ifde‡
__USE_MISC


74 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

75 
__Êags
, *
__¨g
, ...Ë
__THROW
;

78 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

81 
__END_DECLS


85 #i‡!
deföed
 
__deföed_sched∑øm
 \

86 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

87 
	#__deföed_sched∑øm
 1

	)

89 
	s__sched_∑øm


91 
__sched_¥i‹ôy
;

93 #unde‡
__√ed_sched∑øm


97 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


98 
	#__˝u_£t_t_deföed


	)

100 
	#__CPU_SETSIZE
 1024

	)

101 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

104 
	t__˝u_mask
;

107 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

108 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

113 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

114 } 
	t˝u_£t_t
;

117 
	#__CPU_ZERO
(
˝u£ç
) \

119 
__i
; \

120 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

121 
__i
 = 0; __ò<  (
˝u_£t_t
Ë/  (
__˝u_mask
); ++__i) \

122 
__¨r
->
__bôs
[
__i
] = 0; \

123 
	}
} 0)

	)

124 
	#__CPU_SET
(
˝u
, 
˝u£ç
) \

125 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] |
	`__CPUMASK
 (˝u))

	)

126 
	#__CPU_CLR
(
˝u
, 
˝u£ç
) \

127 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] &~
	`__CPUMASK
 (˝u))

	)

128 
	#__CPU_ISSET
(
˝u
, 
˝u£ç
) \

129 (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] & 
	`__CPUMASK
 (˝u)Ë!0)

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

6 #ifde‡
__KERNEL__


9 
	#ERESTARTSYS
 512

	)

10 
	#ERESTARTNOINTR
 513

	)

11 
	#ERESTARTNOHAND
 514

	)

12 
	#ENOIOCTLCMD
 515

	)

13 
	#ERESTART_RESTARTBLOCK
 516

	)

16 
	#EBADHANDLE
 521

	)

17 
	#ENOTSYNC
 522

	)

18 
	#EBADCOOKIE
 523

	)

19 
	#ENOTSUPP
 524

	)

20 
	#ETOOSMALL
 525

	)

21 
	#ESERVERFAULT
 526

	)

22 
	#EBADTYPE
 527

	)

23 
	#EJUKEBOX
 528

	)

24 
	#EIOCBQUEUED
 529

	)

25 
	#EIOCBRETRY
 530

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__exãnsi⁄__


30 
__ölöe
 
	$gnu_dev_maj‹
 (
__dev
)

31 
__THROW
;

32 
__exãnsi⁄__


33 
__ölöe
 
	$gnu_dev_mö‹
 (
__dev
)

34 
__THROW
;

35 
__exãnsi⁄__


36 
__ölöe
 
	$gnu_dev_makedev
 (
__maj‹
,

37 
__mö‹
)

38 
__THROW
;

40 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

41 
__exãnsi⁄__
 
__ölöe
 

42 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

44  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

45 
	}
}

47 
__exãnsi⁄__
 
__ölöe
 

48 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

50  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

51 
	}
}

53 
__exãnsi⁄__
 
__ölöe
 

54 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

56  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

57 | (((Ë(
__mö‹
 & ~0xff)) << 12)

58 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

59 
	}
}

64 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

65 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

66 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/asm/errno.h

1 #i‚de‡
_I386_ERRNO_H


2 
	#_I386_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASMi386_SIGCONTEXT_H


2 
	#_ASMi386_SIGCONTEXT_H


	)

4 
	~<löux/compûî.h
>

20 
	s_Âªg
 {

21 
	msignifiˇnd
[4];

22 
	mexp⁄ít
;

25 
	s_Âxªg
 {

26 
	msignifiˇnd
[4];

27 
	mexp⁄ít
;

28 
	m∑ddög
[3];

31 
	s_xmmªg
 {

32 
	mñemít
[4];

35 
	s_Â°©e
 {

37 
	mcw
;

38 
	msw
;

39 
	mèg
;

40 
	mùoff
;

41 
	mcs£l
;

42 
	md©aoff
;

43 
	md©a£l
;

44 
_Âªg
 
	m_°
[8];

45 
	m°©us
;

46 
	mmagic
;

49 
	m_fx§_ív
[6];

50 
	mmxc§
;

51 
	mª£rved
;

52 
_Âxªg
 
	m_fx§_°
[8];

53 
_xmmªg
 
	m_xmm
[8];

54 
	m∑ddög
[56];

57 
	#X86_FXSR_MAGIC
 0x0000

	)

59 
	ssigc⁄ãxt
 {

60 
	mgs
, 
	m__gsh
;

61 
	mfs
, 
	m__fsh
;

62 
	mes
, 
	m__esh
;

63 
	mds
, 
	m__dsh
;

64 
	medi
;

65 
	mesi
;

66 
	mebp
;

67 
	me•
;

68 
	mebx
;

69 
	medx
;

70 
	mecx
;

71 
	móx
;

72 
	må≠no
;

73 
	mîr
;

74 
	meù
;

75 
	mcs
, 
	m__csh
;

76 
	meÊags
;

77 
	me•_©_sig«l
;

78 
	mss
, 
	m__ssh
;

79 
_Â°©e
 
__u£r
 * 
	mÂ°©e
;

80 
	mﬁdmask
;

81 
	m¸2
;

	@/usr/include/asm/sockios.h

1 #i‚de‡
__ARCH_I386_SOCKIOS__


2 
	#__ARCH_I386_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

26 
	#__FD_ZERO
(
fd•
) \

28 
__d0
, 
__d1
; \

29 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

30 : "=c" (
__d0
), "=D" (
__d1
) \

31 : "a" (0), "0" ( (
fd_£t
) \

32 /  (
__fd_mask
)), \

33 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

35 } 0)

	)

37 
	#__FD_SET
(
fd
, 
fd•
) \

38 
__asm__
 
	`__vﬁ©ûe__
 ("btsl %1,%0" \

39 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

40 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

41 : "cc","mem‹y")

	)

42 
	#__FD_CLR
(
fd
, 
fd•
) \

43 
__asm__
 
	`__vﬁ©ûe__
 ("btrl %1,%0" \

44 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

45 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

46 : "cc","mem‹y")

	)

47 
	#__FD_ISSET
(
fd
, 
fd•
) \

48 (
__exãnsi⁄__
 \

49 ({
__ªsu…
; \

50 
__asm__
 
	`__vﬁ©ûe__
 ("btl %1,%2 ; setcb %b0" \

51 : "=q" (
__ªsu…
) \

52 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

53 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

55 
__ªsu…
; }))

	)

61 
	#__FD_ZERO
(
£t
) \

63 
__i
; \

64 
fd_£t
 *
__¨r
 = (
£t
); \

65 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

66 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

67 } 0)

	)

68 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

69 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

70 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_lutimes


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_sigªtu∫


	)

23 
	#__°ub_s°k


	)

24 
	#__°ub_°ty


	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 #unde‡
PTHREAD_THREADS_MAX


71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#DELAYTIMER_MAX
 2147483647

	)

80 
	#TTY_NAME_MAX
 32

	)

83 
	#LOGIN_NAME_MAX
 256

	)

86 
	#HOST_NAME_MAX
 64

	)

89 
	#MQ_PRIO_MAX
 32768

	)

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/linux/compiler.h

1 #i‚de‡
__LINUX_COMPILER_H


2 
	#__LINUX_COMPILER_H


	)

4 #i‚de‡
__ASSEMBLY__


6 #ifde‡
__CHECKER__


7 
	#__u£r
 
	`__©åibuã__
((
nodîef
, 
	`addªss_•a˚
(1)))

	)

8 
	#__kî√l


	)

9 
	#__ß„
 
	`__©åibuã__
((
ß„
))

	)

10 
	#__f‹˚
 
	`__©åibuã__
((
f‹˚
))

	)

11 
	#__noˇ°
 
	`__©åibuã__
((
noˇ°
))

	)

12 
	#__iomem
 
	`__©åibuã__
((
nodîef
, 
	`addªss_•a˚
(2)))

	)

13 
	#__acquúes
(
x
Ë
	`__©åibuã__
((
	`c⁄ãxt
(x,0,1)))

	)

14 
	#__ªÀa£s
(
x
Ë
	`__©åibuã__
((
	`c⁄ãxt
(x,1,0)))

	)

15 
	#__acquúe
(
x
Ë
	`__c⁄ãxt__
(x,1)

	)

16 
	#__ªÀa£
(
x
Ë
	`__c⁄ãxt__
(x,-1)

	)

17 
	#__c⁄d_lock
(
x
,
c
Ë((cË? ({ 
	`__acquúe
(x); 1; }Ë: 0)

	)

18 
__chk_u£r_±r
(c⁄° 
__u£r
 *);

19 
__chk_io_±r
(c⁄° 
__iomem
 *);

21 
	#__u£r


	)

22 
	#__kî√l


	)

23 
	#__ß„


	)

24 
	#__f‹˚


	)

25 
	#__noˇ°


	)

26 
	#__iomem


	)

27 
	#__chk_u£r_±r
(
x
Ë()0

	)

28 
	#__chk_io_±r
(
x
Ë()0

	)

29 
	#__buûtö_w¨nög
(
x
, 
y
...Ë(1)

	)

30 
	#__acquúes
(
x
)

	)

31 
	#__ªÀa£s
(
x
)

	)

32 
	#__acquúe
(
x
Ë()0

	)

33 
	#__ªÀa£
(
x
Ë()0

	)

34 
	#__c⁄d_lock
(
x
,
c
Ë(c)

	)

37 #ifde‡
__KERNEL__


39 #i‡
__GNUC__
 > 4

40 #îr‹ 
no
 
compûî
-
gcc
.
h
 
fûe
 
this
 gc¯
vîsi⁄


41 #ñi‡
__GNUC__
 == 4

42 
	~<löux/compûî-gcc4.h
>

43 #ñi‡
__GNUC__
 =3 && 
__GNUC_MINOR__
 >= 2

44 
	~<löux/compûî-gcc3.h
>

46 #îr‹ 
S‹ry
, 
your
 
compûî
 
is
 
too
 
ﬁd
/
nŸ
 
ªcognized
.

52 #ifde‡
__INTEL_COMPILER


53 
	~<löux/compûî-öãl.h
>

62 
	#likñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

63 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

66 #i‚de‡
b¨rõr


67 
	#b¨rõr
(Ë
	`__mem‹y_b¨rõr
()

	)

70 #i‚de‡
RELOC_HIDE


71 
	#RELOC_HIDE
(
±r
, 
off
) \

72 ({ 
__±r
; \

73 
__±r
 = (Ë(
±r
); \

74 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

81 #ifde‡
__KERNEL__


88 #i‚de‡
__dïªˇãd


89 
	#__dïªˇãd


	)

92 #ifde‡
MODULE


93 
	#__dïªˇãd_f‹_moduÀs
 
__dïªˇãd


	)

95 
	#__dïªˇãd_f‹_moduÀs


	)

98 #i‚de‡
__mu°_check


99 
	#__mu°_check


	)

102 #i‚de‡
CONFIG_ENABLE_MUST_CHECK


103 #unde‡
__mu°_check


104 
	#__mu°_check


	)

118 #i‚de‡
__©åibuã_u£d__


119 
	#__©åibuã_u£d__


	)

132 #i‚de‡
__©åibuã_puª__


133 
	#__©åibuã_puª__


	)

136 #i‚de‡
noölöe


137 
	#noölöe


	)

140 #i‚de‡
__Æways_ölöe


141 
	#__Æways_ölöe
 
ölöe


	)

160 #i‚de‡
__©åibuã_c⁄°__


161 
	#__©åibuã_c⁄°__


	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/linux/compiler-gcc3.h

4 
	~<löux/compûî-gcc.h
>

6 #i‡
__GNUC_MINOR__
 >= 3

7 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__u£d__
))

	)

9 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__unu£d__
))

	)

12 #i‡
__GNUC_MINOR__
 >= 4

13 
	#__mu°_check
 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
))

	)

16 
	#__Æways_ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

	@/usr/include/linux/compiler-gcc4.h

4 
	~<löux/compûî-gcc.h
>

6 #ifde‡
CONFIG_FORCED_INLINING


7 #unde‡
ölöe


8 #unde‡
__ölöe__


9 #unde‡
__ölöe


10 
	#ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

11 
	#__ölöe__
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

12 
	#__ölöe
 
__ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

15 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__u£d__
))

	)

16 
	#__mu°_check
 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
))

	)

17 
	#__compûî_off£tof
(
a
,
b
Ë
	`__buûtö_off£tof
◊,b)

	)

18 
	#__Æways_ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

	@/usr/include/linux/compiler-intel.h

3 #ifde‡
__ECC


9 
	~<asm/öåösics.h
>

14 #unde‡
b¨rõr


15 #unde‡
RELOC_HIDE


17 
	#b¨rõr
(Ë
	`__mem‹y_b¨rõr
()

	)

19 
	#RELOC_HIDE
(
±r
, 
off
) \

20 ({ 
__±r
; \

21 
__±r
 = (Ë(
±r
); \

22 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#CHILD_MAX
 999

	)

9 
	#OPEN_MAX
 256

	)

10 
	#LINK_MAX
 127

	)

11 
	#MAX_CANON
 255

	)

12 
	#MAX_INPUT
 255

	)

13 
	#NAME_MAX
 255

	)

14 
	#PATH_MAX
 4096

	)

15 
	#PIPE_BUF
 4096

	)

16 
	#XATTR_NAME_MAX
 255

	)

17 
	#XATTR_SIZE_MAX
 65536

	)

18 
	#XATTR_LIST_MAX
 65536

	)

20 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/compiler-gcc.h

10 
	#b¨rõr
(Ë
__asm__
 
	`__vﬁ©ûe__
("": : :"mem‹y")

	)

20 
	#RELOC_HIDE
(
±r
, 
off
) \

21 ({ 
__±r
; \

22 
	`__asm__
 ("" : "Ù"(
__±r
Ë: "0"(
±r
)); \

23 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

26 
	#ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

27 
	#__ölöe__
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

28 
	#__ölöe
 
__ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

29 
	#__dïªˇãd
 
	`__©åibuã__
((
dïªˇãd
))

	)

30 
	#__∑cked
 
	`__©åibuã__
((
∑cked
))

	)

31 
	#__wók
 
	`__©åibuã__
((
wók
))

	)

32 
	#__«ked
 
	`__©åibuã__
((
«ked
))

	)

33 
	#__n‹ëu∫
 
	`__©åibuã__
((
n‹ëu∫
))

	)

34 
	#__puª
 
	`__©åibuã__
((
puª
))

	)

35 
	#__Æig√d
(
x
Ë
	`__©åibuã__
((
	`Æig√d
(x)))

	)

36 
	#__¥ötf
(
a
,
b
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,a,b)))

	)

37 
	#noölöe
 
	`__©åibuã__
((
noölöe
))

	)

38 
	#__©åibuã_puª__
 
	`__©åibuã__
((
puª
))

	)

39 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
((
__c⁄°__
))

	)

	@
1
.
1
/usr/include
108
2636
BuddyList.h
action.h
bits.h
buddy.h
config.h
login.h
magic_shit.h
md5.c
md5.h
message_base.h
priorityQueue.h
sha.c
sha.h
socket.h
thread.h
unix_std_space.h
ypacket.h
/usr/include/arpa/inet.h
/usr/include/errno.h
/usr/include/math.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/socket.h
/usr/include/sys/un.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/sys/cdefs.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/sched.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/time.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/limits.h
/usr/include/linux/errno.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/asm/errno.h
/usr/include/asm/sigcontext.h
/usr/include/asm/sockios.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/select.h
/usr/include/bits/xopen_lim.h
/usr/include/gnu/stubs-32.h
/usr/include/asm-generic/errno.h
/usr/include/bits/local_lim.h
/usr/include/bits/stdio_lim.h
/usr/include/linux/compiler.h
/usr/include/asm-generic/errno-base.h
/usr/include/linux/compiler-gcc3.h
/usr/include/linux/compiler-gcc4.h
/usr/include/linux/compiler-intel.h
/usr/include/linux/limits.h
/usr/include/linux/compiler-gcc.h
